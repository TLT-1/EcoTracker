{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Driving from \"../pages/Driving\";\nimport Energy from \"../pages/Energy\";\nimport Navbar from \"../Navbar\";\nimport Footer from \"../Footer\";\nimport useResponsiveStyles from \"../Styles/TrackStyles\";\nimport Diet from \"./Diet\";\nimport Exercise from \"./Exercise\";\nimport Water from \"./Water\";\nimport Snowfall from 'react-snowfall';\nimport Fact from \"../Fact\";\nimport ThemeContext from \"../ThemeContext\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nvar _useContext = useContext(ThemeContext),\n  theme = _useContext.theme;\nfunction TrackOptions(_ref) {\n  var navigation = _ref.navigation;\n  var styles = useResponsiveStyles();\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isModalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Navbar, {}), _jsxs(ImageBackground, {\n      source: require(\"../../../assets/ecoBackground.png\"),\n      style: [styles.container, {\n        overflow: 'hidden'\n      }],\n      children: [theme === 'autumn' && _jsx(Snowfall, {\n        snowflakeCount: 100\n      }), theme === 'winter' && _jsx(Snowfall, {\n        snowflakeCount: 500\n      }), _jsxs(View, {\n        style: {\n          marginTop: -300,\n          alignItems: 'center'\n        },\n        children: [_jsx(Text, {\n          style: [styles.buttonText, {\n            fontSize: 24,\n            marginBottom: 50\n          }],\n          children: \"Choose An Option To Track\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.navigate('Driving');\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Driving\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.navigate('Energy');\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Energy\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.navigate('Diet');\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Diet\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.navigate('Exercise');\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Exercise\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.navigate('Water');\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Water\"\n          })\n        })]\n      }), _jsx(Image, {\n        source: theme === 'spring' ? require(\"../../../assets/springTree.png\") : theme === 'summer' ? require(\"../../../assets/summerTree.png\") : theme === 'autumn' ? require(\"../../../assets/autumnTree.png\") : require(\"../../../assets/winterTree.png\"),\n        style: {\n          position: 'absolute',\n          bottom: -40,\n          width: '100%',\n          height: 160\n        }\n      }), _jsx(Fact, {\n        isModalVisible: isModalVisible,\n        setModalVisible: setModalVisible\n      })]\n    }), _jsx(Footer, {\n      style: {\n        height: 18\n      },\n      navigation: navigation\n    })]\n  });\n}\nfunction TrackNav() {\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Track\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Track\",\n        component: TrackOptions,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Driving\",\n        component: Driving,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Energy\",\n        component: Energy,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Diet\",\n        component: Diet,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Exercise\",\n        component: Exercise,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Water\",\n        component: Water,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}\nexport default TrackNav;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Image","ImageBackground","StyleSheet","Button","createStackNavigator","Driving","Energy","Navbar","Footer","useResponsiveStyles","Diet","Exercise","Water","Snowfall","Fact","ThemeContext","jsx","_jsx","jsxs","_jsxs","Stack","_useContext","useContext","theme","TrackOptions","_ref","navigation","styles","_useState","_useState2","_slicedToArray","isModalVisible","setModalVisible","style","flex","children","source","require","container","overflow","snowflakeCount","marginTop","alignItems","buttonText","fontSize","marginBottom","button","onPress","navigate","position","bottom","width","height","TrackNav","Navigator","initialRouteName","Screen","name","component","options","headerShown"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/pages/TrackNav.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Image, ImageBackground, StyleSheet, Button } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Driving from '../pages/Driving';\r\nimport Energy from '../pages/Energy';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\nimport useResponsiveStyles from '../Styles/TrackStyles';\r\nimport Diet from './Diet';\r\nimport Exercise from './Exercise';\r\nimport Water from './Water';\r\nimport Snowfall from 'react-snowfall';\r\nimport Fact from '../Fact';\r\nimport ThemeContext from '../ThemeContext';\r\n\r\nconst Stack = createStackNavigator();\r\nconst { theme } = useContext(ThemeContext);\r\n\r\nfunction TrackOptions({ navigation }) {\r\n    const styles = useResponsiveStyles();\r\n    const [isModalVisible, setModalVisible] = useState(true);\r\n\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackground.png\")} style={[styles.container, { overflow: 'hidden' }]}>\r\n                {\r\n                    theme === 'autumn' && <Snowfall snowflakeCount={100} />\r\n                }\r\n                {\r\n                    theme === 'winter' && <Snowfall snowflakeCount={500} />\r\n                }\r\n                <View style={{ marginTop: -300, alignItems: 'center' }}>\r\n                    <Text style={[styles.buttonText, { fontSize: 24, marginBottom: 50 }]}>Choose An Option To Track</Text>\r\n                    <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Driving')}>\r\n                        <Text style={styles.buttonText}>Driving</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Energy')}>\r\n                        <Text style={styles.buttonText}>Energy</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Diet')}>\r\n                        <Text style={styles.buttonText}>Diet</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Exercise')}>\r\n                        <Text style={styles.buttonText}>Exercise</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Water')}>\r\n                        <Text style={styles.buttonText}>Water</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <Image\r\n                    source={theme === 'spring' ? require(\"../../../assets/springTree.png\") :\r\n                        theme === 'summer' ? require(\"../../../assets/summerTree.png\") :\r\n                            theme === 'autumn' ? require(\"../../../assets/autumnTree.png\") :\r\n                                require(\"../../../assets/winterTree.png\")}\r\n                    style={{ position: 'absolute', bottom: -40, width: '100%', height: 160 }} />\r\n                <Fact isModalVisible={isModalVisible} setModalVisible={setModalVisible} />\r\n            </ImageBackground>\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\nfunction TrackNav() {\r\n\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Stack.Navigator initialRouteName=\"Track\">\r\n                <Stack.Screen\r\n                    name=\"Track\"\r\n                    component={TrackOptions}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Driving\"\r\n                    component={Driving}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Energy\"\r\n                    component={Energy}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Diet\"\r\n                    component={Diet}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Exercise\"\r\n                    component={Exercise}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Water\"\r\n                    component={Water}\r\n                    options={{ headerShown: false }}\r\n                />\r\n            </Stack.Navigator>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default TrackNav;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAExC,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,OAAO;AACd,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,mBAAmB;AAC1B,OAAOC,IAAI;AACX,OAAOC,QAAQ;AACf,OAAOC,KAAK;AACZ,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,IAAI;AACX,OAAOC,YAAY;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE3C,IAAMC,KAAK,GAAGhB,oBAAoB,CAAC,CAAC;AACpC,IAAAiB,WAAA,GAAkBC,UAAU,CAACP,YAAY,CAAC;EAAlCQ,KAAK,GAAAF,WAAA,CAALE,KAAK;AAEb,SAASC,YAAYA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC9B,IAAMC,MAAM,GAAGlB,mBAAmB,CAAC,CAAC;EACpC,IAAAmB,SAAA,GAA0ChC,QAAQ,CAAC,IAAI,CAAC;IAAAiC,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjDG,cAAc,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAGtC,OACIV,KAAA,CAACtB,IAAI;IAACoC,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,GACrBlB,IAAA,CAACV,MAAM,IAAE,CAAC,EACVY,KAAA,CAAClB,eAAe;MAACmC,MAAM,EAAEC,OAAO,oCAAoC,CAAE;MAACJ,KAAK,EAAE,CAACN,MAAM,CAACW,SAAS,EAAE;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAE;MAAAJ,QAAA,GAEjHZ,KAAK,KAAK,QAAQ,IAAIN,IAAA,CAACJ,QAAQ;QAAC2B,cAAc,EAAE;MAAI,CAAE,CAAC,EAGvDjB,KAAK,KAAK,QAAQ,IAAIN,IAAA,CAACJ,QAAQ;QAAC2B,cAAc,EAAE;MAAI,CAAE,CAAC,EAE3DrB,KAAA,CAACtB,IAAI;QAACoC,KAAK,EAAE;UAAEQ,SAAS,EAAE,CAAC,GAAG;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAAP,QAAA,GACnDlB,IAAA,CAACnB,IAAI;UAACmC,KAAK,EAAE,CAACN,MAAM,CAACgB,UAAU,EAAE;YAAEC,QAAQ,EAAE,EAAE;YAAEC,YAAY,EAAE;UAAG,CAAC,CAAE;UAAAV,QAAA,EAAC;QAAyB,CAAM,CAAC,EACtGlB,IAAA,CAAClB,gBAAgB;UAACkC,KAAK,EAAEN,MAAM,CAACmB,MAAO;UAACC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMrB,UAAU,CAACsB,QAAQ,CAAC,SAAS,CAAC;UAAA,CAAC;UAAAb,QAAA,EAClFlB,IAAA,CAACnB,IAAI;YAACmC,KAAK,EAAEN,MAAM,CAACgB,UAAW;YAAAR,QAAA,EAAC;UAAO,CAAM;QAAC,CAChC,CAAC,EACnBlB,IAAA,CAAClB,gBAAgB;UAACkC,KAAK,EAAEN,MAAM,CAACmB,MAAO;UAACC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMrB,UAAU,CAACsB,QAAQ,CAAC,QAAQ,CAAC;UAAA,CAAC;UAAAb,QAAA,EACjFlB,IAAA,CAACnB,IAAI;YAACmC,KAAK,EAAEN,MAAM,CAACgB,UAAW;YAAAR,QAAA,EAAC;UAAM,CAAM;QAAC,CAC/B,CAAC,EACnBlB,IAAA,CAAClB,gBAAgB;UAACkC,KAAK,EAAEN,MAAM,CAACmB,MAAO;UAACC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMrB,UAAU,CAACsB,QAAQ,CAAC,MAAM,CAAC;UAAA,CAAC;UAAAb,QAAA,EAC/ElB,IAAA,CAACnB,IAAI;YAACmC,KAAK,EAAEN,MAAM,CAACgB,UAAW;YAAAR,QAAA,EAAC;UAAI,CAAM;QAAC,CAC7B,CAAC,EACnBlB,IAAA,CAAClB,gBAAgB;UAACkC,KAAK,EAAEN,MAAM,CAACmB,MAAO;UAACC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMrB,UAAU,CAACsB,QAAQ,CAAC,UAAU,CAAC;UAAA,CAAC;UAAAb,QAAA,EACnFlB,IAAA,CAACnB,IAAI;YAACmC,KAAK,EAAEN,MAAM,CAACgB,UAAW;YAAAR,QAAA,EAAC;UAAQ,CAAM;QAAC,CACjC,CAAC,EACnBlB,IAAA,CAAClB,gBAAgB;UAACkC,KAAK,EAAEN,MAAM,CAACmB,MAAO;UAACC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMrB,UAAU,CAACsB,QAAQ,CAAC,OAAO,CAAC;UAAA,CAAC;UAAAb,QAAA,EAChFlB,IAAA,CAACnB,IAAI;YAACmC,KAAK,EAAEN,MAAM,CAACgB,UAAW;YAAAR,QAAA,EAAC;UAAK,CAAM;QAAC,CAC9B,CAAC;MAAA,CACjB,CAAC,EACPlB,IAAA,CAACjB,KAAK;QACFoC,MAAM,EAAEb,KAAK,KAAK,QAAQ,GAAGc,OAAO,iCAAiC,CAAC,GAClEd,KAAK,KAAK,QAAQ,GAAGc,OAAO,iCAAiC,CAAC,GAC1Dd,KAAK,KAAK,QAAQ,GAAGc,OAAO,iCAAiC,CAAC,GAC1DA,OAAO,iCAAiC,CAAE;QACtDJ,KAAK,EAAE;UAAEgB,QAAQ,EAAE,UAAU;UAAEC,MAAM,EAAE,CAAC,EAAE;UAAEC,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAI;MAAE,CAAE,CAAC,EAChFnC,IAAA,CAACH,IAAI;QAACiB,cAAc,EAAEA,cAAe;QAACC,eAAe,EAAEA;MAAgB,CAAE,CAAC;IAAA,CAC7D,CAAC,EAClBf,IAAA,CAACT,MAAM;MAACyB,KAAK,EAAE;QAAEmB,MAAM,EAAE;MAAG,CAAE;MAAC1B,UAAU,EAAEA;IAAW,CAAE,CAAC;EAAA,CACvD,CAAC;AAEf;AAGA,SAAS2B,QAAQA,CAAA,EAAG;EAGhB,OACIpC,IAAA,CAACpB,IAAI;IAACoC,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,EACrBhB,KAAA,CAACC,KAAK,CAACkC,SAAS;MAACC,gBAAgB,EAAC,OAAO;MAAApB,QAAA,GACrClB,IAAA,CAACG,KAAK,CAACoC,MAAM;QACTC,IAAI,EAAC,OAAO;QACZC,SAAS,EAAElC,YAAa;QACxBmC,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACnC,CAAC,EACF3C,IAAA,CAACG,KAAK,CAACoC,MAAM;QACTC,IAAI,EAAC,SAAS;QACdC,SAAS,EAAErD,OAAQ;QACnBsD,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACnC,CAAC,EACF3C,IAAA,CAACG,KAAK,CAACoC,MAAM;QACTC,IAAI,EAAC,QAAQ;QACbC,SAAS,EAAEpD,MAAO;QAClBqD,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACnC,CAAC,EACF3C,IAAA,CAACG,KAAK,CAACoC,MAAM;QACTC,IAAI,EAAC,MAAM;QACXC,SAAS,EAAEhD,IAAK;QAChBiD,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACnC,CAAC,EACF3C,IAAA,CAACG,KAAK,CAACoC,MAAM;QACTC,IAAI,EAAC,UAAU;QACfC,SAAS,EAAE/C,QAAS;QACpBgD,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACnC,CAAC,EACF3C,IAAA,CAACG,KAAK,CAACoC,MAAM;QACTC,IAAI,EAAC,OAAO;QACZC,SAAS,EAAE9C,KAAM;QACjB+C,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACnC,CAAC;IAAA,CACW;EAAC,CAEhB,CAAC;AAEf;AAEA,eAAeP,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}