{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport NavbarStyles from \"./Styles/NavbarStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Navbar = function Navbar() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMenuOpen = _useState2[0],\n    setMenuOpen = _useState2[1];\n  var navigation = useNavigation();\n  var toggleMenu = function toggleMenu() {\n    setMenuOpen(!isMenuOpen);\n  };\n  var navigateToPage = function navigateToPage(page) {\n    navigation.navigate(page);\n    setMenuOpen(false);\n  };\n  return _jsxs(View, {\n    style: NavbarStyles.navbar,\n    children: [_jsx(TouchableOpacity, {\n      onPress: toggleMenu,\n      children: _jsx(Text, {\n        style: NavbarStyles.menuIcon,\n        children: \"\\u2630\"\n      })\n    }), isMenuOpen && _jsxs(View, {\n      style: NavbarStyles.menuContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigateToPage('Home');\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"Home\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigateToPage('Track');\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"Track\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigateToPage('News');\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"News\"\n        })\n      })]\n    })]\n  });\n};\nexport default Navbar;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","useNavigation","NavbarStyles","jsx","_jsx","jsxs","_jsxs","Navbar","_useState","_useState2","_slicedToArray","isMenuOpen","setMenuOpen","navigation","toggleMenu","navigateToPage","page","navigate","style","navbar","children","onPress","menuIcon","menuContainer","menuItem"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/Navbar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport NavbarStyles from './Styles/NavbarStyles';\r\n\r\nconst Navbar = () => {\r\n    const [isMenuOpen, setMenuOpen] = useState(false);\r\n    const navigation = useNavigation();\r\n\r\n    const toggleMenu = () => {\r\n        setMenuOpen(!isMenuOpen);\r\n    };\r\n\r\n    const navigateToPage = (page) => {\r\n        navigation.navigate(page);\r\n        setMenuOpen(false);\r\n    };\r\n\r\n    return (\r\n        <View style={NavbarStyles.navbar}>\r\n            <TouchableOpacity onPress={toggleMenu}>\r\n                <Text style={NavbarStyles.menuIcon}>â˜°</Text>\r\n            </TouchableOpacity>\r\n            {isMenuOpen && (\r\n                <View style={NavbarStyles.menuContainer}>\r\n                    <TouchableOpacity onPress={() => navigateToPage('Home')}>\r\n                        <Text style={NavbarStyles.menuItem}>Home</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigateToPage('Track')}>\r\n                        <Text style={NavbarStyles.menuItem}>Track</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigateToPage('News')}>\r\n                        <Text style={NavbarStyles.menuItem}>News</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAExC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,YAAY;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACjB,IAAAC,SAAA,GAAkCX,QAAQ,CAAC,KAAK,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,UAAU,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC9B,IAAMI,UAAU,GAAGZ,aAAa,CAAC,CAAC;EAElC,IAAMa,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACrBF,WAAW,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAED,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,IAAI,EAAK;IAC7BH,UAAU,CAACI,QAAQ,CAACD,IAAI,CAAC;IACzBJ,WAAW,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,OACIN,KAAA,CAACR,IAAI;IAACoB,KAAK,EAAEhB,YAAY,CAACiB,MAAO;IAAAC,QAAA,GAC7BhB,IAAA,CAACJ,gBAAgB;MAACqB,OAAO,EAAEP,UAAW;MAAAM,QAAA,EAClChB,IAAA,CAACL,IAAI;QAACmB,KAAK,EAAEhB,YAAY,CAACoB,QAAS;QAAAF,QAAA,EAAC;MAAC,CAAM;IAAC,CAC9B,CAAC,EAClBT,UAAU,IACPL,KAAA,CAACR,IAAI;MAACoB,KAAK,EAAEhB,YAAY,CAACqB,aAAc;MAAAH,QAAA,GACpChB,IAAA,CAACJ,gBAAgB;QAACqB,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMN,cAAc,CAAC,MAAM,CAAC;QAAA,CAAC;QAAAK,QAAA,EACpDhB,IAAA,CAACL,IAAI;UAACmB,KAAK,EAAEhB,YAAY,CAACsB,QAAS;UAAAJ,QAAA,EAAC;QAAI,CAAM;MAAC,CACjC,CAAC,EACnBhB,IAAA,CAACJ,gBAAgB;QAACqB,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMN,cAAc,CAAC,OAAO,CAAC;QAAA,CAAC;QAAAK,QAAA,EACrDhB,IAAA,CAACL,IAAI;UAACmB,KAAK,EAAEhB,YAAY,CAACsB,QAAS;UAAAJ,QAAA,EAAC;QAAK,CAAM;MAAC,CAClC,CAAC,EACnBhB,IAAA,CAACJ,gBAAgB;QAACqB,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMN,cAAc,CAAC,MAAM,CAAC;QAAA,CAAC;QAAAK,QAAA,EACpDhB,IAAA,CAACL,IAAI;UAACmB,KAAK,EAAEhB,YAAY,CAACsB,QAAS;UAAAJ,QAAA,EAAC;QAAI,CAAM;MAAC,CACjC,CAAC;IAAA,CACjB,CACT;EAAA,CACC,CAAC;AAEf,CAAC;AAED,eAAeb,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}