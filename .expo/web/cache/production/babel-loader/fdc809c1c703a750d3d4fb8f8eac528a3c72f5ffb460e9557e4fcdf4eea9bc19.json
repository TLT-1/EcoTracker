{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from'react';import View from\"react-native-web/dist/exports/View\";import Button from\"react-native-web/dist/exports/Button\";import Modal from\"react-native-web/dist/exports/Modal\";import Text from\"react-native-web/dist/exports/Text\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import FlatList from\"react-native-web/dist/exports/FlatList\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import InviteButton from\"./InviteButton\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var friendsList=[{id:'1',name:'Alice'},{id:'2',name:'Bob'},{id:'3',name:'Dave'}];var AddFriendsButton=function AddFriendsButton(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),modalVisible=_useState2[0],setModalVisible=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),addedFriends=_useState4[0],setAddedFriends=_useState4[1];var handleAddFriend=function handleAddFriend(friendId){if(addedFriends.includes(friendId)){setAddedFriends(addedFriends.filter(function(id){return id!==friendId;}));}else{setAddedFriends([].concat(_toConsumableArray(addedFriends),[friendId]));}};return _jsxs(View,{style:{margin:10},children:[_jsx(InviteButton,{}),_jsx(TouchableOpacity,{style:styles.button,onPress:function onPress(){return setModalVisible(true);},children:_jsx(Text,{style:styles.buttonText,children:\"ADD FRIENDS\"})}),_jsx(Modal,{animationType:\"slide\",transparent:true,visible:modalVisible,onRequestClose:function onRequestClose(){setModalVisible(!modalVisible);},children:_jsx(View,{style:styles.centeredView,children:_jsxs(View,{style:styles.modalView,children:[_jsx(Text,{style:styles.modalText,children:\"Add Friends\"}),_jsx(FlatList,{data:friendsList,renderItem:function renderItem(_ref){var item=_ref.item;return _jsxs(TouchableOpacity,{style:styles.friendItem,onPress:function onPress(){return handleAddFriend(item.id);},children:[_jsx(Text,{style:styles.friendName,children:item.name}),_jsx(Text,{style:styles.addButton,children:addedFriends.includes(item.id)?'Added':'Add'})]});},keyExtractor:function keyExtractor(item){return item.id;}}),_jsx(TouchableOpacity,{style:styles.closeButton,onPress:function onPress(){return setModalVisible(!modalVisible);},children:_jsx(Text,{style:styles.closeButtonText,children:\"Close\"})})]})})})]});};var styles=StyleSheet.create({centeredView:{flex:1,justifyContent:'center',alignItems:'center',marginLeft:20},modalView:{margin:20,backgroundColor:'white',borderRadius:20,padding:35,alignItems:'center',shadowColor:'#000',shadowOffset:{width:0,height:2},shadowOpacity:0.25,shadowRadius:4,elevation:5},modalText:{marginBottom:15,textAlign:'center',fontWeight:'bold'},friendItem:{flexDirection:'row',justifyContent:'space-between',alignItems:'center',paddingVertical:10,paddingHorizontal:20},friendName:{flex:1,marginRight:10},addButton:{backgroundColor:'#062A52',color:'white',paddingHorizontal:15,paddingVertical:8,borderRadius:4,overflow:'hidden'},addButtonText:{color:'white',textAlign:'center'},button:{backgroundColor:'#062A52',paddingHorizontal:10,paddingVertical:10,marginVertical:7,borderRadius:4,overflow:'hidden',width:150,borderColor:'white',borderWidth:2},buttonText:{color:'white',textAlign:'center',fontWeight:'600'},closeButton:{backgroundColor:'#062A52',paddingHorizontal:10,paddingVertical:10,borderRadius:4,overflow:'hidden'},closeButtonText:{color:'white',textAlign:'center',fontWeight:'600'}});export default AddFriendsButton;","map":{"version":3,"names":["React","useState","View","Button","Modal","Text","TouchableOpacity","FlatList","StyleSheet","InviteButton","jsx","_jsx","jsxs","_jsxs","friendsList","id","name","AddFriendsButton","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","_useState4","addedFriends","setAddedFriends","handleAddFriend","friendId","includes","filter","concat","_toConsumableArray","style","margin","children","styles","button","onPress","buttonText","animationType","transparent","visible","onRequestClose","centeredView","modalView","modalText","data","renderItem","_ref","item","friendItem","friendName","addButton","keyExtractor","closeButton","closeButtonText","create","flex","justifyContent","alignItems","marginLeft","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginBottom","textAlign","fontWeight","flexDirection","paddingVertical","paddingHorizontal","marginRight","color","overflow","addButtonText","marginVertical","borderColor","borderWidth"],"sources":["C:/Users/Noah Marean/Source/Repos/TLT-1/EcoTracker/src/Components/AddFriendsButton.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Button, Modal, Text, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\nimport InviteButton from \"./InviteButton\";\r\n\r\nconst friendsList = [\r\n    { id: '1', name: 'Alice' },\r\n    { id: '2', name: 'Bob' },\r\n    { id: '3', name: 'Dave' },\r\n];\r\n\r\nconst AddFriendsButton = () => {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [addedFriends, setAddedFriends] = useState([]);\r\n\r\n    const handleAddFriend = (friendId) => {\r\n        if (addedFriends.includes(friendId)) {\r\n            setAddedFriends(addedFriends.filter(id => id !== friendId));\r\n        } else {\r\n            setAddedFriends([...addedFriends, friendId]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={{ margin: 10 }}>\r\n            {/* Invite Button */}\r\n            <InviteButton />\r\n\r\n            {/* Add Friends Button */}\r\n            <TouchableOpacity style={styles.button} onPress={() => setModalVisible(true)}>\r\n                <Text style={styles.buttonText}>ADD FRIENDS</Text>\r\n            </TouchableOpacity>\r\n            {/* Add Friends Modal */}\r\n            <Modal\r\n                animationType=\"slide\"\r\n                transparent={true}\r\n                visible={modalVisible}\r\n                onRequestClose={() => {\r\n                    setModalVisible(!modalVisible);\r\n                }}\r\n            >\r\n                <View style={styles.centeredView}>\r\n                    <View style={styles.modalView}>\r\n                        <Text style={styles.modalText}>Add Friends</Text>\r\n                        <FlatList\r\n                            data={friendsList}\r\n                            renderItem={({ item }) => (\r\n                                <TouchableOpacity style={styles.friendItem} onPress={() => handleAddFriend(item.id)}>\r\n                                    <Text style={styles.friendName}>{item.name}</Text>\r\n                                    <Text style={styles.addButton}>{addedFriends.includes(item.id) ? 'Added' : 'Add'}</Text>\r\n                                </TouchableOpacity>\r\n                            )}\r\n                            keyExtractor={(item) => item.id}\r\n                        />\r\n                        <TouchableOpacity style={styles.closeButton} onPress={() => setModalVisible(!modalVisible)}>\r\n                            <Text style={styles.closeButtonText}>Close</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginLeft: 20,\r\n    },\r\n    modalView: {\r\n        margin: 20,\r\n        backgroundColor: 'white',\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: 'center',\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5,\r\n    },\r\n    modalText: {\r\n        marginBottom: 15,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n    },\r\n    friendItem: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 20, // Add some padding to the sides\r\n    },\r\n    friendName: {\r\n        flex: 1,\r\n        marginRight: 10, // Add space between the name and the button\r\n    },\r\n    addButton: {\r\n        backgroundColor: '#062A52', // Set the button background color to blue\r\n        color: 'white', // Set the text color to white\r\n        paddingHorizontal: 15, // Horizontal padding for the button\r\n        paddingVertical: 8, // Vertical padding for the button\r\n        borderRadius: 4, // Rounded corners for the button\r\n        overflow: 'hidden', // Ensures the borderRadius is respected\r\n    },\r\n    addButtonText: {\r\n        color: 'white', // Set the button text color to white\r\n        textAlign: 'center', // Center the text inside the button\r\n    },\r\n    button: {\r\n        backgroundColor: '#062A52',\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 10,\r\n        marginVertical: 7,\r\n        borderRadius: 4,\r\n        overflow: 'hidden',\r\n        width: 150,\r\n        borderColor: 'white', // Set the border color to white\r\n        borderWidth: 2,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontWeight: '600'\r\n    },\r\n    closeButton: {\r\n        backgroundColor: '#062A52',\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 10,\r\n        borderRadius: 4,\r\n        overflow: 'hidden',\r\n    },\r\n    closeButtonText: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontWeight: '600'\r\n    },\r\n});\r\n\r\nexport default AddFriendsButton;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}