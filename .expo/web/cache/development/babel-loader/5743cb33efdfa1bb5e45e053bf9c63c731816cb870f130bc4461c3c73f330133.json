{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport Navbar from \"../Navbar\";\nimport Footer from \"../Footer\";\nimport Snowfall from 'react-snowfall';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Challenges = function Challenges(_ref) {\n  var navigation = _ref.navigation;\n  var challenges = [{\n    id: '1',\n    title: 'Drink Water',\n    description: 'Drink 8 glasses of water every day to stay hydrated.'\n  }, {\n    id: '2',\n    title: 'Turn off Lights',\n    description: 'Make sure to turn off lights when you leave a room to save energy.'\n  }];\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    completedChallenges = _useState2[0],\n    setCompletedChallenges = _useState2[1];\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    var isCompleted = !!completedChallenges[item.id];\n    return _jsxs(View, {\n      style: styles.item,\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: item.title\n        }), _jsx(Text, {\n          children: item.description\n        })]\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          setCompletedChallenges(_objectSpread(_objectSpread({}, completedChallenges), {}, _defineProperty({}, item.id, !isCompleted)));\n        },\n        children: _jsx(MaterialIcons, {\n          name: \"check-circle\",\n          size: 24,\n          color: isCompleted ? 'green' : 'grey'\n        })\n      })]\n    });\n  };\n  var styles = {\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    item: {\n      padding: 20,\n      marginVertical: 8,\n      marginHorizontal: 20,\n      backgroundColor: 'white',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      borderRadius: 10\n    },\n    title: {\n      fontSize: 32\n    }\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Navbar, {}), _jsxs(ImageBackground, {\n      source: require(\"../../../assets/ecoBackground.png\"),\n      style: styles.container,\n      children: [_jsx(FlatList, {\n        data: challenges,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      }), _jsx(Image, {\n        source: require(\"../../../assets/ecoTreesSnow.png\"),\n        style: {\n          position: 'absolute',\n          bottom: -40,\n          width: '100%',\n          height: 160\n        }\n      })]\n    }), _jsx(Snowfall, {\n      snowflakeCount: 250\n    }), _jsx(Footer, {\n      style: {\n        height: 18\n      },\n      navigation: navigation\n    })]\n  });\n};\nexport default Challenges;","map":{"version":3,"names":["React","useState","View","Text","Image","ImageBackground","FlatList","TouchableOpacity","MaterialIcons","Navbar","Footer","Snowfall","jsx","_jsx","jsxs","_jsxs","Challenges","_ref","navigation","challenges","id","title","description","_useState","_useState2","_slicedToArray","completedChallenges","setCompletedChallenges","renderItem","_ref2","item","isCompleted","style","styles","children","onPress","_objectSpread","_defineProperty","name","size","color","container","flex","justifyContent","alignItems","padding","marginVertical","marginHorizontal","backgroundColor","flexDirection","borderRadius","fontSize","source","require","data","keyExtractor","position","bottom","width","height","snowflakeCount"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/pages/Challenges.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Image, ImageBackground, FlatList, TouchableOpacity } from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons'; // install @expo/vector-icons\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\nimport Snowfall from 'react-snowfall';\r\n\r\nconst Challenges = ({ navigation }) => {\r\n    const challenges = [\r\n        {\r\n            id: '1',\r\n            title: 'Drink Water',\r\n            description: 'Drink 8 glasses of water every day to stay hydrated.',\r\n        },\r\n        {\r\n            id: '2',\r\n            title: 'Turn off Lights',\r\n            description: 'Make sure to turn off lights when you leave a room to save energy.',\r\n        },\r\n        // Add more challenges here\r\n    ];\r\n    const [completedChallenges, setCompletedChallenges] = useState({});\r\n\r\n    const renderItem = ({ item }) => {\r\n        // Determine if the current challenge is completed\r\n        const isCompleted = !!completedChallenges[item.id];\r\n\r\n\r\n        return (\r\n            <View style={styles.item}>\r\n                <View>\r\n                    <Text style={styles.title}>{item.title}</Text>\r\n                    <Text>{item.description}</Text>\r\n                </View>\r\n                <TouchableOpacity onPress={() => {\r\n                    setCompletedChallenges({\r\n                        ...completedChallenges,\r\n                        [item.id]: !isCompleted // Toggle the completion status of the challenge\r\n                    });\r\n                }}>\r\n                    <MaterialIcons name=\"check-circle\" size={24} color={isCompleted ? 'green' : 'grey'} />\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    };\r\n    const styles = {\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n        item: {\r\n            padding: 20,\r\n            marginVertical: 8,\r\n            marginHorizontal: 20,\r\n            backgroundColor: 'white',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            borderRadius: 10,\r\n        },\r\n        title: {\r\n            fontSize: 32,\r\n        },\r\n    };\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackground.png\")} style={styles.container}>\r\n                <FlatList\r\n                    data={challenges}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id}\r\n                />\r\n                <Image source={require(\"../../../assets/ecoTreesSnow.png\")} style={{ position: 'absolute', bottom: -40, width: '100%', height: 160 }} />\r\n            </ImageBackground>\r\n            <Snowfall snowflakeCount={250} />\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </View>\r\n    );\r\n\r\n};\r\n\r\nexport default Challenges;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}