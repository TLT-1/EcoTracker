{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React,{useState}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Keyboard from\"react-native-web/dist/exports/Keyboard\";import{LineChart}from'react-native-chart-kit';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var screenWidth=Dimensions.get('window').width;var Test=function Test(_ref){var title=_ref.title;var _useState=useState({labels:Array.from({length:30},function(_,i){return(i+1).toString();}),datasets:[{data:Array.from({length:30},function(){return Math.random()*100;})}]}),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),inputValue=_useState4[0],setInputValue=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),selectedDay=_useState6[0],setSelectedDay=_useState6[1];var generateRandomData=function generateRandomData(userInput){var maxChange=5;var randomChange=Math.floor(Math.random()*(maxChange*2+1))-maxChange;return Math.max(0,userInput+randomChange);};var handleSubmit=function handleSubmit(){var userValue=Number(inputValue);if(!isNaN(userValue)&&selectedDay!==null){var newData=_toConsumableArray(data.datasets[0].data);newData[selectedDay]=generateRandomData(userValue);setData(_objectSpread(_objectSpread({},data),{},{datasets:[_objectSpread(_objectSpread({},data.datasets[0]),{},{data:newData})]}));setSelectedDay(null);setInputValue('');Keyboard.dismiss();}};var chartConfig={backgroundColor:'#FFFFFF',backgroundGradientFrom:'#FFFFFF',backgroundGradientTo:'#FFFFFF',decimalPlaces:2,color:function color(){var opacity=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;return`rgba(0, 0, 0, ${opacity})`;},labelColor:function labelColor(){var opacity=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;return`rgba(0, 0, 0, ${opacity})`;}};return _jsxs(View,{style:styles.graphContainer,children:[_jsx(Text,{style:styles.title,children:title}),_jsx(LineChart,{data:data,width:screenWidth,height:220,chartConfig:chartConfig,bezier:true}),selectedDay!==null&&_jsxs(View,{style:styles.inputContainer,children:[_jsxs(Text,{style:styles.inputLabel,children:[\"Enter your miles drove for day \",selectedDay+1,\":\"]}),_jsx(TextInput,{style:styles.input,value:inputValue,onChangeText:setInputValue,keyboardType:\"numeric\",onSubmitEditing:handleSubmit,returnKeyType:\"done\",placeholder:\"Input value\"})]}),_jsx(View,{style:styles.labelsContainer,children:data.labels.map(function(label,index){return _jsx(TouchableOpacity,{style:styles.label,onPress:function onPress(){return setSelectedDay(index);},children:_jsx(Text,{style:styles.labelText,children:label})},label);})})]});};var styles=StyleSheet.create({graphContainer:{alignItems:'center',backgroundColor:'#FFF',padding:16,borderRadius:8,shadowColor:'#000',shadowOffset:{width:0,height:3},shadowRadius:5,shadowOpacity:0.2,elevation:6,margin:10,position:'relative'},title:{fontSize:18,fontWeight:'bold',marginBottom:10},inputContainer:{alignItems:'center',marginTop:12},inputLabel:{fontSize:16,color:'#333',marginBottom:4},input:{borderWidth:1,borderColor:'#CCCCCC',borderRadius:5,padding:8,width:'80%',fontSize:16,color:'#333',textAlign:'center',backgroundColor:'#F7F7F7'},labelsContainer:{flexDirection:'row',justifyContent:'space-around',width:'100%',marginTop:8},label:{padding:4,backgroundColor:'#EFEFEF',borderRadius:5},labelText:{color:'black',fontSize:12}});export default Test;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Dimensions","TouchableOpacity","TextInput","Keyboard","LineChart","jsx","_jsx","jsxs","_jsxs","screenWidth","get","width","Test","_ref","title","_useState","labels","Array","from","length","_","i","toString","datasets","data","Math","random","_useState2","_slicedToArray","setData","_useState3","_useState4","inputValue","setInputValue","_useState5","_useState6","selectedDay","setSelectedDay","generateRandomData","userInput","maxChange","randomChange","floor","max","handleSubmit","userValue","Number","isNaN","newData","_toConsumableArray","_objectSpread","dismiss","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","arguments","undefined","labelColor","style","styles","graphContainer","children","height","bezier","inputContainer","inputLabel","input","value","onChangeText","keyboardType","onSubmitEditing","returnKeyType","placeholder","labelsContainer","map","label","index","onPress","labelText","create","alignItems","padding","borderRadius","shadowColor","shadowOffset","shadowRadius","shadowOpacity","elevation","margin","position","fontSize","fontWeight","marginBottom","marginTop","borderWidth","borderColor","textAlign","flexDirection","justifyContent"],"sources":["C:/Users/Noah Marean/Source/Repos/TLT-1/EcoTracker/src/Components/pages/Testing.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, Dimensions, TouchableOpacity, TextInput, Keyboard } from 'react-native';\r\nimport { LineChart } from 'react-native-chart-kit';\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst Test = ({ title }) => {\r\n    const [data, setData] = useState({\r\n        labels: Array.from({ length: 30 }, (_, i) => (i + 1).toString()), // Labels for each day of the month\r\n        datasets: [{\r\n            data: Array.from({ length: 30 }, () => Math.random() * 100), // Initial random data\r\n        }],\r\n    });\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [selectedDay, setSelectedDay] = useState(null);\r\n\r\n    // Generate a random number based on user input\r\n    const generateRandomData = (userInput) => {\r\n        const maxChange = 5;\r\n        const randomChange = Math.floor(Math.random() * (maxChange * 2 + 1)) - maxChange;\r\n        return Math.max(0, userInput + randomChange);\r\n    };\r\n\r\n    // Update the data for a specific day with the user's input\r\n    const handleSubmit = () => {\r\n        const userValue = Number(inputValue);\r\n        if (!isNaN(userValue) && selectedDay !== null) {\r\n            const newData = [...data.datasets[0].data];\r\n            newData[selectedDay] = generateRandomData(userValue);\r\n            setData({\r\n                ...data,\r\n                datasets: [{ ...data.datasets[0], data: newData }],\r\n            });\r\n            setSelectedDay(null);\r\n            setInputValue('');\r\n            Keyboard.dismiss();\r\n        }\r\n    };\r\n\r\n    // Chart configuration\r\n    const chartConfig = {\r\n        backgroundColor: '#FFFFFF',\r\n        backgroundGradientFrom: '#FFFFFF',\r\n        backgroundGradientTo: '#FFFFFF',\r\n        decimalPlaces: 2,\r\n        color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n        labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n        // ...other properties\r\n    };\r\n\r\n    return (\r\n        <View style={styles.graphContainer}>\r\n            <Text style={styles.title}>{title}</Text>\r\n            <LineChart\r\n                data={data}\r\n                width={screenWidth}\r\n                height={220}\r\n                chartConfig={chartConfig}\r\n                bezier\r\n            />\r\n\r\n            {/* Input field for user interaction */}\r\n            {selectedDay !== null && (\r\n                <View style={styles.inputContainer}>\r\n                    <Text style={styles.inputLabel}>Enter your miles drove for day {selectedDay + 1}:</Text>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        value={inputValue}\r\n                        onChangeText={setInputValue}\r\n                        keyboardType='numeric'\r\n                        onSubmitEditing={handleSubmit}\r\n                        returnKeyType='done'\r\n                        placeholder=\"Input value\"\r\n                    />\r\n                </View>\r\n            )}\r\n\r\n            {/* Day labels */}\r\n            <View style={styles.labelsContainer}>\r\n                {data.labels.map((label, index) => (\r\n                    <TouchableOpacity\r\n                        key={label}\r\n                        style={styles.label}\r\n                        onPress={() => setSelectedDay(index)}\r\n                    >\r\n                        <Text style={styles.labelText}>{label}</Text>\r\n                    </TouchableOpacity>\r\n                ))}\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    graphContainer: {\r\n        alignItems: 'center',\r\n        backgroundColor: '#FFF',\r\n        padding: 16,\r\n        borderRadius: 8,\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 3 },\r\n        shadowRadius: 5,\r\n        shadowOpacity: 0.2,\r\n        elevation: 6,\r\n        margin: 10,\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n    },\r\n    inputContainer: {\r\n        alignItems: 'center',\r\n        marginTop: 12,\r\n    },\r\n    inputLabel: {\r\n        fontSize: 16,\r\n        color: '#333',\r\n        marginBottom: 4,\r\n    },\r\n    input: {\r\n        borderWidth: 1,\r\n        borderColor: '#CCCCCC',\r\n        borderRadius: 5,\r\n        padding: 8,\r\n        width: '80%',\r\n        fontSize: 16,\r\n        color: '#333',\r\n        textAlign: 'center',\r\n        backgroundColor: '#F7F7F7',\r\n    },\r\n    labelsContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        width: '100%',\r\n        marginTop: 8,\r\n    },\r\n    label: {\r\n        padding: 4,\r\n        backgroundColor: '#EFEFEF',\r\n        borderRadius: 5,\r\n    },\r\n    labelText: {\r\n        color: 'black',\r\n        fontSize: 12,\r\n    },\r\n    // ... other styles you may want to add\r\n});\r\n\r\nexport default Test;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}