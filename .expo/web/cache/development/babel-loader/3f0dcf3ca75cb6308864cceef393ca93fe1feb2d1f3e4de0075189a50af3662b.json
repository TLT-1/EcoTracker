{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport useResponsiveStyles from \"../Styles/TrackStyles\";\nimport Navbar from \"../Navbar\";\nimport Footer from \"../Footer\";\nimport Fact from \"../Fact\";\nimport Snowfall from 'react-snowfall';\nimport axios from 'axios';\nimport GraphCard from \"../GraphCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Diet = function Diet(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    dietLevel = _useState2[0],\n    setDietLevel = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    food = _useState4[0],\n    setFood = _useState4[1];\n  var styles = useResponsiveStyles();\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isModalVisible = _useState6[0],\n    setModalVisible = _useState6[1];\n  var handleSubmit = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios({\n          method: 'POST',\n          url: 'http://localhost:5000/diet',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          data: {\n            user_id: '652d78b1a3e79a6fa01d4140',\n            dietLevel: dietLevel,\n            food: food\n          }\n        });\n        handleClear();\n      } catch (error) {\n        console.error(error);\n      }\n    });\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleClear = function handleClear() {\n    setDietLevel('');\n    setFood('');\n  };\n  var graphData = {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n    datasets: [{\n      data: [20, 45, 28, 80, 99, 43]\n    }]\n  };\n  var customChartConfig = {};\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Navbar, {}), _jsxs(ImageBackground, {\n      source: require(\"../../../assets/ecoBackground.png\"),\n      style: _objectSpread(_objectSpread({}, styles.container), {}, {\n        overflow: 'hidden'\n      }),\n      children: [_jsx(Snowfall, {\n        snowflakeCount: 250\n      }), _jsx(Image, {\n        source: require(\"../../../assets/ecoDiet.png\"),\n        style: _objectSpread(_objectSpread({}, styles.title), {}, {\n          marginTop: -200\n        })\n      }), _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Diet Level:\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: dietLevel,\n        onChangeText: function onChangeText(text) {\n          return setDietLevel(text);\n        }\n      }), _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Food:\"\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: food,\n        onChangeText: function onChangeText(text) {\n          return setFood(text);\n        }\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          title: \"Submit\",\n          onPress: _asyncToGenerator(function* () {\n            handleSubmit();\n          }),\n          color: \"transparent\"\n        })\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          title: \"Clear\",\n          onPress: handleClear,\n          color: \"transparent\"\n        })\n      }), _jsx(Image, {\n        source: require(\"../../../assets/ecoTreesSnow.png\"),\n        style: {\n          position: 'absolute',\n          bottom: -40,\n          width: '100%',\n          height: 160\n        }\n      }), _jsx(Fact, {\n        isModalVisible: isModalVisible,\n        setModalVisible: setModalVisible\n      })]\n    }), _jsx(Footer, {\n      style: {\n        height: 18\n      },\n      navigation: navigation\n    })]\n  });\n};\nexport default Diet;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","Image","ImageBackground","useResponsiveStyles","Navbar","Footer","Fact","Snowfall","axios","GraphCard","jsx","_jsx","jsxs","_jsxs","Diet","_ref","navigation","_useState","_useState2","_slicedToArray","dietLevel","setDietLevel","_useState3","_useState4","food","setFood","styles","_useState5","_useState6","isModalVisible","setModalVisible","handleSubmit","_ref2","_asyncToGenerator","response","method","url","headers","data","user_id","handleClear","error","console","apply","arguments","graphData","labels","datasets","customChartConfig","style","flex","children","source","require","_objectSpread","container","overflow","snowflakeCount","title","marginTop","buttonText","input","value","onChangeText","text","button","onPress","color","position","bottom","width","height"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/pages/Diet.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button, Image, ImageBackground } from 'react-native'\r\nimport useResponsiveStyles from '../Styles/TrackStyles';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\nimport Fact from '../Fact';\r\nimport Snowfall from 'react-snowfall';\r\nimport axios from 'axios';\r\nimport GraphCard from '../GraphCard';\r\n\r\n\r\nconst Diet = ({ navigation }) => {\r\n    const [dietLevel, setDietLevel] = useState('');\r\n    const [food, setFood] = useState('');\r\n\r\n    const styles = useResponsiveStyles();\r\n    const [isModalVisible, setModalVisible] = useState(true);\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            // Make POST request using axios with data\r\n            const response = await axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/diet',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                data: {\r\n                    user_id: '652d78b1a3e79a6fa01d4140',\r\n                    dietLevel: dietLevel,\r\n                    food: food\r\n                }\r\n            });\r\n\r\n            //console.log(response.data);  // Print out the response data\r\n            handleClear();\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handleClear = () => {\r\n        setDietLevel('');\r\n        setFood('');\r\n    };\r\n\r\n    const graphData = {\r\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\r\n        datasets: [{\r\n            data: [20, 45, 28, 80, 99, 43],\r\n            // ... other dataset properties\r\n        }]\r\n    };\r\n\r\n    const customChartConfig = {\r\n        // Optional custom chart configuration here\r\n    };\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackground.png\")} style={{ ...styles.container, overflow: 'hidden' }}>\r\n                <Snowfall snowflakeCount={250} />\r\n                <Image source={require(\"../../../assets/ecoDiet.png\")} style={{ ...styles.title, marginTop: -200 }} />\r\n\r\n                <Text style={styles.buttonText}>Diet Level:</Text>\r\n                <TextInput style={styles.input} value={dietLevel} onChangeText={text => setDietLevel(text)} />\r\n\r\n                <Text style={styles.buttonText}>Food:</Text>\r\n                <TextInput style={styles.input} value={food} onChangeText={text => setFood(text)} />\r\n\r\n                <View style={styles.button}>\r\n                    <Button title=\"Submit\" onPress={async () => { handleSubmit() }} color=\"transparent\" />\r\n                </View>\r\n                <View style={styles.button}>\r\n                    <Button title=\"Clear\" onPress={handleClear} color=\"transparent\" />\r\n                </View>\r\n                <Image source={require(\"../../../assets/ecoTreesSnow.png\")} style={{ position: 'absolute', bottom: -40, width: '100%', height: 160 }} />\r\n                <Fact isModalVisible={isModalVisible} setModalVisible={setModalVisible} />\r\n            </ImageBackground>\r\n            {/* <GraphCard /> */}\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Diet;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}