{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Driving from \"../pages/Driving\";\nimport Energy from \"../pages/Energy\";\nimport Footer from \"../Footer\";\nimport Navbar from \"../Navbar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nfunction TrackOptions(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      marginTop: 100\n    },\n    children: [\" \", _jsx(Text, {\n      children: \"Choose an option:\"\n    }), _jsx(Button, {\n      title: \"Driving\",\n      onPress: function onPress() {\n        return navigation.navigate('Driving');\n      }\n    }), _jsx(Button, {\n      title: \"Energy\",\n      onPress: function onPress() {\n        return navigation.navigate('Energy');\n      }\n    })]\n  });\n}\nfunction TrackNav() {\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Navbar, {}), _jsxs(Stack.Navigator, {\n      style: styles.navigator,\n      children: [_jsx(Stack.Screen, {\n        name: \"Track\",\n        component: TrackOptions,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Driving\",\n        component: Driving,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Energy\",\n        component: Energy,\n        options: {\n          headerShown: false\n        }\n      })]\n    }), _jsx(Footer, {})]\n  });\n}\nexport default TrackNav;","map":{"version":3,"names":["React","View","Text","Button","StyleSheet","createStackNavigator","Driving","Energy","Footer","Navbar","jsx","_jsx","jsxs","_jsxs","Stack","TrackOptions","_ref","navigation","style","marginTop","children","title","onPress","navigate","TrackNav","flex","Navigator","styles","navigator","Screen","name","component","options","headerShown"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/pages/TrackNav.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, Button, StyleSheet } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Driving from '../pages/Driving';\r\nimport Energy from '../pages/Energy';\r\nimport Footer from '../Footer';\r\nimport Navbar from '../Navbar';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction TrackOptions({ navigation }) {\r\n    return (\r\n        <View style={{ marginTop: 100 }}> {/* Adjust this value as needed */}\r\n            <Text>Choose an option:</Text>\r\n            <Button\r\n                title=\"Driving\"\r\n                onPress={() => navigation.navigate('Driving')}\r\n            />\r\n            <Button\r\n                title=\"Energy\"\r\n                onPress={() => navigation.navigate('Energy')}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nfunction TrackNav() {\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <Stack.Navigator style={styles.navigator}>\r\n                <Stack.Screen\r\n                    name=\"Track\"\r\n                    component={TrackOptions}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Driving\"\r\n                    component={Driving}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Energy\"\r\n                    component={Energy}\r\n                    options={{ headerShown: false }}\r\n                />\r\n            </Stack.Navigator>\r\n            <Footer />\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default TrackNav;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,OAAO;AACd,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,MAAM;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/B,IAAMC,KAAK,GAAGT,oBAAoB,CAAC,CAAC;AAEpC,SAASU,YAAYA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC9B,OACIJ,KAAA,CAACZ,IAAI;IAACiB,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAI,CAAE;IAAAC,QAAA,GAAC,GAAC,EAC9BT,IAAA,CAACT,IAAI;MAAAkB,QAAA,EAAC;IAAiB,CAAM,CAAC,EAC9BT,IAAA,CAACR,MAAM;MACHkB,KAAK,EAAC,SAAS;MACfC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAML,UAAU,CAACM,QAAQ,CAAC,SAAS,CAAC;MAAA;IAAC,CACjD,CAAC,EACFZ,IAAA,CAACR,MAAM;MACHkB,KAAK,EAAC,QAAQ;MACdC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAML,UAAU,CAACM,QAAQ,CAAC,QAAQ,CAAC;MAAA;IAAC,CAChD,CAAC;EAAA,CACA,CAAC;AAEf;AAEA,SAASC,QAAQA,CAAA,EAAG;EAChB,OACIX,KAAA,CAACZ,IAAI;IAACiB,KAAK,EAAE;MAAEO,IAAI,EAAE;IAAE,CAAE;IAAAL,QAAA,GACrBT,IAAA,CAACF,MAAM,IAAE,CAAC,EACVI,KAAA,CAACC,KAAK,CAACY,SAAS;MAACR,KAAK,EAAES,MAAM,CAACC,SAAU;MAAAR,QAAA,GACrCT,IAAA,CAACG,KAAK,CAACe,MAAM;QACTC,IAAI,EAAC,OAAO;QACZC,SAAS,EAAEhB,YAAa;QACxBiB,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACnC,CAAC,EACFtB,IAAA,CAACG,KAAK,CAACe,MAAM;QACTC,IAAI,EAAC,SAAS;QACdC,SAAS,EAAEzB,OAAQ;QACnB0B,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACnC,CAAC,EACFtB,IAAA,CAACG,KAAK,CAACe,MAAM;QACTC,IAAI,EAAC,QAAQ;QACbC,SAAS,EAAExB,MAAO;QAClByB,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACnC,CAAC;IAAA,CACW,CAAC,EAClBtB,IAAA,CAACH,MAAM,IAAE,CAAC;EAAA,CACR,CAAC;AAEf;AAEA,eAAegB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}