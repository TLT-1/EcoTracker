{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport InviteButton from \"./InviteButton\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar friendsList = [{\n  id: '1',\n  name: 'Alice'\n}, {\n  id: '2',\n  name: 'Bob'\n}, {\n  id: '3',\n  name: 'Dave'\n}];\nvar AddFriendsButton = function AddFriendsButton() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    addedFriends = _useState4[0],\n    setAddedFriends = _useState4[1];\n  var handleAddFriend = function handleAddFriend(friendId) {\n    if (addedFriends.includes(friendId)) {\n      setAddedFriends(addedFriends.filter(function (id) {\n        return id !== friendId;\n      }));\n    } else {\n      setAddedFriends([].concat(_toConsumableArray(addedFriends), [friendId]));\n    }\n  };\n  return _jsxs(View, {\n    style: {\n      margin: 10\n    },\n    children: [_jsx(InviteButton, {}), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"ADD FRIENDS\"\n      })\n    }), _jsx(Modal, {\n      animationType: \"slide\",\n      transparent: true,\n      visible: modalVisible,\n      onRequestClose: function onRequestClose() {\n        setModalVisible(!modalVisible);\n      },\n      children: _jsx(View, {\n        style: styles.centeredView,\n        children: _jsxs(View, {\n          style: styles.modalView,\n          children: [_jsx(Text, {\n            style: styles.modalText,\n            children: \"Add Friends\"\n          }), _jsx(FlatList, {\n            data: friendsList,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsxs(TouchableOpacity, {\n                style: styles.friendItem,\n                onPress: function onPress() {\n                  return handleAddFriend(item.id);\n                },\n                children: [_jsx(Text, {\n                  style: styles.friendName,\n                  children: item.name\n                }), _jsx(Text, {\n                  style: styles.addButton,\n                  children: addedFriends.includes(item.id) ? 'Added' : 'Add'\n                })]\n              });\n            },\n            keyExtractor: function keyExtractor(item) {\n              return item.id;\n            }\n          }), _jsx(TouchableOpacity, {\n            style: styles.closeButton,\n            onPress: function onPress() {\n              return setModalVisible(!modalVisible);\n            },\n            children: _jsx(Text, {\n              style: styles.closeButtonText,\n              children: \"Close\"\n            })\n          })]\n        })\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 20\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 35,\n    alignItems: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  friendItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 20\n  },\n  friendName: {\n    flex: 1,\n    marginRight: 10\n  },\n  addButton: {\n    backgroundColor: '#062A52',\n    color: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 8,\n    borderRadius: 4,\n    overflow: 'hidden'\n  },\n  addButtonText: {\n    color: 'white',\n    textAlign: 'center'\n  },\n  button: {\n    backgroundColor: '#062A52',\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    marginVertical: 7,\n    borderRadius: 4,\n    overflow: 'hidden',\n    width: 150\n  },\n  buttonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: '600'\n  },\n  closeButton: {\n    backgroundColor: '#062A52',\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    borderRadius: 4\n  },\n  closeButtonText: {\n    color: 'white',\n    textAlign: 'center',\n    fontWeight: '600'\n  }\n});\nexport default AddFriendsButton;","map":{"version":3,"names":["React","useState","View","Button","Modal","Text","TouchableOpacity","FlatList","StyleSheet","InviteButton","jsx","_jsx","jsxs","_jsxs","friendsList","id","name","AddFriendsButton","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","_useState4","addedFriends","setAddedFriends","handleAddFriend","friendId","includes","filter","concat","_toConsumableArray","style","margin","children","styles","button","onPress","buttonText","animationType","transparent","visible","onRequestClose","centeredView","modalView","modalText","data","renderItem","_ref","item","friendItem","friendName","addButton","keyExtractor","closeButton","closeButtonText","create","flex","justifyContent","alignItems","marginLeft","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","marginBottom","textAlign","fontWeight","flexDirection","paddingVertical","paddingHorizontal","marginRight","color","overflow","addButtonText","marginVertical"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/AddFriendsButton.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Button, Modal, Text, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\nimport InviteButton from \"./InviteButton\";\r\n\r\nconst friendsList = [\r\n    { id: '1', name: 'Alice' },\r\n    { id: '2', name: 'Bob' },\r\n    { id: '3', name: 'Dave' },\r\n];\r\n\r\nconst AddFriendsButton = () => {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [addedFriends, setAddedFriends] = useState([]);\r\n\r\n    const handleAddFriend = (friendId) => {\r\n        if (addedFriends.includes(friendId)) {\r\n            setAddedFriends(addedFriends.filter(id => id !== friendId));\r\n        } else {\r\n            setAddedFriends([...addedFriends, friendId]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={{ margin: 10 }}>\r\n            {/* Invite Button */}\r\n            <InviteButton />\r\n\r\n            {/* Add Friends Button */}\r\n            <TouchableOpacity style={styles.button} onPress={() => setModalVisible(true)}>\r\n                <Text style={styles.buttonText}>ADD FRIENDS</Text>\r\n            </TouchableOpacity>\r\n            {/* Add Friends Modal */}\r\n            <Modal\r\n                animationType=\"slide\"\r\n                transparent={true}\r\n                visible={modalVisible}\r\n                onRequestClose={() => {\r\n                    setModalVisible(!modalVisible);\r\n                }}\r\n            >\r\n                <View style={styles.centeredView}>\r\n                    <View style={styles.modalView}>\r\n                        <Text style={styles.modalText}>Add Friends</Text>\r\n                        <FlatList\r\n                            data={friendsList}\r\n                            renderItem={({ item }) => (\r\n                                <TouchableOpacity style={styles.friendItem} onPress={() => handleAddFriend(item.id)}>\r\n                                    <Text style={styles.friendName}>{item.name}</Text>\r\n                                    <Text style={styles.addButton}>{addedFriends.includes(item.id) ? 'Added' : 'Add'}</Text>\r\n                                </TouchableOpacity>\r\n                            )}\r\n                            keyExtractor={(item) => item.id}\r\n                        />\r\n                        <TouchableOpacity style={styles.closeButton} onPress={() => setModalVisible(!modalVisible)}>\r\n                            <Text style={styles.closeButtonText}>Close</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginLeft: 20,\r\n    },\r\n    modalView: {\r\n        margin: 20,\r\n        backgroundColor: 'white',\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: 'center',\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5,\r\n    },\r\n    modalText: {\r\n        marginBottom: 15,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n    },\r\n    friendItem: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 20, // Add some padding to the sides\r\n    },\r\n    friendName: {\r\n        flex: 1,\r\n        marginRight: 10, // Add space between the name and the button\r\n    },\r\n    addButton: {\r\n        backgroundColor: '#062A52', // Set the button background color to blue\r\n        color: 'white', // Set the text color to white\r\n        paddingHorizontal: 15, // Horizontal padding for the button\r\n        paddingVertical: 8, // Vertical padding for the button\r\n        borderRadius: 4, // Rounded corners for the button\r\n        overflow: 'hidden', // Ensures the borderRadius is respected\r\n    },\r\n    addButtonText: {\r\n        color: 'white', // Set the button text color to white\r\n        textAlign: 'center', // Center the text inside the button\r\n    },\r\n    button: {\r\n        backgroundColor: '#062A52',\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 10,\r\n        marginVertical: 7,\r\n        borderRadius: 4,\r\n        overflow: 'hidden',\r\n        width: 150,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontWeight: '600'\r\n    },\r\n    closeButton: {\r\n        backgroundColor: '#062A52',\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 10,\r\n        borderRadius: 4,\r\n\r\n    },\r\n    closeButtonText: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontWeight: '600'\r\n    },\r\n});\r\n\r\nexport default AddFriendsButton;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}