{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Driving from \"../pages/Driving\";\nimport Energy from \"../pages/Energy\";\nimport Navbar from \"../Navbar\";\nimport Footer from \"../Footer\";\nimport styles from \"../Styles/TrackStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nfunction TrackOptions(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Navbar, {}), _jsxs(ImageBackground, {\n      source: require(\"../../../assets/ecoBackground.png\"),\n      style: [styles.container, {\n        marginTop: marginTop\n      }],\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Choose an option:\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.navigate('Driving');\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Driving\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.navigate('Energy');\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Energy\"\n        })\n      })]\n    }), _jsx(Footer, {\n      navigation: navigation\n    })]\n  });\n}\nfunction TrackNav() {\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Track\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Track\",\n        component: TrackOptions,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Driving\",\n        component: Driving,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Energy\",\n        component: Energy,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}\nexport default TrackNav;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","ImageBackground","StyleSheet","createStackNavigator","Driving","Energy","Navbar","Footer","styles","jsx","_jsx","jsxs","_jsxs","Stack","TrackOptions","_ref","navigation","style","flex","children","source","require","container","marginTop","text","button","onPress","navigate","buttonText","TrackNav","Navigator","initialRouteName","Screen","name","component","options","headerShown"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/pages/TrackNav.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity, ImageBackground, StyleSheet } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Driving from '../pages/Driving';\r\nimport Energy from '../pages/Energy';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\nimport styles from '../Styles/TrackStyles';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction TrackOptions({ navigation }) {\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackground.png\")} style={[styles.container, { marginTop }]}>\r\n                <Text style={styles.text}>Choose an option:</Text>\r\n                <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Driving')}>\r\n                    <Text style={styles.buttonText}>Driving</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Energy')}>\r\n                    <Text style={styles.buttonText}>Energy</Text>\r\n                </TouchableOpacity>\r\n            </ImageBackground>\r\n            <Footer navigation={navigation} />\r\n        </View>\r\n    );\r\n}\r\n\r\nfunction TrackNav() {\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Stack.Navigator initialRouteName=\"Track\">\r\n                <Stack.Screen\r\n                    name=\"Track\"\r\n                    component={TrackOptions}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Driving\"\r\n                    component={Driving}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Energy\"\r\n                    component={Energy}\r\n                    options={{ headerShown: false }}\r\n                />\r\n            </Stack.Navigator>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default TrackNav;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,OAAOC,OAAO;AACd,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,MAAM;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE3C,IAAMC,KAAK,GAAGV,oBAAoB,CAAC,CAAC;AAEpC,SAASW,YAAYA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC9B,OACIJ,KAAA,CAACd,IAAI;IAACmB,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,GACrBT,IAAA,CAACJ,MAAM,IAAE,CAAC,EACVM,KAAA,CAACX,eAAe;MAACmB,MAAM,EAAEC,OAAO,oCAAoC,CAAE;MAACJ,KAAK,EAAE,CAACT,MAAM,CAACc,SAAS,EAAE;QAAEC,SAAS,EAATA;MAAU,CAAC,CAAE;MAAAJ,QAAA,GAC5GT,IAAA,CAACX,IAAI;QAACkB,KAAK,EAAET,MAAM,CAACgB,IAAK;QAAAL,QAAA,EAAC;MAAiB,CAAM,CAAC,EAClDT,IAAA,CAACV,gBAAgB;QAACiB,KAAK,EAAET,MAAM,CAACiB,MAAO;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMV,UAAU,CAACW,QAAQ,CAAC,SAAS,CAAC;QAAA,CAAC;QAAAR,QAAA,EAClFT,IAAA,CAACX,IAAI;UAACkB,KAAK,EAAET,MAAM,CAACoB,UAAW;UAAAT,QAAA,EAAC;QAAO,CAAM;MAAC,CAChC,CAAC,EACnBT,IAAA,CAACV,gBAAgB;QAACiB,KAAK,EAAET,MAAM,CAACiB,MAAO;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMV,UAAU,CAACW,QAAQ,CAAC,QAAQ,CAAC;QAAA,CAAC;QAAAR,QAAA,EACjFT,IAAA,CAACX,IAAI;UAACkB,KAAK,EAAET,MAAM,CAACoB,UAAW;UAAAT,QAAA,EAAC;QAAM,CAAM;MAAC,CAC/B,CAAC;IAAA,CACN,CAAC,EAClBT,IAAA,CAACH,MAAM;MAACS,UAAU,EAAEA;IAAW,CAAE,CAAC;EAAA,CAChC,CAAC;AAEf;AAEA,SAASa,QAAQA,CAAA,EAAG;EAChB,OACInB,IAAA,CAACZ,IAAI;IAACmB,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,EACrBP,KAAA,CAACC,KAAK,CAACiB,SAAS;MAACC,gBAAgB,EAAC,OAAO;MAAAZ,QAAA,GACrCT,IAAA,CAACG,KAAK,CAACmB,MAAM;QACTC,IAAI,EAAC,OAAO;QACZC,SAAS,EAAEpB,YAAa;QACxBqB,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACnC,CAAC,EACF1B,IAAA,CAACG,KAAK,CAACmB,MAAM;QACTC,IAAI,EAAC,SAAS;QACdC,SAAS,EAAE9B,OAAQ;QACnB+B,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACnC,CAAC,EACF1B,IAAA,CAACG,KAAK,CAACmB,MAAM;QACTC,IAAI,EAAC,QAAQ;QACbC,SAAS,EAAE7B,MAAO;QAClB8B,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,CACnC,CAAC;IAAA,CACW;EAAC,CAChB,CAAC;AAEf;AAEA,eAAeP,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}