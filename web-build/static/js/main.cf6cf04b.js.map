{"version":3,"file":"static/js/main.cf6cf04b.js","mappings":"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","sources":["src/Components/Styles/TitleScreenStyles.js","src/Components/ProductCard.js","src/Components/InfoCard.js","src/Components/GraphCard.js","src/Components/Styles/FooterStyles.js","src/Components/Footer.js","src/Components/Styles/NavbarStyles.js","src/Components/Navbar.js","src/Components/CarbonFootprintInfo.js","src/Components/Testimonials.js","src/Components/CommunitySignUp.js","src/Components/ThemeContext.js","src/Components/pages/TitleScreen.js","src/Components/Styles/LogInStyles.js","src/Components/pages/LogIn.js","src/Components/Styles/SignUpStyle.js","src/Components/pages/SignUp.js","src/Components/pages/PP.js","src/Components/pages/ToS.js","src/Components/pages/News.js","src/Components/Styles/VerificationStyles.js","src/Components/pages/Verification.js","src/Components/Styles/UserAccountStyles.js","src/Components/pages/LeaderBoard.js","src/Components/InviteButton.js","src/Components/AddFriendsButton.js","src/Components/pages/UserAccount.js","src/Components/pages/Contact.js","src/Components/Styles/TrackStyles.js","src/Components/Styles/FactStyles.js","src/Components/Fact.js","src/Components/pages/Driving.js","src/Components/pages/Energy.js","src/Components/pages/Diet.js","src/Components/pages/Exercise.js","src/Components/pages/Water.js","src/Components/pages/Challenges.js","src/Components/pages/PasswordReset.js","src/Components/pages/TrackNav.js","src/Components/pages/PasswordResetTemp.js","src/Components/pages/Testing.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { StyleSheet, Dimensions } from \"react-native\";\r\n\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n        backgroundColor: \"transparent\", // Eventually set this to 'transparent' or your desired color\r\n    },\r\n    scrollViewContent: {\r\n        flexGrow: 1,\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        paddingTop: 20, // Space from the top of the ScrollView\r\n    },\r\n    titleScreen: {\r\n        width: \"100%\",\r\n        height: screenHeight, // Set the height to the screen height\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n    },\r\n    logo: {\r\n        width: \"30%\", // Adjusted for a more responsive size, considering the parent's width\r\n        height: screenHeight * 0.3, // Height proportional to the screen height\r\n        resizeMode: \"contain\",\r\n        marginTop: screenHeight * 0.1, // Push down from the top, proportionally\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        color: 'white',\r\n    },\r\n    subtitle: {\r\n        fontSize: 16,\r\n        textAlign: 'center',\r\n        color: 'white',\r\n        margin: 20,\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n    },\r\n    button: {\r\n        backgroundColor: '#4CAF50',\r\n        padding: 10,\r\n        margin: 10,\r\n        borderRadius: 5,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n    },\r\n    contentContainer: {\r\n        width: '100%',\r\n        alignItems: 'center',\r\n        paddingHorizontal: 20,\r\n        // marginTop removed, control spacing within ScrollView\r\n    },\r\n    treesImage: {\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        width: '100%',\r\n        height: 160,\r\n    },\r\n    line: {\r\n        width: '100%',\r\n        height: 10,\r\n        backgroundColor: 'lightgrey',\r\n        padding: 5,\r\n        margin: 30,\r\n    },\r\n    titleto: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n        marginTop: 32,\r\n        color: 'white',// Space from the preceding element\r\n        textShadowColor: 'rgba(0, 0, 0, 0.75)',\r\n        textShadowOffset: { width: -1, height: 1 },\r\n        textShadowRadius: 10,\r\n    },\r\n    productSectionww: {\r\n        width: '100%', // Full width\r\n        padding: 20,\r\n        alignItems: 'center',\r\n        marginBottom: 20, // Space from the bottom of the ScrollView\r\n    },\r\n    productSection: {\r\n        backgroundColor: 'transparent',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'center', // Center the cards in the row\r\n        alignItems: 'flex-start',  // Allow items to wrap to next line if not enough space\r\n        padding: 50,\r\n    },\r\n    infoCardContainer: {\r\n        backgroundColor: 'transparent',\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        padding: 20,\r\n\r\n    },\r\n    idk: {\r\n        backgroundColor: 'transparent',\r\n    },\r\n    themeButtonsContainer: {\r\n        position: 'absolute',\r\n        top: 40,\r\n        left: 150,\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        padding: 10,\r\n    },\r\n    themeButton: {\r\n        backgroundColor: '#000',\r\n        padding: 10,\r\n        margin: 5,\r\n        borderRadius: 5,\r\n    },\r\n    themeButtonText: {\r\n        color: '#000',\r\n    },\r\n});\r\n\r\nexport default styles;\r\n","// ProductCard.js\r\nimport React from 'react';\r\nimport { View, Text, Image, StyleSheet, TouchableOpacity, Dimensions, Linking } from 'react-native';\r\n\r\nconst windowWidth = Dimensions.get('window').width;\r\nconst cardMargin = 20; // Adjust the margin as needed\r\nconst cardWidth = (windowWidth / 3) - (cardMargin * 2); // Three cards per row with margins\r\nconst openURL = (url) => {\r\n    Linking.canOpenURL(url).then((supported) => {\r\n        if (supported) {\r\n            Linking.openURL(url);\r\n        } else {\r\n            console.log(\"Don't know how to open URI: \" + url);\r\n        }\r\n    });\r\n};\r\n\r\nconst ProductCard = ({ bestsellerLabel, productName, productDesc, imageSrc, onLikePress, url }) => {\r\n    return (\r\n        <TouchableOpacity onPress={() => openURL(url)} style={styles.cardContainer}>\r\n            <View style={styles.cardContainer}>\r\n                <Text style={styles.bestsellerLabel}>{bestsellerLabel}</Text>\r\n                <Image source={imageSrc} style={styles.productImage} />\r\n                <Text style={styles.productName}>{productName}</Text>\r\n                <Text style={styles.productDesc}>{productDesc}</Text>\r\n                <TouchableOpacity onPress={onLikePress} style={styles.likeButton}>\r\n                    <Text>👍</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    cardContainer: {\r\n        backgroundColor: '#FFFFFF',\r\n        borderRadius: 8,\r\n        padding: 16, // Adjust padding if necessary to reduce size\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        elevation: 3,\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowRadius: 6,\r\n        shadowOpacity: 0.1,\r\n        flex: 1,\r\n        flexBasis: '30%',\r\n        flexGrow: 0,\r\n        flexShrink: 1,\r\n        margin: 10,\r\n    },\r\n    bestsellerLabel: {\r\n        position: 'absolute',\r\n        top: -16, // Move it outside the container\r\n        left: 16,\r\n        backgroundColor: 'yellow',\r\n        padding: 4,\r\n        borderRadius: 4,\r\n        fontSize: 12,\r\n        fontWeight: 'bold',\r\n        zIndex: 1, // Make sure it's above the image\r\n    },\r\n    productImage: {\r\n        width: '100%', // Slightly less than full width to add padding\r\n        height: undefined, // Height will be calculated based on the aspect ratio\r\n        aspectRatio: 1, // Adjust this value based on your image's aspect ratio\r\n        resizeMode: 'contain',\r\n        alignSelf: 'center', // Center the image within the card\r\n    },\r\n    productName: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginTop: 8, // Add space above the product name\r\n    },\r\n    productDesc: {\r\n        fontSize: 14,\r\n        color: 'grey',\r\n        marginBottom: 8,\r\n    },\r\n    likeButton: {\r\n        // Additional styles if needed\r\n    },\r\n});\r\nexport default ProductCard;\r\n","// InfoCard.js\r\nimport React from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\n\r\nconst InfoCard = ({ title, value, comparison }) => {\r\n    return (\r\n        <View style={styles.cardContainer}>\r\n            <Text style={styles.cardTitle}>{title}</Text>\r\n            <Text style={styles.cardValue}>{value}</Text>\r\n            <Text style={styles.cardComparison}>{comparison}</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    cardContainer: {\r\n        backgroundColor: '#FFFFFF',\r\n        borderRadius: 8,\r\n        padding: 20,\r\n        margin: 10,\r\n        width: '45%', // Adjust the width as needed\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.1,\r\n        shadowRadius: 6,\r\n        elevation: 3,\r\n    },\r\n    cardTitle: {\r\n        fontSize: 16,\r\n        color: '#333',\r\n        marginBottom: 5,\r\n    },\r\n    cardValue: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 5,\r\n    },\r\n    cardComparison: {\r\n        fontSize: 14,\r\n        color: '#666',\r\n    },\r\n});\r\n\r\nexport default InfoCard;","// GraphCard.js\r\nimport React, { useRef, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, Dimensions, Platform, TouchableOpacity } from 'react-native';\r\nimport { LineChart } from 'react-native-chart-kit';\r\n\r\n// html2canvas is only needed for web, so ensure it's imported conditionally\r\nlet html2canvas;\r\nif (Platform.OS === 'web') {\r\n    html2canvas = require('html2canvas');\r\n}\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\nconst screenHeight = Dimensions.get('window').height;\r\n\r\nconst GraphCard = ({ title, data, chartConfig, onIncrement, onDecrement }) => {\r\n    // Ref for the chart container\r\n    const chartRef = useRef(null);\r\n\r\n    // Default chartConfig\r\n    const defaultConfig = {\r\n        backgroundColor: '#FFFFFF',\r\n        backgroundGradientFrom: '#FFFFFF',\r\n        backgroundGradientTo: '#FFFFFF',\r\n        decimalPlaces: 2, // specify the number of decimal places you want\r\n        color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`, // make sure this is a function\r\n        labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n\r\n    };\r\n\r\n    const downloadChart = async () => {\r\n        if (Platform.OS === 'web' && chartRef.current && html2canvas) {\r\n            const canvas = await html2canvas(chartRef.current);\r\n            const dataURL = canvas.toDataURL('image/png');\r\n            const link = document.createElement('a');\r\n            link.download = `${title.replace(/\\s+/g, '_')}.png`;\r\n            link.href = dataURL;\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        }\r\n    };\r\n    const combinedChartConfig = { ...defaultConfig, ...chartConfig };\r\n\r\n\r\n    const renderControlButtons = () => (\r\n        <View style={styles.controlsRow}>\r\n            {data.labels.map((_, index) => (\r\n                <View key={index} style={styles.controlsColumn}>\r\n                    <TouchableOpacity\r\n                        style={styles.controlButton}\r\n                        onPress={() => onIncrement(index)}\r\n                    >\r\n                        <Text style={styles.controlButtonText}>+</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                        style={styles.controlButton}\r\n                        onPress={() => onDecrement(index)}\r\n                    >\r\n                        <Text style={styles.controlButtonText}>-</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            ))}\r\n        </View>\r\n    );\r\n\r\n    return (\r\n        <View style={styles.graphContainer} ref={chartRef}>\r\n            <Text style={styles.title}>{title}</Text>\r\n            <LineChart\r\n                data={data}\r\n                width={screenWidth * 0.28} // Adjusted for demonstration\r\n                height={screenHeight * 0.22} // Adjusted for demonstration\r\n                chartConfig={combinedChartConfig}\r\n                bezier // This will make the line chart curved\r\n            />\r\n            {Platform.OS === 'web' && (\r\n                <TouchableOpacity style={styles.downloadButton} onPress={downloadChart}>\r\n                    <Text style={styles.downloadButtonText}>Download</Text>\r\n                </TouchableOpacity>\r\n            )}\r\n\r\n\r\n\r\n            {renderControlButtons()}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    graphContainer: {\r\n        alignItems: 'center',\r\n        backgroundColor: '#FFF',\r\n        padding: 16,\r\n        borderRadius: 8,\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 3 },\r\n        shadowRadius: 5,\r\n        shadowOpacity: 0.2,\r\n        elevation: 6,\r\n        margin: 10,\r\n        position: 'relative', // For positioning the download button\r\n    },\r\n    title: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n    },\r\n    downloadButton: {\r\n        position: 'absolute',\r\n        top: 10,\r\n        right: 10,\r\n        backgroundColor: '#062A52',\r\n        padding: 8,\r\n        borderRadius: 5,\r\n    },\r\n    downloadButtonText: {\r\n        color: 'white',\r\n        fontSize: 14,\r\n    },\r\n    intakeButtonsContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        position: 'absolute', // Positioning at the bottom of the graph\r\n        bottom: 10,\r\n        width: '100%',\r\n        paddingLeft: 24, // Padding to align with the graph content\r\n        paddingRight: 24,\r\n    },\r\n    intakeButton: {\r\n        padding: 4,\r\n        backgroundColor: 'blue',\r\n        borderRadius: 4,\r\n    },\r\n    intakeButtonText: {\r\n        color: 'white',\r\n        fontSize: 12,\r\n    },\r\n    controlButtonsContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        position: 'absolute',\r\n        bottom: 10,\r\n        left: 10,\r\n    },\r\n    controlsRow: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        paddingTop: 4,\r\n    },\r\n    controlsColumn: {\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginHorizontal: 19,\r\n    },\r\n    controlButton: {\r\n        backgroundColor: '#062A52',\r\n        borderRadius: 30,\r\n        marginVertical: 1,\r\n        width: 30,\r\n        height: 30,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    controlButtonText: {\r\n        color: 'white',\r\n        fontSize: 16,\r\n    },\r\n});\r\n\r\nexport default GraphCard;\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nconst styles = StyleSheet.create({\r\n    footer: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#062A52\",\r\n        padding: 6,\r\n        width: \"100%\",\r\n    },\r\n    footerText: {\r\n        color: \"#fff\",\r\n        fontSize: 12,\r\n        textShadowColor: 'black',\r\n        textShadowOffset: { width: 1, height: 1 },\r\n        textShadowRadius: 1,\r\n    },\r\n});\r\n\r\nexport default styles;","import React from \"react\";\r\nimport { View, Text, TouchableOpacity } from \"react-native\";\r\nimport FooterStyles from \"./Styles/FooterStyles\";\r\n\r\nconst Footer = ({ style, navigation }) => {\r\n    return (\r\n        <View style={{ ...FooterStyles.footer, ...style, flexDirection: 'row', justifyContent: 'flex-end', alignItems: 'center' }}>\r\n            <TouchableOpacity onPress={() => navigation.navigate('PP')} style={{ marginLeft: 100 }}>\r\n                <Text style={FooterStyles.footerText}>Privacy Policy</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => navigation.navigate('ToS')} style={{ marginLeft: 100 }}>\r\n                <Text style={FooterStyles.footerText}>Terms of Service</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => navigation.navigate('Contact')} style={{ marginLeft: 100, marginRight: 50 }}>\r\n                <Text style={FooterStyles.footerText}>Contact</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import { StyleSheet } from 'react-native';\r\n\r\nconst styles = StyleSheet.create({\r\n    navbar: {\r\n        backgroundColor: '#062A52',\r\n        position: 'relative',\r\n        top: 0,\r\n        left: 0, // Position at the left\r\n        width: '100%', // Take the full width of the screen\r\n        height: 60, // Adjust height for a thicker/thinner navbar\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        padding: 20,\r\n        zIndex: 1,\r\n    },\r\n    menuIcon: {\r\n        fontSize: 36,\r\n        color: 'white',\r\n        textShadowColor: 'black',\r\n        textShadowOffset: { width: 1, height: 1 },\r\n        textShadowRadius: 2,\r\n    },\r\n    menuContainer: {\r\n        backgroundColor: '#062A52',\r\n        position: 'absolute',\r\n        top: 50,\r\n        left: 15,\r\n        width: 120,\r\n        padding: 10,\r\n        borderRadius: 5,\r\n    },\r\n    menuItem: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        textShadowColor: 'black',\r\n        textShadowOffset: { width: 1, height: 1 },\r\n        textShadowRadius: 1,\r\n        marginHorizontal: 12.5,\r\n        marginVertical: 10,\r\n        borderRightWidth: 1,\r\n        borderRightColor: 'white',\r\n        paddingRight: 25,\r\n    },\r\n    menuItemDrop: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        textShadowColor: 'black',\r\n        textShadowOffset: { width: 1, height: 1 },\r\n        textShadowRadius: 1,\r\n        marginVertical: 5,\r\n        borderBottomWidth: 1,\r\n        borderBottomColor: 'white',\r\n        paddingBottom: 15,\r\n        width: 100,\r\n    },\r\n});\r\n\r\nexport default styles;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity, Dimensions } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport NavbarStyles from './Styles/NavbarStyles';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\nimport Modal from 'react-modal';\r\n\r\nconst Navbar = () => {\r\n    const [isMenuOpen, setMenuOpen] = useState(false);\r\n    const navigation = useNavigation();\r\n\r\n    const toggleMenu = () => {\r\n        setMenuOpen(!isMenuOpen);\r\n    };\r\n\r\n    const navigateToPage = (page) => {\r\n        navigation.navigate(page);\r\n    };\r\n\r\n    const [windowWidth, setWindowWidth] = useState(Dimensions.get('window').width);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setWindowWidth(Dimensions.get('window').width);\r\n        };\r\n\r\n        Dimensions.addEventListener('change', handleResize);\r\n\r\n        return () => {\r\n            Dimensions.removeEventListener('change', handleResize);\r\n        };\r\n    }, []);\r\n\r\n    const [guideModalIsOpen, setGuideModalIsOpen] = useState(false);\r\n\r\n    const openGuideModal = () => {\r\n        setGuideModalIsOpen(true);\r\n    };\r\n\r\n    const closeGuideModal = () => {\r\n        setGuideModalIsOpen(false);\r\n    };\r\n\r\n    return (\r\n        <View style={NavbarStyles.navbar}>\r\n            <TouchableOpacity onPress={toggleMenu}>\r\n                <Text style={NavbarStyles.menuIcon}>☰</Text>\r\n            </TouchableOpacity>\r\n            {windowWidth >= 800 && (\r\n                <View style={{ flexDirection: 'row' }}>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('Title')}>\r\n                        <Text style={NavbarStyles.menuItem}>Home</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => {\r\n                        navigation.navigate('TrackNav');\r\n                        navigation.reset({\r\n                            index: 0,\r\n                            routes: [{ name: 'Track' }],\r\n                        });\r\n                    }}>\r\n                        <Text style={NavbarStyles.menuItem}>Track</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('News')}>\r\n                        <Text style={NavbarStyles.menuItem}>News</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('Challenges')}>\r\n                        <Text style={NavbarStyles.menuItem}>Challenges</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={openGuideModal}>\r\n                        <Text style={NavbarStyles.menuItem}>Guide</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('UserAccount')}\r\n                        style={{ alignItems: 'center', justifyContent: 'center', paddingLeft: 20, paddingRight: 20 }}>\r\n                        <Icon name=\"user\" size={30} color=\"#fff\" />\r\n                    </TouchableOpacity>\r\n                    <Modal\r\n                        isOpen={guideModalIsOpen}\r\n                        onRequestClose={closeGuideModal}\r\n                        contentLabel=\"Guide Modal\"\r\n                        style={{\r\n                            overlay: {\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n                                backdropFilter: 'blur(5px)'\r\n                            },\r\n                            content: {\r\n                                position: 'relative',\r\n                                width: '85%',\r\n                                height: '85%',\r\n                                overflow: 'hidden',\r\n                                borderColor: \"#062a52\",\r\n                                marginBottom: 100,\r\n                                marginRight: 75,\r\n                                borderWidth: 15,\r\n                                borderRadius: 20\r\n                            }\r\n                        }}\r\n                    >\r\n                        <iframe src=\"https://greenlivingtoolkit.org/waste-reduction/recycle-right/\" style={{ width: '100%', height: '100%' }} title=\"Guide\"></iframe>\r\n                        <button onClick={closeGuideModal} style={{ position: 'absolute', top: 0, right: 0 }}>X</button>\r\n                    </Modal>\r\n                </View>\r\n            )}\r\n            {isMenuOpen && (\r\n                <View\r\n                    style={[\r\n                        NavbarStyles.menuContainer,\r\n                        { left: 0, right: 'auto', flexDirection: 'column' },\r\n                    ]}\r\n                >\r\n                    <TouchableOpacity onPress={() => navigation.navigate('Title')} style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Text style={NavbarStyles.menuItemDrop}>Home</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => {\r\n                        navigation.navigate('TrackNav');\r\n                        navigation.reset({\r\n                            index: 0,\r\n                            routes: [{ name: 'Track' }],\r\n                        });\r\n                    }} style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Text style={NavbarStyles.menuItemDrop}>Track</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('News')} style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Text style={NavbarStyles.menuItemDrop}>News</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('Challenges')} style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Text style={NavbarStyles.menuItemDrop}>Challenges</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={openGuideModal} style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Text style={NavbarStyles.menuItemDrop}>Guide</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('UserAccount')}\r\n                        style={{ alignItems: 'center', justifyContent: 'center', paddingLeft: 20, paddingRight: 20 }}>\r\n                        <Icon name=\"user\" size={30} color=\"#fff\" />\r\n                    </TouchableOpacity>\r\n                    <Modal\r\n                        isOpen={guideModalIsOpen}\r\n                        onRequestClose={closeGuideModal}\r\n                        contentLabel=\"Guide Modal\"\r\n                        style={{\r\n                            overlay: {\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center',\r\n                                backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n                                backdropFilter: 'blur(5px)'\r\n                            },\r\n                            content: {\r\n                                position: 'relative',\r\n                                width: '85%',\r\n                                height: '85%',\r\n                                overflow: 'hidden',\r\n                                borderColor: \"#062a52\",\r\n                                marginBottom: 100,\r\n                                marginRight: 75,\r\n                                borderWidth: 15,\r\n                                borderRadius: 20\r\n                            }\r\n                        }}\r\n                    >\r\n                        <iframe src=\"https://greenlivingtoolkit.org/waste-reduction/recycle-right/\" style={{ width: '100%', height: '100%' }} title=\"Guide\"></iframe>\r\n                        <button onClick={closeGuideModal} style={{ position: 'absolute', top: 0, right: 0 }}>X</button>\r\n                    </Modal>\r\n                </View>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Navbar;","// CarbonFootprintInfo.js\r\nimport React from 'react';\r\nimport { View, Text, Image, StyleSheet } from 'react-native';\r\n\r\nconst CarbonFootprintInfo = () => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <Image source={require('../../assets/reduceCarbonfootprint.png')} style={styles.image} />\r\n            \r\n            <View style={styles.textContainer}>\r\n                <Text style={styles.header}>Why Reduce Your Carbon Footprint?</Text>\r\n                <Text style={styles.description}>\r\n                    By lowering your emissions, you can contribute to slowing down climate\r\n                    change and protecting the environment.\r\n                </Text>\r\n                <View style={styles.card}>\r\n                    <Text style={styles.cardHeader}>Health Benefits</Text>\r\n                    <Text style={styles.cardContent}>\r\n                        Improved air quality. Reducing carbon footprints means reducing air\r\n                        pollution, leading to healthier communities and improved respiratory\r\n                        health for everyone.\r\n                    </Text>\r\n                    <Text style={styles.cardFooter}>Dr. Emma Green</Text>\r\n                </View>\r\n                <View style={styles.card}>\r\n                    <Text style={styles.cardHeader}>Sustainable Lifestyle</Text>\r\n                    <Text style={styles.cardContent}>\r\n                        Embracing a sustainable lifestyle boosts your self-sufficiency and\r\n                        resilience while reducing reliance on finite resources.\r\n                    </Text>\r\n                </View>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        paddingTop: 50,\r\n        padding: 50,\r\n        backgroundColor: '#fff',\r\n    },\r\n    image: {\r\n        width: '50%', // Adjust the width as necessary\r\n        height: '100%', // Adjust the height as necessary\r\n        resizeMode: 'contain',\r\n    },\r\n    textContainer: {\r\n        width: '50%', // Adjust the width as necessary\r\n        paddingHorizontal: 20,\r\n    },\r\n    header: {\r\n        fontSize: 24,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n    },\r\n    description: {\r\n        fontSize: 16,\r\n        marginBottom: 20,\r\n    },\r\n    card: {\r\n        borderWidth: 1,\r\n        borderColor: '#ddd',\r\n        padding: 20,\r\n        marginBottom: 20,\r\n    },\r\n\r\n    cardHeader: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n    },\r\n    cardContent: {\r\n        fontSize: 14,\r\n        marginBottom: 10,\r\n    },\r\n    cardFooter: {\r\n        fontSize: 12,\r\n        color: '#aaa',\r\n        textAlign: 'right',\r\n    },\r\n});\r\n\r\nexport default CarbonFootprintInfo;\r\n","\r\nimport React from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\n\r\nconst testimonials = [\r\n    {\r\n        id: '1',\r\n        name: 'John Doe',\r\n        comment: 'EcoTrack has helped me become more aware of my carbon footprint. The personal tips are great!',\r\n        rating: '★★★★★',\r\n    },\r\n    {\r\n        id: '2',\r\n        name: 'Jane Smith',\r\n        comment: 'It’s great to see my progress and how small changes can make a big difference. I highly recommend it!',\r\n        rating: '★★★★★',\r\n    },\r\n    // ... add more testimonials as needed\r\n];\r\n\r\nconst TestimonialCard = ({ testimonial }) => {\r\n    return (\r\n        <View style={styles.card}>\r\n            <Text style={styles.cardTitle}>{testimonial.name}</Text>\r\n            <Text style={styles.cardRating}>{testimonial.rating}</Text>\r\n            <Text style={styles.cardComment}>{testimonial.comment}</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst Testimonials = () => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.textBlock}>\r\n                <Text style={styles.header}>What Our Users Say</Text>\r\n                <Text style={styles.subHeader}>\r\n                    Don’t just take our word for it! See what EcoTrack users {'\\n'}have to say about their experience.\r\n                </Text>\r\n            </View>\r\n            <ScrollView\r\n                horizontal\r\n                showsHorizontalScrollIndicator={false}\r\n                contentContainerStyle={styles.scrollViewContainer}>\r\n                {testimonials.map(testimonial => (\r\n                    <TestimonialCard key={testimonial.id} testimonial={testimonial} />\r\n                ))}\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: 'row', // Arrange items in a row\r\n        alignItems: 'flex-start', // Align items to the start of the cross axis\r\n        padding: 20,\r\n        backgroundColor: '#fff',\r\n    },\r\n    textBlock: {\r\n        // Take up only as much space as needed for the text\r\n        marginRight: 20, // Adjust the space between the textBlock and the ScrollView\r\n    },\r\n    header: {\r\n        padding: 20,\r\n        fontSize: 36,\r\n        fontWeight: 'bold',\r\n    },\r\n    subHeader: {\r\n        fontSize: 22,\r\n        color: '#666',\r\n        marginBottom: 20, // Adjust the space between subHeader and the cards\r\n        padding: 5,\r\n    },\r\n    scrollViewContainer: {\r\n        flexDirection: 'row',\r\n    },\r\n    card: {\r\n        backgroundColor: '#e0e0e0',\r\n        borderRadius: 6,\r\n        padding: 20,\r\n        marginRight: 16,\r\n        alignItems: 'flex-start',\r\n        justifyContent: 'center',\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowRadius: 6,\r\n        shadowOpacity: 0.1,\r\n        elevation: 2,\r\n        width: 250,\r\n    },\r\n    cardTitle: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginBottom: 5,\r\n    },\r\n    cardRating: {\r\n        color: '#f5a623',\r\n        marginBottom: 10,\r\n    },\r\n    cardComment: {\r\n        fontSize: 14,\r\n        color: '#333',\r\n    },\r\n});\r\n\r\nexport default Testimonials;","// CommunitySignUp.js\r\nimport React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\n\r\nconst CommunitySignUp = () => {\r\n    // Replace with your sign-up logic\r\n    const handleSignUp = () => {\r\n        navigation.navigate('SignUp');\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.header}>Join the EcoTrack Community</Text>\r\n            <Text style={styles.subHeader}>\r\n                Sign up to access advanced features and connect with like-minded{'\\n'} individuals on your eco-friendly journey.\r\n            </Text>\r\n            <TouchableOpacity style={styles.button} onPress={handleSignUp}>\r\n                <Text style={styles.buttonText}>Sign Up</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        alignItems: 'center', // Center the content\r\n        padding: 20, // Add padding for spacing\r\n    },\r\n    header: {\r\n        fontSize: 22,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center', // Center the text\r\n        marginBottom: 10, // Add some margin at the bottom\r\n        color: '#fff',\r\n    },\r\n    subHeader: {\r\n        fontSize: 16,\r\n        textAlign: 'center', // Center the text\r\n        marginBottom: 20, // Add some margin at the bottom\r\n        color: '#fff',\r\n    },\r\n    button: {\r\n        backgroundColor: '#fff', // Button color\r\n        paddingVertical: 10, // Vertical padding\r\n        paddingHorizontal: 20, // Horizontal padding\r\n        borderRadius: 25, // Rounded corners\r\n    },\r\n    buttonText: {\r\n        color: '#000', // Text color\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n\r\nexport default CommunitySignUp;\r\n","import React from 'react';\r\n\r\nconst ThemeContext = React.createContext('winter');\r\n\r\nexport default ThemeContext;","\r\n/* this code will first go to the users profile on the back end and grab the id number, that will then be used for \r\nthe \"initialData.id\" so that it can grab all the other data with the right extention, to change data just change ie dietarychoice to driving for the driving data */\r\n/*\r\nconst [data, setData] = useState([]);\r\nconst [data_to, setData_to] = useState([]);\r\n\r\nuseEffect(() => {\r\n    fetch('http://localhost:5000/profile')\r\n        .then(res => res.json())\r\n        .then(initialData => {\r\n            setData(initialData);\r\n\r\n            // Now fetch the second piece of data using the id from the initial data\r\n            return fetch('http://localhost:5000/' + initialData.id + '/info/dietarychoice');\r\n        })\r\n        .then(res => res.json())\r\n        .then(secondaryData => {\r\n            setData_to(secondaryData);\r\n        })\r\n        .catch(error => {\r\n            console.error(\"There was an error fetching the data:\", error);\r\n        });\r\n}, []);\r\n*/\r\n\r\n\r\n\r\n/* below in the \"html(ish)\" you will see a calling to data.id and data_to, currently with how its set up\r\nit will show the users id for the first one and for data_to it will show whatever is on the backend for the\r\nextention that you have provided. Now most of it is in a list so to extract each element you can just \r\nindex data_to ie data_to[0] and this might output 2007 if you are pulling from the driving extention */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { StyleSheet, ScrollView, Text, View, Image, ImageBackground, Animated, Easing, Touchable, Button, TextInput, Alert, Dimensions, TouchableOpacity, Modal } from \"react-native\";\r\n\r\n\r\nimport styles from \"../Styles/TitleScreenStyles\";\r\nimport ProductCard from '../ProductCard';\r\nimport InfoCard from '../InfoCard';\r\nimport GraphCard from '../GraphCard';\r\nimport Footer from '../Footer';\r\nimport Navbar from '../Navbar';\r\nimport Snowfall from 'react-snowfall';\r\nimport CarbonFootprintInfo from '../CarbonFootprintInfo';\r\nimport Testimonials from '../Testimonials';\r\nimport CommunitySignUp from '../CommunitySignUp';\r\nimport ThemeContext from '../ThemeContext';\r\n\r\nconst TitleScreen = ({ navigation }) => { // Make sure to receive the navigation prop if it's being used\r\n    const [scaleValue] = useState(new Animated.Value(1));\r\n\r\n    useEffect(() => {\r\n        const pulseAnimation = Animated.sequence([\r\n            Animated.timing(scaleValue, {\r\n                toValue: 1.07,\r\n                duration: 1500,\r\n                easing: Easing.ease,\r\n                useNativeDriver: true,\r\n            }),\r\n            Animated.timing(scaleValue, {\r\n                toValue: 1,\r\n                duration: 1500,\r\n                easing: Easing.ease,\r\n                useNativeDriver: true,\r\n            }),\r\n        ]);\r\n\r\n        Animated.loop(pulseAnimation).start();\r\n    }, [scaleValue]);\r\n\r\n    const screenHeight = Dimensions.get('window').height;\r\n\r\n    const handleLikePress = () => {\r\n        // Handle the like button press\r\n    };\r\n\r\n\r\n\r\n    const graphData = {\r\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\r\n        datasets: [{\r\n            data: [20, 45, 28, 80, 99, 43],\r\n            // ... other dataset properties\r\n        }]\r\n    };\r\n\r\n    const customChartConfig = {\r\n        // Optional custom chart configuration here\r\n    };\r\n\r\n    const { theme, setTheme } = useContext(ThemeContext);\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackground.png\")}>\r\n                {\r\n                    theme === 'autumn' && <Snowfall snowflakeCount={200} />\r\n                }\r\n                {\r\n                    theme === 'winter' && <Snowfall snowflakeCount={1000} />\r\n                }\r\n                <ScrollView contentContainerStyle={styles.container}>\r\n                    <ImageBackground\r\n                        source={theme === 'spring' ? require(\"../../../assets/spring.png\") :\r\n                            theme === 'summer' ? require(\"../../../assets/summer.png\") :\r\n                                theme === 'autumn' ? require(\"../../../assets/autumn.png\") :\r\n                                    require(\"../../../assets/winter.png\")}\r\n                        style={{ ...styles.titleScreen, marginTop: -60 }}>\r\n                        <View style={styles.themeButtonsContainer}>\r\n                            <TouchableOpacity style={styles.themeButton} onPress={() => setTheme('spring')}>\r\n                                <Text style={styles.buttonText}>Spring</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={styles.themeButton} onPress={() => setTheme('summer')}>\r\n                                <Text style={styles.buttonText}>Summer</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={styles.themeButton} onPress={() => setTheme('autumn')}>\r\n                                <Text style={styles.buttonText}>Autumn</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity style={styles.themeButton} onPress={() => setTheme('winter')}>\r\n                                <Text style={styles.buttonText}>Winter</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                        <Animated.Image\r\n                            source={require(\"../../../assets/ecoTrackLogosu.png\")}\r\n                            style={[styles.logo, { transform: [{ scale: scaleValue }] }]}\r\n                        />\r\n\r\n                        <View style={styles.contentContainer}>\r\n                            <Text style={styles.title}>\r\n                                Track and Reduce Your{'\\n'}Carbon Footprint\r\n                            </Text>\r\n                            <Text style={styles.subtitle}>\r\n                                Monitor your daily activities and get personalized insights and{'\\n'}recommended to lower your impact.\r\n                            </Text>\r\n                            <View style={styles.buttonContainer}>\r\n                                <TouchableOpacity style={styles.button} onPress={() => { }}>\r\n                                    <Text style={styles.buttonText}>Learn more</Text>\r\n                                </TouchableOpacity>\r\n                                <TouchableOpacity style={styles.button} onPress={() => { }}>\r\n                                    <Text style={styles.buttonText}>Start tracking</Text>\r\n                                </TouchableOpacity>\r\n                            </View>\r\n                        </View>\r\n                    </ImageBackground>\r\n\r\n\r\n                    <Text style={styles.titleto}>\r\n                        Popular Eco-Friendly{'\\n'}Products\r\n                    </Text>\r\n                    <View style={styles.productSection}>\r\n                        <ProductCard\r\n                            bestsellerLabel=\"Best Seller\"\r\n                            productName=\"Reusable Water Bottle\"\r\n                            productDesc=\"1,000 plastic bottles avoided\"\r\n                            imageSrc={require('../../../assets/reusablewaterbottle.png')}\r\n                            onLikePress={handleLikePress}\r\n                            url=\"https://www.amazon.com/BJPKPK-Stainless-Insulated-Bottles-Goldenrod/dp/B08GG5TZXG/ref=sr_1_7?keywords=reusable+water+bottle&sr=8-7\"\r\n                        />\r\n                        <ProductCard\r\n                            bestsellerLabel=\"New\"\r\n                            productName=\"Compostable Food Containers\"\r\n                            productDesc=\"50 pounds of waste diverted\"\r\n                            imageSrc={require('../../../assets/CompostableFoodContainers.png')}\r\n                            onLikePress={handleLikePress}\r\n                            url=\"https://www.amazon.com/HOMETALL-Containers-Leakproof-Meal-Prep-Dishwasher/dp/B0BNQ1WDBZ/ref=sr_1_16?keywords=tupperware&sr=8-16\"\r\n\r\n                        />\r\n                        <ProductCard\r\n                            bestsellerLabel=\"Old\"\r\n                            productName=\"Solar Power Bank\"\r\n                            productDesc=\"2,000mAh of clean energy\"\r\n                            imageSrc={require('../../../assets/SolarPowerBank.png')}\r\n                            onLikePress={handleLikePress}\r\n                            url=\"https://www.amazon.com/Feeke-Solar-Charger-Power-Bank-Built-Flashlight-Electronic/dp/B0C4JSYZJN/ref=sr_1_2_sspa?keywords=solar+power+bank&sr=8-2-spons&sp_csd=d2lkZ2V0TmFtZT1zcF9hdGY&psc=1\"\r\n\r\n                        />\r\n                    </View>\r\n\r\n\r\n                    <View style={styles.line} />\r\n\r\n                    <Text style={styles.titleto}>\r\n                        Your Carbon Footprint\r\n                    </Text>\r\n                    <View style={styles.infoCardContainer}>\r\n                        <InfoCard\r\n                            title=\"Today's Emissions\"\r\n                            value=\"14.5kg CO2e\"\r\n                            comparison=\"+2% compared to yesterday\"\r\n                        />\r\n                        <InfoCard\r\n                            title=\"Total Savings\"\r\n                            value=\"150kg CO2e\"\r\n                            comparison=\"-10% compared to last month\"\r\n                        />\r\n                    </View>\r\n                    <GraphCard title=\"Monthly Carbon Emissions\" data={graphData} chartConfig={customChartConfig} />\r\n                    <View style={styles.line} />\r\n\r\n                    <CarbonFootprintInfo />\r\n                    <View style={styles.line} />\r\n\r\n                    <Testimonials />\r\n                    <View style={styles.line} />\r\n\r\n                    <CommunitySignUp />\r\n\r\n                    <View style={{ height: 50 }} /> {/* This is your spacer View */}\r\n                </ScrollView>\r\n            </ImageBackground>\r\n            <Footer navigation={navigation} />\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default TitleScreen;","import { StyleSheet } from \"react-native\";\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"transparent\",\r\n    },\r\n    logo: {\r\n        position: \"absolute\",\r\n        width: \"25%\", // Adjusted the percentage to make the size responsive (bc chad/rebecca said responsive is cool)\r\n        aspectRatio: 1, // Maintain the aspect ratio for responsive scaling (bc chad/rebecca said responsive is cool)\r\n        resizeMode: \"contain\",\r\n        top: -50,\r\n    },\r\n    input: {\r\n        width: '160%',\r\n        height: 50,\r\n        padding: 10,\r\n        margin: 10,\r\n        borderColor: '#062A52',\r\n        borderWidth: 2,\r\n        borderRadius: 5,\r\n        backgroundColor: 'white',\r\n        borderRadius: 15,\r\n    },\r\n    button: {\r\n        width: 120,\r\n        height: 40,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#062A52',\r\n        borderRadius: 5,\r\n        marginTop: 10,\r\n        borderRadius: 15,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        textShadowColor: 'black',\r\n        textShadowOffset: { width: 1, height: 1 },\r\n        textShadowRadius: 1,\r\n    },\r\n    linkText: {\r\n        paddingBottom: 10,\r\n        color: 'white',\r\n        textDecorationLine: 'underline', // Optional: Adds an underline for the clickable text\r\n        textShadowColor: 'black',\r\n        textShadowOffset: { width: 1, height: 1 },\r\n        textShadowRadius: 1,\r\n    },\r\n});\r\n\r\nexport default styles;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, Image, ImageBackground, Animated, Easing, Button, TextInput, Alert, Dimensions, TouchableOpacity } from \"react-native\";\r\nimport styles from \"../Styles/LogInStyles\";\r\nimport Footer from '../Footer';\r\nimport axios from 'axios';\r\n\r\nfunction LogIn() {\r\n    const [scaleValue] = useState(new Animated.Value(1));\r\n\r\n    useEffect(() => {\r\n        const pulseAnimation = Animated.sequence([\r\n            Animated.timing(scaleValue, {\r\n                toValue: 1.07,\r\n                duration: 1500,\r\n                easing: Easing.ease,\r\n                useNativeDriver: true,\r\n            }),\r\n            Animated.timing(scaleValue, {\r\n                toValue: 1,\r\n                duration: 1500,\r\n                easing: Easing.ease,\r\n                useNativeDriver: true,\r\n            }),\r\n        ]);\r\n\r\n        Animated.loop(pulseAnimation).start();\r\n    }, [scaleValue]);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    //console.log(username, password)\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            // Make POST request using axios with data\r\n            const response = await axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/login',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                data: {\r\n                    email: email,\r\n                    password: password,\r\n                }\r\n            });\r\n\r\n            //console.log(response.data);  // Print out the response data\r\n            if (response.data.success) {\r\n                navigation.navigate('Title');\r\n            } else {\r\n                // If the login is not successful, show an alert\r\n                alert(\"Login Failed\", response.data.error || \"Incorrect email or password\");\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            // If there is an error in the request, show an alert\r\n            alert(\"Login Error\", \"An error occurred during login, please try again.\");\r\n        }\r\n    };\r\n\r\n    //handleLogin();\r\n\r\n\r\n\r\n    return (\r\n        <ImageBackground\r\n            source={require(\"../../../assets/ecoBackground.png\")}\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '100vh', // full viewport height\r\n            }}\r\n        >\r\n            <Image source={require(\"../../../assets/ecoSun.png\")}\r\n                style={{\r\n                    width: 300,\r\n                    height: 300,\r\n                    position: 'absolute',\r\n                    bottom: 0\r\n                }} />\r\n            <Animated.Image\r\n                source={require(\"../../../assets/ecoTrackLogosu.png\")}\r\n                style={[styles.logo, { transform: [{ scale: scaleValue }] }]}\r\n            />\r\n            <View style={{ ...styles.container, marginBottom: 100 }}>\r\n                <TextInput\r\n                    style={{ ...styles.input, fontSize: 18 }}\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChangeText={text => setEmail(text)}\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={{ ...styles.input, fontSize: 18 }}\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChangeText={text => setPassword(text)}\r\n                    secureTextEntry={true}\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={async () => {\r\n                        await handleLogin();\r\n\r\n                    }}\r\n                >\r\n                    <Text style={styles.buttonText}>Sign In</Text>\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n\r\n\r\n            <Text style={{ ...styles.text, color: 'white' }}>Don't Have an Account? </Text>\r\n            <TouchableOpacity onPress={() => navigation.navigate('SignUp')}>\r\n                <Text style={{ ...styles.linkText, color: 'white' }}>Sign Up</Text>\r\n            </TouchableOpacity>\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </ImageBackground >\r\n\r\n    );\r\n}\r\nexport default LogIn;\r\n\r\n\r\n\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"transparent\",\r\n    },\r\n    logo: {\r\n        position: \"absolute\",\r\n        width: \"25%\", // Adjusted the percentage to make the size responsive (bc chad/rebecca said responsive is cool)\r\n        aspectRatio: 1, // Maintain the aspect ratio for responsive scaling (bc chad/rebecca said responsive is cool)\r\n        resizeMode: \"contain\",\r\n        top: -50,\r\n    },\r\n    input: {\r\n        width: 400,\r\n        height: 50,\r\n        fontSize: 18,\r\n        padding: 10,\r\n        margin: 10,\r\n        borderColor: '#062A52',\r\n        borderWidth: 2,\r\n        borderRadius: 5,\r\n        backgroundColor: 'white',\r\n        borderRadius: 15,\r\n    },\r\n    button: {\r\n        width: 120,\r\n        height: 40,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#062A52',\r\n        borderRadius: 5,\r\n        marginTop: 10,\r\n        borderRadius: 15,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        textShadowColor: 'black',\r\n        textShadowOffset: { width: 1, height: 1 },\r\n        textShadowRadius: 1,\r\n    },\r\n    linkText: {\r\n        paddingBottom: 10,\r\n        color: 'white',\r\n        textDecorationLine: 'underline',\r\n        textShadowColor: 'black',\r\n        textShadowOffset: { width: 1, height: 1 },\r\n        textShadowRadius: 1,\r\n    },\r\n    errorText: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n\r\nexport default styles;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, Image, ImageBackground, Animated, Easing, Button, TextInput, Alert, Dimensions, TouchableOpacity } from \"react-native\";\r\nimport styles from \"../Styles/SignUpStyle\";\r\nimport axios from 'axios';\r\nimport Footer from \"../Footer\";\r\n\r\nfunction LogIn() {\r\n    const [scaleValue] = useState(new Animated.Value(1));\r\n\r\n    useEffect(() => {\r\n        const pulseAnimation = Animated.sequence([\r\n            Animated.timing(scaleValue, {\r\n                toValue: 1.07,\r\n                duration: 1500,\r\n                easing: Easing.ease,\r\n                useNativeDriver: true,\r\n            }),\r\n            Animated.timing(scaleValue, {\r\n                toValue: 1,\r\n                duration: 1500,\r\n                easing: Easing.ease,\r\n                useNativeDriver: true,\r\n            }),\r\n        ]);\r\n\r\n        Animated.loop(pulseAnimation).start();\r\n    }, [scaleValue]);\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/inuseemail')\r\n            .then(res => res.json())\r\n            .then(initialData => {\r\n                setData(initialData);\r\n\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n                console.error(\"There was an error fetching the data:\", error);\r\n            });\r\n    }, []);\r\n\r\n    const [first, setFirst] = useState('');\r\n    const [last, setLast] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [isValid, setIsValid] = useState(false);\r\n    const [isValidEmail, setIsValidEmail] = useState(false);\r\n\r\n    const generateRandomCode = () => {\r\n        return Math.floor(Math.random() * (999999 - 100000 + 1)) + 100000;\r\n    };\r\n\r\n    const [code, setCode] = useState(generateRandomCode().toString());\r\n\r\n\r\n    //console.log(username, password)\r\n    //setCode(code);\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            // Make POST request using axios with data\r\n            const response = await axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/signup',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                data: {\r\n                    first: first,\r\n                    last: last,\r\n                    email: email,\r\n                    password: password,\r\n                    code: code\r\n                }\r\n            });\r\n\r\n            //console.log(response.data);  // Print out the response data\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n    const verify = async () => {\r\n        try {\r\n            // Make POST request using axios with data\r\n            const response = await axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/verify',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                data: {\r\n                    code: code  // Make sure this is the variable containing the code you want to send\r\n                }\r\n            });\r\n            //console.log(response.data);  // Print out the response data\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n\r\n    //handleLogin();\r\n\r\n    const handlePasswordChange = (text) => {\r\n        setPassword(text);\r\n\r\n        // Check if the password has at least 7 characters, a capital letter, and a number\r\n        const hasUpperCase = /[A-Z]/.test(text);\r\n        const hasNumber = /\\d/.test(text);\r\n\r\n        setIsValid(text.length >= 7 && hasUpperCase && hasNumber);\r\n    };\r\n\r\n    const handleEmail = (text) => {\r\n        return new Promise((resolve) => {\r\n            setEmail(text);\r\n\r\n            if (data && Array.isArray(data.emails) && data.emails.includes(text)) {\r\n                alert('Email in use, Please use a different one');\r\n                setIsValidEmail(false);\r\n                resolve(false);\r\n            } else {\r\n                setIsValidEmail(true);\r\n                resolve(true);\r\n            }\r\n        });\r\n    };\r\n\r\n    const handlePress = async () => {\r\n\r\n        const emailIsValid = await handleEmail(email);\r\n        if (!first.trim() || !last.trim() || !email.trim() || !isValid) {\r\n            alert('Field is empty', 'Please fill out all the fields.');\r\n        } else {\r\n            if (emailIsValid && isValid) {\r\n                await verify();\r\n                await handleLogin();\r\n                //send email\r\n\r\n                navigation.navigate('Verification');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ImageBackground\r\n            source={require(\"../../../assets/ecoBackground.png\")}\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '100vh', // full viewport height\r\n            }}\r\n        >\r\n\r\n            <Animated.Image\r\n                source={require(\"../../../assets/ecoTrackLogosu.png\")}\r\n                style={[styles.logo, { transform: [{ scale: scaleValue }] }]}\r\n            />\r\n\r\n            <Image source={require(\"../../../assets/ecoMountain.png\")}\r\n                style={{\r\n                    width: Dimensions.get('window').width,\r\n                    height: 250,\r\n                    position: 'absolute',\r\n                    bottom: 0\r\n                }}\r\n                resizeMode=\"cover\"\r\n            />\r\n\r\n            <View style={{ ...styles.container, marginTop: 50 }}>\r\n\r\n                <TextInput\r\n                    style={{ ...styles.input }}\r\n                    placeholder=\"First Name\"\r\n                    value={first}\r\n                    onChangeText={text => setFirst(text)}\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={{ ...styles.input }}\r\n                    placeholder=\"Last Name\"\r\n                    value={last}\r\n                    onChangeText={text => setLast(text)}\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={{ ...styles.input }}\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChangeText={text => setEmail(text)}\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={{ ...styles.input }}\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChangeText={handlePasswordChange}\r\n                    secureTextEntry={true}\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                {!isValid && password.length > 0 && (\r\n                    <Text style={styles.errorText}>\r\n                        Password must be at least 7 characters long, contain a capital letter and a number.\r\n                    </Text>\r\n                )}\r\n                <br></br>\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={async () => { handlePress() }}\r\n                >\r\n                    <Text style={styles.buttonText}>Sign Up</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <Text style={{ ...styles.text, color: 'white' }}>Have an Account? </Text>\r\n            <TouchableOpacity onPress={() => navigation.navigate('LogIn')}>\r\n                <Text style={styles.linkText}>Sign In</Text>\r\n            </TouchableOpacity>\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </ImageBackground>\r\n    );\r\n}\r\nexport default LogIn;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport Footer from '../Footer';\r\nimport Navbar from '../Navbar';\r\n\r\nfunction PP({ navigation }) {\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.navbarContainer}>\r\n                <Navbar />\r\n            </View>\r\n            <View style={styles.scrollViewContainer}>\r\n                <ScrollView style={styles.scrollView}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={styles.title}>\r\n                            {\"\\nPrivacy Policy\"}\r\n                        </Text>\r\n                    </View>\r\n                    <Text style={styles.text}>\r\n                        {`                      \r\n        Updated: 11/07/2023\r\n\r\n        **1. Introduction**\r\n\r\n        Thank you for using EcoTrack, a mobile application aimed at promoting environmental consciousness. EcoTrack is committed to protecting your privacy and ensuring the security of your personal information. \r\n        This Privacy Policy explains how we collect, use, and safeguard your data when you use our application. By using EcoTrack, you agree to the terms outlined in this policy.\r\n\r\n        **2. Information We Collect**\r\n\r\n        2.1. User-Provided Information: To provide you with personalized insights and recommendations for reducing your carbon footprint, EcoTrack may collect the following information:\r\n        - Name\r\n        - Email address\r\n        - User-provided data on your daily activities, such as driving habits, energy consumption, dietary choices, and more.\r\n\r\n        2.2. Automatically Collected Information: EcoTrack may also collect the following information automatically:\r\n        - Device information, including the type of mobile device you use, unique device identifiers, and operating system.\r\n        - Usage data, such as the date and time you access the app and your interactions with it.\r\n        - Geolocation data, if you grant permission for the app to access your location information.\r\n\r\n        **3. How We Use Your Information**\r\n\r\n        EcoTrack uses the collected information to:\r\n        - Calculate your carbon footprint based on your daily activities.\r\n        - Provide personalized insights and recommendations for reducing your carbon footprint.\r\n        - Improve the functionality and performance of the EcoTrack app.\r\n        - Respond to your requests and communicate with you.\r\n\r\n        **4. Sharing Your Information**\r\n\r\n        We do not share your personal information with third parties, except in the following circumstances:\r\n        - With your explicit consent.\r\n        - When required by law, such as to comply with a subpoena or similar legal process.\r\n        - In connection with a merger, acquisition, or sale of all or a portion of our assets.\r\n\r\n        **5. Data Security**\r\n\r\n        EcoTrack takes data security seriously and employs appropriate measures to safeguard your information. However, no method of transmission over the internet or electronic storage is entirely secure.\r\n        \r\n        **6. Your Choices**\r\n\r\n        You can choose not to provide certain information or revoke your consent to collect specific data, but doing so may limit your access to certain features of the EcoTrack app.\r\n\r\n        **7. Updates to this Privacy Policy**\r\n\r\n        EcoTrack may update this Privacy Policy from time to time. We will notify you of any changes by posting the new Privacy Policy on this page. We encourage you to review this Privacy Policy periodically.\r\n\r\n        **8. Contact Us**\r\n\r\n        If you have any questions or concerns about this Privacy Policy, please contact us at EcoTracker2023@gmail.com\r\n`}\r\n                    </Text>\r\n                </ScrollView>\r\n            </View>\r\n            <Footer navigation={navigation} />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    scrollViewContainer: {\r\n        flex: 1,\r\n        paddingTop: 80,\r\n    },\r\n    navbarContainer: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        width: '100%',\r\n        zIndex: 1,\r\n    },\r\n    text: {\r\n        fontSize: 18,\r\n        fontWeight: '600',\r\n        color: 'black',\r\n        paddingBottom: 20,\r\n    },\r\n    titleContainer: {\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n\r\nexport default PP;","import React from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity } from 'react-native';\r\nimport Footer from '../Footer';\r\nimport Navbar from '../Navbar';\r\n\r\nfunction ToS({ navigation }) {\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.navbarContainer}>\r\n                <Navbar />\r\n            </View>\r\n            <View style={styles.scrollViewContainer}>\r\n                <ScrollView style={styles.scrollView}>\r\n                    <View style={styles.titleContainer}>\r\n                        <Text style={styles.title}>\r\n                            {\"\\nTerms of Service\"}\r\n                        </Text>\r\n                    </View>\r\n                    <Text style={styles.text}>\r\n                        {`\r\n        Updated: 11/07/2023\r\n\r\n        By accessing or using the EcoTrack mobile application, you agree to be bound by these Terms of Service. If you do not agree with these terms, please do not use the app.\r\n\r\n        **1. Acceptance of Terms**\r\n\r\n        1.1. Effective Date: These Terms of Service are effective as of the date of your first use of the EcoTrack app.\r\n        1.2. Updates: EcoTrack may update these Terms of Service from time to time. Your continued use of the app after any changes indicate your acceptance of the updated terms. It is your responsibility to review these terms regularly.\r\n\r\n        **2. Use of EcoTrack**\r\n\r\n        2.1. Eligibility: You must be at least 18 years old to use EcoTrack. If you are under 18, you may use the app with the consent and supervision of a parent or legal guardian.\r\n        2.2. User Account: To use certain features of EcoTrack, you may be required to create an account. You are responsible for maintaining the confidentiality of your account credentials and ensuring their accuracy.\r\n\r\n        **3. Privacy**\r\n\r\n        Your use of EcoTrack is also governed by our Privacy Policy, which can be found at: '`}\r\n\r\n                        <Text style={{ color: 'blue' }} onPress={() => navigation.navigate('PP')}>\r\n                            Privacy Policy\r\n                        </Text>\r\n                        {`' please review this policy to understand how we collect, use, and protect your data.\r\n\r\n        **4. User-Generated Content**\r\n\r\n        4.1. Ownership: Any content you submit to EcoTrack, including user-provided data on daily activities, remains your property.\r\n        4.2. License: By submitting content, you grant EcoTrack a non-exclusive, worldwide, royalty-free, and transferable license to use, display, reproduce, and distribute the content in connection with the app's services.\r\n\r\n        **5. Prohibited Conduct**\r\n\r\n        When using EcoTrack, you agree not to:\r\n\r\n        5.1. Violate any applicable laws, regulations, or these Terms of Service.\r\n        5.2. Use the app for any unlawful or unauthorized purpose.\r\n        5.3. Interfere with the proper functioning of the app, including introducing viruses or other malicious code.\r\n        5.4. Harass, abuse, or harm other users of the app.\r\n        5.5. Attempt to gain unauthorized access to the app or its systems.\r\n\r\n        **6. Termination**\r\n\r\n        EcoTrack reserves the right to terminate your access to the app, with or without cause, at any time.\r\n\r\n        **7. Disclaimer of Warranties**\r\n\r\n        EcoTrack is provided \"as is\" without warranties of any kind, either express or implied, including, but not limited to, the implied warranties of merchantability and fitness for a particular purpose.\r\n\r\n        **8. Limitation of Liability**\r\n\r\n        To the fullest extent allowed by applicable law, EcoTrack and its affiliates shall not be liable for any indirect, incidental, special, consequential, or punitive damages or for any loss of profits or revenues.\r\n\r\n        **9. Governing Law**\r\n\r\n        These Terms of Service are governed by and construed in accordance with the laws of United States. Any legal action arising out of these terms shall be brought exclusively in the courts located within United States.\r\n\r\n        **10. Contact Information**\r\n\r\n        If you have any questions or concerns about these Terms of Service, please contact us at EcoTracker2023@gmail.com\r\n`}\r\n                    </Text>\r\n                </ScrollView>\r\n            </View>\r\n            <Footer navigation={navigation} />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    scrollViewContainer: {\r\n        flex: 1,\r\n        paddingTop: 80,\r\n    },\r\n    navbarContainer: {\r\n        position: 'absolute',\r\n        top: 0,\r\n        width: '100%',\r\n        zIndex: 1,\r\n    },\r\n    text: {\r\n        fontSize: 18,\r\n        fontWeight: '600',\r\n        color: 'black',\r\n        paddingBottom: 20,\r\n    },\r\n    titleContainer: {\r\n        alignItems: 'center',\r\n    },\r\n    title: {\r\n        fontSize: 24,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n    },\r\n});\r\n\r\nexport default ToS;","import React, { useState, useEffect } from 'react';\r\nimport { View, ScrollView, Text, FlatList, StyleSheet, ImageBackground, TouchableOpacity, Image } from 'react-native';\r\nimport axios from 'axios';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\nimport Modal from 'react-modal';\r\n\r\nModal.setAppElement('#root');\r\n\r\nfunction News() {\r\n    const [news, setNews] = useState([]);\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const [modalUrl, setModalUrl] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchNews = async () => {\r\n            try {\r\n                const response = await axios.get('https://newsapi.org/v2/everything', {\r\n                    params: {\r\n                        q: '\"climate change\", \"environment\", \"climate crisis\"',\r\n                        sortBy: 'publishedAt',\r\n                        apiKey: 'bde5b060f669431985e03cadc068dd43'\r\n                    }\r\n                });\r\n\r\n                const excludedDomains = ['subscriber.politicopro.com', 'www.vox.com', 'www.sciencedaily.com', 'www.forbes.com', 'www.planetizen.com', 'press.un.org', 'www.rigzone.com', 'www.globenewswire.com', 'www.marketscreener.com', 'www.defense.gov', 'removed.com',\r\n                    'www.bangkokpost.com', 'theconversation.com', 'www.cnn.com', 'inthesetimes.com', 'electrek.co', 'allafrica.com', 'www.cnbc.com', 'www.nationalobserver.com', 'www.businessinsider.com', 'www.latimes.com', 'voxeurop.eu', 'economictimes.indiatimes.com',\r\n                    'wattsupwiththat.com', 'www.vice.com', 'theecologist.org', 'www.newsweek.com', 'truthout.org', 'www.project-syndicate.org', 'variety.com', 'news.sky.com', 'sustainability.stanford.edu', 'time.com', 'www.scientificamerican.com', 'divinity.yale.edu',\r\n                    'news.yale.edu', 'iasexamportal.com', 'newrepublic.com', 'wwd.com', 'skepticalscience.com', 'www.rawstory.com', 'pr.euractiv.com', 'newatlas.com', 'goodinternet.substack.com', 'www.foxnews.com', 'www.irishtimes.com', 'www.wallpaper.com', 'www.news24.com',\r\n                    'www.gamesradar.com', 'www.counterpunch.org', 'www.nzherald.co.nz', 'www.advocate.com', 'sustainability.yale.edu', 'www.ecb.europa.eu', 'call-for-papers.sas.upenn.edu', 'www.livemint.com', 'www.thenation.com', 'www.straitstimes.com', 'www.psychologytoday.com',\r\n                    'bleedingcool.com', 'www.cbc.ca', 'www.thestar.com.my', 'www.commondreams.org', 'environment.yale.edu'];\r\n\r\n                const filteredArticles = response.data.articles.filter(article => {\r\n                    const articleDomain = new URL(article.url).hostname;\r\n                    return !excludedDomains.includes(articleDomain);\r\n                });\r\n\r\n                setNews(filteredArticles);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        };\r\n\r\n        fetchNews();\r\n    }, []);\r\n\r\n    const openModal = (url) => {\r\n        setModalUrl(url);\r\n        setIsOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsOpen(false);\r\n    };\r\n\r\n    const renderItem = ({ item }) => {\r\n        return (\r\n            <TouchableOpacity style={styles.newsItem} onPress={() => openModal(item.url)}>\r\n                <Image\r\n                    style={styles.image}\r\n                    source={{ uri: item.urlToImage ? item.urlToImage : \"https://i.ibb.co/2Y1WkxF/eco-Track-Title-Screen.png\" }}\r\n                    resizeMode=\"cover\"\r\n                />\r\n                <Text style={styles.title}>{item.title}</Text>\r\n            </TouchableOpacity>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackground.png\")} style={{ flex: 1, ...styles.container, overflow: 'hidden' }}>\r\n                {news.length > 0 ? (\r\n                    <ScrollView contentContainerStyle={{ flexGrow: 1, justifyContent: 'center' }}>\r\n                        <Text style={{ fontSize: 50, fontWeight: 'bold', color: 'white', textAlign: 'center' }}>Current News</Text>\r\n                        <FlatList\r\n                            data={news}\r\n                            renderItem={renderItem}\r\n                            keyExtractor={item => item.url}\r\n                            numColumns={2}\r\n                            contentContainerStyle={{ paddingHorizontal: '10%', justifyContent: 'center', marginLeft: 190 }}\r\n                        />\r\n                    </ScrollView>\r\n                ) : (\r\n                    <View style={styles.placeholderContainer}>\r\n                        <Text style={styles.placeholderText}>No news available</Text>\r\n                    </View>\r\n\r\n                )}\r\n                <Modal\r\n                    isOpen={modalIsOpen}\r\n                    onRequestClose={closeModal}\r\n                    contentLabel=\"Article Modal\"\r\n                    style={{\r\n                        overlay: {\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                            backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n                            backdropFilter: 'blur(5px)'\r\n                        },\r\n                        content: {\r\n                            position: 'relative',\r\n                            width: '48%',\r\n                            height: '75%',\r\n                            overflow: 'hidden',\r\n                            borderColor: \"#062a52\",\r\n                            marginBottom: 150,\r\n                            borderWidth: 15,\r\n                            borderRadius: 20\r\n                        }\r\n                    }}\r\n                >\r\n                    <div style={{ width: '100%', height: '100%', boxShadow: '0 6px 20px 10px rgba(0, 0, 0, 0.8)', border: '2px solid #000' }}>\r\n                        <iframe src={modalUrl} width=\"100%\" height=\"100%\"></iframe>\r\n                    </div>\r\n                    <button onClick={closeModal} style={{ position: 'absolute', top: 0, right: 0 }}>X</button>\r\n                </Modal>\r\n            </ImageBackground>\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    listContainer: {\r\n        alignItems: 'center',\r\n    },\r\n    newsItem: {\r\n        margin: 10,\r\n        padding: 10,\r\n        backgroundColor: '#fff',\r\n        borderRadius: 10,\r\n        width: '42%',\r\n        alignSelf: 'stretch',\r\n        borderColor: \"#062a52\",\r\n        borderWidth: 2,\r\n        boxShadow: '10px 5px 10px 5px rgba(0.5, 0.5, 0.5, 0.75)',\r\n    },\r\n    image: {\r\n        width: '100%',\r\n        height: 250,\r\n    },\r\n    title: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n    },\r\n    source: {\r\n        fontSize: 16,\r\n    },\r\n});\r\n\r\nexport default News;","import { StyleSheet } from \"react-native\";\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"transparent\",\r\n    },\r\n    logo: {\r\n        position: \"absolute\",\r\n        width: \"25%\", // Adjusted the percentage to make the size responsive (bc chad/rebecca said responsive is cool)\r\n        aspectRatio: 1, // Maintain the aspect ratio for responsive scaling (bc chad/rebecca said responsive is cool)\r\n        resizeMode: \"contain\",\r\n        top: -50,\r\n    },\r\n    input: {\r\n        width: '160%',\r\n        height: 50,\r\n        padding: 10,\r\n        margin: 10,\r\n        borderColor: '#062A52',\r\n        borderWidth: 2,\r\n        borderRadius: 5,\r\n        backgroundColor: 'white',\r\n        borderRadius: 15,\r\n    },\r\n    button: {\r\n        width: 120,\r\n        height: 40,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: '#062A52',\r\n        borderRadius: 5,\r\n        marginTop: 10,\r\n        borderRadius: 15,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        fontSize: 20,\r\n        textShadowColor: 'black',\r\n        textShadowOffset: { width: 1, height: 1 },\r\n        textShadowRadius: 1,\r\n        marginBottom: 3,\r\n    },\r\n    linkText: {\r\n        paddingBottom: 10,\r\n        color: 'white',\r\n        textDecorationLine: 'underline', // Optional: Adds an underline for the clickable text\r\n        textShadowColor: 'black',\r\n        textShadowOffset: { width: 1, height: 1 },\r\n        textShadowRadius: 1,\r\n    },\r\n});\r\n\r\nexport default styles;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, Image, ImageBackground, Animated, Easing, Button, TextInput, Alert, Dimensions, TouchableOpacity } from \"react-native\";\r\nimport styles from \"../Styles/VerificationStyles\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport Footer from '../Footer';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nfunction Verification() {\r\n    const [scaleValue] = useState(new Animated.Value(1));\r\n\r\n    useEffect(() => {\r\n        const pulseAnimation = Animated.sequence([\r\n            Animated.timing(scaleValue, {\r\n                toValue: 1.07,\r\n                duration: 1500,\r\n                easing: Easing.ease,\r\n                useNativeDriver: true,\r\n            }),\r\n            Animated.timing(scaleValue, {\r\n                toValue: 1,\r\n                duration: 1500,\r\n                easing: Easing.ease,\r\n                useNativeDriver: true,\r\n            }),\r\n        ]);\r\n\r\n        Animated.loop(pulseAnimation).start();\r\n    }, [scaleValue]);\r\n\r\n    const [userInput, setUserInput] = useState(''); // State for storing user input\r\n    const [backendCode, setBackendCode] = useState(''); // State for storing code from the backend\r\n    //const navigation = useNavigation(); // Navigation hook\r\n\r\n    // Function to fetch code from the backend\r\n    const fetchCodeFromBackend = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/verify');\r\n            console.log(response.data)\r\n            setBackendCode(response.data.code); // Store the fetched code in state\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    // Call this function when the component mounts\r\n    useEffect(() => {\r\n        fetchCodeFromBackend();\r\n    }, []);\r\n\r\n    const handleLogin = () => {\r\n        // Compare the user-entered code with the code fetched from the backend\r\n        if (userInput === backendCode) {\r\n            // If they match, navigate to the next screen\r\n            navigation.navigate('Title'); // Replace 'NextScreen' with your actual screen/route name\r\n            //console.log(backendCode)\r\n        } else {\r\n            // Handle the case where they don't match\r\n            console.error('The codes do not match.');\r\n            alert('Wrong code');\r\n            //console.log(backendCode);\r\n            //console.log(userInput);\r\n        }\r\n        //navigation.navigate('Title');\r\n    };\r\n    //handleLogin();\r\n\r\n\r\n\r\n    return (\r\n        <ImageBackground\r\n            source={require(\"../../../assets/ecoBackground.png\")}\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '100vh', // full viewport height\r\n            }}\r\n        >\r\n            <Image source={require(\"../../../assets/ecoSun.png\")}\r\n                style={{\r\n                    width: 300,\r\n                    height: 300,\r\n                    position: 'absolute',\r\n                    bottom: 0\r\n                }} />\r\n            <Animated.Image\r\n                source={require(\"../../../assets/ecoTrackLogosu.png\")}\r\n                style={[styles.logo, { transform: [{ scale: scaleValue }] }]}\r\n            />\r\n\r\n\r\n            <View style={{ ...styles.container, marginBottom: 100 }}>\r\n                <Text style={{ ...styles.text, color: 'white', fontSize: 18 }}>Verfication Email</Text>\r\n                <Text style={{ ...styles.text, color: 'white', fontSize: 16 }}>We've just sent the OTP code via Email to...</Text>\r\n                <TextInput\r\n                    style={{ ...styles.input, fontSize: 18 }}\r\n                    placeholder=\" ******** \"\r\n                    value={userInput}\r\n                    onChangeText={text => setUserInput(text)}\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <Text style={{ ...styles.text, color: 'white', fontSize: 16 }}> Resend OTP code</Text>\r\n\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={async () => {\r\n                        await handleLogin();\r\n\r\n                    }}\r\n                >\r\n                    <Text style={styles.buttonText}>Confirm</Text>\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n\r\n\r\n\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </ImageBackground >\r\n\r\n    );\r\n}\r\nexport default Verification;\r\n\r\n\r\n\r\n","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n    },\r\n    background: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        paddingTop: 100, // adjust this value as needed\r\n    },\r\n    title: {\r\n        fontSize: 34,\r\n        fontWeight: 'bold',\r\n        marginBottom: 20,\r\n    },\r\n    infoContainer: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-between',\r\n        width: '20%',\r\n        backgroundColor: '#fff',\r\n        borderRadius: 10,\r\n        padding: 10,\r\n        marginBottom: 20,\r\n    },\r\n    info: {\r\n        fontSize: 18,\r\n        textAlign: 'left',\r\n    },\r\n    modalContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    },\r\n    modalContent: {\r\n        backgroundColor: 'white',\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: 'center',\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5,\r\n    },\r\n    input: {\r\n        height: 40,\r\n        borderColor: 'gray',\r\n        borderWidth: 1,\r\n        marginBottom: 20,\r\n        width: '100%',\r\n        paddingHorizontal: 10,\r\n    },\r\n    buttonContainer: {\r\n        width: '7%',\r\n        marginBottom: 20,\r\n    },\r\n    button: {\r\n        backgroundColor: '#062A52',\r\n        padding: 10,\r\n        borderRadius: 5,\r\n        alignItems: 'center',\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n    },\r\n    footer: {\r\n        height: 18,\r\n    },\r\n    profilePicContainer: {\r\n        width: 120,\r\n        height: 120,\r\n        borderRadius: '50%',\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        border: '3px solid #fff',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginBottom: 20,\r\n    },\r\n    fileInput: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        opacity: 0,\r\n    },\r\n    chooseImageText: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n        color: '#fff',\r\n        pointerEvents: 'none',\r\n    },\r\n    profilePic: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n    componentsContainer: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n    },\r\n    leaderboardContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    leaderboard: {\r\n        flex: 2,\r\n        left: 40,\r\n    },\r\n    buttonsContainer: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'flex-end', // Align children to the right\r\n        left: 180,\r\n        marginTop: 110,\r\n    },\r\n    addFriendsButton: {\r\n    },\r\n    themeButtonsContainer: {\r\n        position: 'absolute',\r\n        top: -20,\r\n        left: 150,\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-start',\r\n        padding: 10,\r\n    },\r\n    themeButton: {\r\n        backgroundColor: '#000',\r\n        padding: 10,\r\n        margin: 5,\r\n        borderRadius: 5,\r\n    },\r\n    themeButtonText: {\r\n        color: '#000',\r\n    },\r\n});","import React from 'react';\r\nimport { View, Text, StyleSheet, Image, FlatList } from 'react-native';\r\n\r\nconst Leaderboard = ({ users }) => {\r\n    // Sort users by score in descending order\r\n    const sortedUsers = users.sort((a, b) => b.score - a.score);\r\n\r\n    const topUsers = sortedUsers.slice(0, 3); // displays top 3 users\r\n\r\n    // Function to return the medal icon based on the rank\r\n    const getMedalIcon = (rank) => {\r\n        switch (rank) {\r\n            case 1: return require('../../../assets/goldmedal.png');\r\n            case 2: return require('../../../assets/silvermedal.png');\r\n            case 3: return require('../../../assets/bronzemedal.png');\r\n            default: return require('../../../assets/user.png');\r\n        }\r\n    };\r\n\r\n    // Function to render stars based on the score\r\n    const renderStars = (score) => {\r\n        // Logic to convert score to star rating out of 5\r\n        const starRating = Math.round(score / 1000); // Example conversion logic\r\n        let stars = [];\r\n        for (let i = 0; i < 5; i++) {\r\n            stars.push(\r\n                <Image\r\n                    key={i}\r\n                    source={i < starRating ? require('../../../assets/star.png') : require('../../../assets/emptystar.png')}\r\n                    style={styles.starIcon}\r\n                />\r\n            );\r\n        }\r\n        return stars;\r\n    };\r\n\r\n    const renderItem = ({ item, index }) => (\r\n        <View style={styles.userRow}>\r\n            <Text style={styles.rank}>{index + 1}</Text>\r\n            {index < 3 && (\r\n                <Image\r\n                    source={getMedalIcon(index + 1)}\r\n                    style={styles.medalIcon}\r\n                />\r\n            )}\r\n            <Image\r\n                source={require('../../../assets/ecoBackground.png')} // Replace with your user icon path\r\n                style={styles.userIcon}\r\n            />\r\n            <Text style={styles.name}>{item.name}</Text>\r\n            <View style={styles.starsContainer}>\r\n                {renderStars(item.score)}\r\n            </View>\r\n            <Text style={styles.score}>{item.score}</Text>\r\n        </View>\r\n    );\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text style={styles.title}>LEADERBOARD</Text>\r\n            {/* <FlatList\r\n                data={sortedUsers}\r\n                renderItem={renderItem}\r\n                keyExtractor={(item, index) => index.toString()}\r\n            /> */}\r\n            <FlatList\r\n                data={topUsers}\r\n                renderItem={renderItem}\r\n                keyExtractor={(item, index) => index.toString()}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: '#fff',\r\n        padding: 10,\r\n        marginTop: 50,\r\n        width: '150%',\r\n        borderRadius: 8,\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 3 },\r\n        shadowRadius: 5,\r\n        shadowOpacity: 0.2,\r\n        elevation: 6,\r\n        margin: 5,\r\n    },\r\n    title: {\r\n        fontSize: 22,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n        textAlign: 'center',\r\n    },\r\n    userRow: {\r\n        backgroundColor: '#ffffff', // A contrasting background color\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        paddingVertical: 12,\r\n        paddingHorizontal: 16,\r\n        borderRadius: 12, // More pronounced rounded corners\r\n        marginVertical: 4,\r\n        marginHorizontal: 12,\r\n        borderWidth: 1, // A subtle border\r\n        borderColor: '#dddddd',\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 6,\r\n        },\r\n        shadowRadius: 8,\r\n        shadowOpacity: 0.15,\r\n        elevation: 6, // Adjust elevation for Android\r\n        zIndex: 1, // Make sure the shadows are visible on iOS\r\n    },\r\n    rank: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        color: '#333',\r\n    },\r\n    name: {\r\n        fontSize: 18,\r\n        color: '#333',\r\n        flex: 1, // Take up the remaining space\r\n        paddingHorizontal: 10,\r\n    },\r\n    score: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        color: '#333',\r\n    },\r\n    medalIcon: {\r\n        width: 30,\r\n        height: 30,\r\n    },\r\n    userIcon: {\r\n        width: 30,\r\n        height: 30,\r\n    },\r\n    starsContainer: {\r\n        flexDirection: 'row',\r\n    },\r\n    starIcon: {\r\n        width: 20,\r\n        height: 20,\r\n    },\r\n});\r\n\r\nexport default Leaderboard;\r\n","import React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { Clipboard } from 'react-native';\r\n\r\nconst InviteButton = () => {\r\n    const inviteLink = \"http://localhost:19006/Title\";\r\n\r\n    const copyToClipboard = () => {\r\n        Clipboard.setString(inviteLink);\r\n    };\r\n\r\n    return (\r\n        <View style={{}}>\r\n            <TouchableOpacity style={styles.button} onPress={copyToClipboard}>\r\n                <Text style={styles.buttonText}>INVITE FRIENDS</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        backgroundColor: '#062A52',\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 10,\r\n        borderRadius: 4,\r\n        overflow: 'hidden',\r\n        width: 150,\r\n        borderColor: 'white', // Set the border color to white\r\n        borderWidth: 2,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontWeight: '600'\r\n    },\r\n});\r\n\r\nexport default InviteButton;","import React, { useState } from 'react';\r\nimport { View, Button, Modal, Text, TouchableOpacity, FlatList, StyleSheet } from 'react-native';\r\nimport InviteButton from \"./InviteButton\";\r\n\r\nconst friendsList = [\r\n    { id: '1', name: 'Alice' },\r\n    { id: '2', name: 'Bob' },\r\n    { id: '3', name: 'Dave' },\r\n];\r\n\r\nconst AddFriendsButton = () => {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [addedFriends, setAddedFriends] = useState([]);\r\n\r\n    const handleAddFriend = (friendId) => {\r\n        if (addedFriends.includes(friendId)) {\r\n            setAddedFriends(addedFriends.filter(id => id !== friendId));\r\n        } else {\r\n            setAddedFriends([...addedFriends, friendId]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <View style={{ margin: 10 }}>\r\n            {/* Invite Button */}\r\n            <InviteButton />\r\n\r\n            {/* Add Friends Button */}\r\n            <TouchableOpacity style={styles.button} onPress={() => setModalVisible(true)}>\r\n                <Text style={styles.buttonText}>ADD FRIENDS</Text>\r\n            </TouchableOpacity>\r\n            {/* Add Friends Modal */}\r\n            <Modal\r\n                animationType=\"slide\"\r\n                transparent={true}\r\n                visible={modalVisible}\r\n                onRequestClose={() => {\r\n                    setModalVisible(!modalVisible);\r\n                }}\r\n            >\r\n                <View style={styles.centeredView}>\r\n                    <View style={styles.modalView}>\r\n                        <Text style={styles.modalText}>Add Friends</Text>\r\n                        <FlatList\r\n                            data={friendsList}\r\n                            renderItem={({ item }) => (\r\n                                <TouchableOpacity style={styles.friendItem} onPress={() => handleAddFriend(item.id)}>\r\n                                    <Text style={styles.friendName}>{item.name}</Text>\r\n                                    <Text style={styles.addButton}>{addedFriends.includes(item.id) ? 'Added' : 'Add'}</Text>\r\n                                </TouchableOpacity>\r\n                            )}\r\n                            keyExtractor={(item) => item.id}\r\n                        />\r\n                        <TouchableOpacity style={styles.closeButton} onPress={() => setModalVisible(!modalVisible)}>\r\n                            <Text style={styles.closeButtonText}>Close</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            </Modal>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    centeredView: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        marginLeft: 20,\r\n    },\r\n    modalView: {\r\n        margin: 20,\r\n        backgroundColor: 'white',\r\n        borderRadius: 20,\r\n        padding: 35,\r\n        alignItems: 'center',\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 2,\r\n        },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 4,\r\n        elevation: 5,\r\n    },\r\n    modalText: {\r\n        marginBottom: 15,\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n    },\r\n    friendItem: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'center',\r\n        paddingVertical: 10,\r\n        paddingHorizontal: 20, // Add some padding to the sides\r\n    },\r\n    friendName: {\r\n        flex: 1,\r\n        marginRight: 10, // Add space between the name and the button\r\n    },\r\n    addButton: {\r\n        backgroundColor: '#062A52', // Set the button background color to blue\r\n        color: 'white', // Set the text color to white\r\n        paddingHorizontal: 15, // Horizontal padding for the button\r\n        paddingVertical: 8, // Vertical padding for the button\r\n        borderRadius: 4, // Rounded corners for the button\r\n        overflow: 'hidden', // Ensures the borderRadius is respected\r\n    },\r\n    addButtonText: {\r\n        color: 'white', // Set the button text color to white\r\n        textAlign: 'center', // Center the text inside the button\r\n    },\r\n    button: {\r\n        backgroundColor: '#062A52',\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 10,\r\n        marginVertical: 7,\r\n        borderRadius: 4,\r\n        overflow: 'hidden',\r\n        width: 150,\r\n        borderColor: 'white', // Set the border color to white\r\n        borderWidth: 2,\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontWeight: '600'\r\n    },\r\n    closeButton: {\r\n        backgroundColor: '#062A52',\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 10,\r\n        borderRadius: 4,\r\n        overflow: 'hidden',\r\n    },\r\n    closeButtonText: {\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        fontWeight: '600'\r\n    },\r\n});\r\n\r\nexport default AddFriendsButton;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { StyleSheet, ScrollView, Text, View, Image, ImageBackground, Animated, Easing, Button, TextInput, Alert, Dimensions, TouchableOpacity, Modal } from \"react-native\";\r\nimport styles from \"../Styles/UserAccountStyles\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport axios from 'axios';\r\nimport Navbar from \"../Navbar\";\r\nimport Footer from \"../Footer\";\r\nimport Snowfall from \"react-snowfall\";\r\nimport Leaderboard from './LeaderBoard';\r\nimport InviteButton from \"../InviteButton\";\r\nimport AddFriendsButton from \"../AddFriendsButton\";\r\nimport ThemeContext from \"../ThemeContext\";\r\n\r\nconst UserAccount = () => {\r\n    const [user, setUser] = useState({\r\n        name: 'John Doe', // Hardcoded for demonstration\r\n        email: 'john.doe@example.com',\r\n        birthday: '1/4/01',\r\n    });\r\n    const [data, setData] = useState([]);\r\n    const [data_to, setData_to] = useState([]);\r\n    const [email_data, setEmailData] = useState('');\r\n    const [dob_data, setDobData] = useState('');\r\n\r\n    const users = [\r\n        { name: 'Alice', score: 100 },\r\n        { name: 'Bob', score: 90 },\r\n        { name: 'Claire', score: 110 },\r\n        { name: 'Claire', score: 110 },\r\n        // ... more users\r\n    ];\r\n\r\n    useEffect(() => {\r\n        fetch('http://localhost:5000/profile')\r\n            .then(res => res.json())\r\n            .then(initialData => {\r\n                setData(initialData);\r\n                // Now fetch the second piece of data using the id from the initial data\r\n                return fetch(`http://localhost:5000/${initialData.id}/info/usersdata`);\r\n            })\r\n            .then(res => res.json())\r\n            .then(secondaryData => {\r\n                setData_to(secondaryData);\r\n                console.log(secondaryData);\r\n                // Fetch the third piece of data using the id from the initial data\r\n                return fetch(`http://localhost:5000/inuseemail`);\r\n            })\r\n            .then(res => res.json())\r\n            .then(thirdData => {\r\n                // Process your thirdData here\r\n                const backend_email = thirdData.emails[0];\r\n                //console.log(thirdData.emails[0])\r\n                setEmailData(backend_email);\r\n                //console.log(email)\r\n            })\r\n            .catch(error => {\r\n                console.error(\"There was an error fetching the data:\", error);\r\n            });\r\n    }, []);\r\n\r\n    const changeName = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/changename', {\r\n                old_first: data_to[0],\r\n                old_last: data_to[1],\r\n                new_first: newNameFirst,\r\n                new_last: newNameLast,\r\n            }, {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            });\r\n\r\n            // Assuming the server response contains the updated name\r\n            if (response.data && response.data.success) {\r\n                setData_to([response.data.first_name, response.data.last_name]);\r\n            }\r\n            setData_to([newNameFirst, newNameLast]);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    //console.log(data_to);\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [newName, setNewName] = useState('');\r\n    const [newNameFirst, setNewNameFirst] = useState('');\r\n    const [newNameLast, setNewNameLast] = useState('');\r\n\r\n    const handleEditName = () => {\r\n        setModalVisible(true);\r\n    };\r\n\r\n    const handleSaveName = () => {\r\n        const nameParts = newName.trim().split(' ');\r\n\r\n        // Check if both first and last name are present\r\n        if (nameParts.length < 2) {\r\n            alert(\"Please enter both first and last name\");\r\n            return;\r\n        }\r\n\r\n        const firstName = nameParts[0];\r\n        const lastName = nameParts.slice(1).join(' '); // In case there's a middle name\r\n\r\n        // Update state\r\n        setNewNameFirst(firstName);\r\n        setNewNameLast(lastName);\r\n\r\n        setModalVisible(false);\r\n        setNewName('');\r\n    };\r\n    const handleCloseModal = () => {\r\n        setModalVisible(false);\r\n        setNewName(''); // Reset the newName state when closing the modal\r\n    };\r\n    // useEffect will run when newNameFirst and newNameLast change\r\n    useEffect(() => {\r\n        // Ensure that both newNameFirst and newNameLast are not empty\r\n        if (newNameFirst && newNameLast) {\r\n            changeName();\r\n        }\r\n    }, [newNameFirst, newNameLast]); // Dependencies array\r\n\r\n    const [newEmail, setNewEmail] = useState('');\r\n    const [emailModalVisible, setEmailModalVisible] = useState(false);\r\n\r\n    const changeEmail = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/changeemail', {\r\n                old_first: data_to[0],\r\n                old_last: data_to[1],\r\n                new_email: newEmail,\r\n            }, {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            });\r\n\r\n            // Check the server response for success and update state accordingly\r\n            if (response.data && response.data.message) {\r\n                alert(\"Success\", response.data.message);\r\n                setUser(prevUser => ({ ...prevUser, email: newEmail }));\r\n                setNewEmail(''); // Clear the input field\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            alert(\"Error\", \"Failed to update email\");\r\n        }\r\n    };\r\n\r\n    const handleEditEmail = () => {\r\n        setEmailModalVisible(true);\r\n    };\r\n\r\n    const isValidEmail = email => {\r\n        // This is a simple regex for basic email validation\r\n        const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n        return emailRegex.test(email);\r\n    };\r\n\r\n    const handleSaveEmail = () => {\r\n        // Check if the email is not empty and is valid\r\n        if (!newEmail || !isValidEmail(newEmail)) {\r\n            handleCloseEmailModal();\r\n            //this doesnt \r\n            alert(\"Validation Error\", \"Please enter a valid email address\");\r\n            return;\r\n        }\r\n\r\n        // If the email is valid, proceed with the changeEmail process\r\n        changeEmail();\r\n        setEmailModalVisible(false); // Close the modal\r\n        setNewEmail(''); // Reset the new email state when closing the modal\r\n    };\r\n\r\n    const handleCloseEmailModal = () => {\r\n        setEmailModalVisible(false);\r\n        setNewEmail(''); // Reset the new email state when closing the modal\r\n    };\r\n\r\n    const [profilePic, setProfilePic] = useState(null);\r\n\r\n    const handleFileChange = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = (e) => {\r\n                setProfilePic(e.target.result);\r\n            };\r\n\r\n            reader.readAsDataURL(event.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const handleChangePassword = async () => {\r\n        // Implement navigation or modal popup for password change\r\n        try {\r\n            const response = await axios.post('http://localhost:5000/sendPasswordEmail', {\r\n                email: email_data\r\n            }, {\r\n                headers: { 'Content-Type': 'application/json' }\r\n            });\r\n\r\n            // Check the server response for success and update state accordingly\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n            alert(\"Error\", \"Failed to update email\");\r\n        }\r\n        navigation.navigate('PasswordResetTemp')\r\n    };\r\n\r\n    const RenderIcon = () => <Text style={styles.icon}>🖉</Text>;\r\n    const { theme, setTheme } = useContext(ThemeContext);\r\n    return (\r\n        <ScrollView contentContainerStyle={styles.container}>\r\n            <Navbar />\r\n            <ImageBackground\r\n                source={require(\"../../../assets/ecoBackground.png\")}\r\n                style={styles.background}>\r\n                <View style={styles.themeButtonsContainer}>\r\n                    <TouchableOpacity style={styles.themeButton} onPress={() => setTheme('spring')}>\r\n                        <Text style={styles.buttonText}>Spring</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.themeButton} onPress={() => setTheme('summer')}>\r\n                        <Text style={styles.buttonText}>Summer</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.themeButton} onPress={() => setTheme('autumn')}>\r\n                        <Text style={styles.buttonText}>Autumn</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.themeButton} onPress={() => setTheme('winter')}>\r\n                        <Text style={styles.buttonText}>Winter</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <div style={styles.profilePicContainer}>\r\n                    <img style={styles.profilePic} src={profilePic} alt=\"\" />\r\n                    <input style={styles.fileInput} type=\"file\" onChange={handleFileChange} />\r\n                    {!profilePic && <div style={styles.chooseImageText}>Choose Image</div>}\r\n                </div>\r\n                <Text style={styles.title}>User Account</Text>\r\n                <View style={styles.infoContainer}>\r\n                    <Text style={styles.info}>Name: {data_to[0]} {data_to[1]}</Text>\r\n                    <TouchableOpacity onPress={handleEditName}>\r\n                        <RenderIcon />\r\n                    </TouchableOpacity>\r\n\r\n                    <Modal\r\n                        animationType=\"slide\"\r\n                        transparent={true}\r\n                        visible={modalVisible}\r\n                        onRequestClose={handleCloseModal}>\r\n                        <View style={styles.modalContainer}>\r\n                            <View style={styles.modalContent}>\r\n                                <TextInput\r\n                                    placeholder=\"Enter your new name\"\r\n                                    value={newName}\r\n                                    onChangeText={setNewName}\r\n                                    style={styles.input}\r\n                                />\r\n                                <Button title=\"Save\" onPress={handleSaveName} />\r\n                            </View>\r\n                        </View>\r\n                    </Modal>\r\n                </View>\r\n\r\n                <View style={styles.infoContainer}>\r\n                    <Text style={styles.info}>Email: {email_data}</Text>\r\n                    <TouchableOpacity onPress={handleEditEmail}>\r\n                        <RenderIcon />\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                {/* Email Modal */}\r\n                <Modal\r\n                    animationType=\"slide\"\r\n                    transparent={true}\r\n                    visible={emailModalVisible}\r\n                    onRequestClose={handleCloseEmailModal}>\r\n                    <View style={styles.modalContainer}>\r\n                        <View style={styles.modalContent}>\r\n                            <TextInput\r\n                                placeholder=\"Enter your new email\"\r\n                                value={newEmail}\r\n                                onChangeText={setNewEmail}\r\n                                style={styles.input}\r\n                                keyboardType=\"email-address\"\r\n                            />\r\n                            <Button title=\"Save\" onPress={handleSaveEmail} />\r\n                        </View>\r\n                    </View>\r\n                </Modal>\r\n\r\n                <View style={styles.infoContainer}>\r\n                    <Text style={styles.info}>Birthday: {data_to[5]}</Text>\r\n                </View>\r\n\r\n                <View style={styles.componentsContainer}>\r\n                    <View style={styles.leaderboardContainer}>\r\n                        <View style={styles.leaderboard}>\r\n                            <Leaderboard users={users} />\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.buttonsContainer}>\r\n                        <View style={styles.addFriendsButton}>\r\n                            <AddFriendsButton />\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </ImageBackground>\r\n            <Footer style={styles.footer} navigation={navigation} />\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nexport default UserAccount;","import React from 'react';\r\nimport { View, Text, Linking, TouchableOpacity, ImageBackground } from 'react-native';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\n\r\nconst Contact = () => {\r\n    const handleEmailPress = () => {\r\n        Linking.openURL('mailto:EcoTracker2023@gmail.com');\r\n    };\r\n\r\n    return (\r\n\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground\r\n                source={require(\"../../../assets/ecoBackground.png\")}\r\n                style={{\r\n                    flex: 1,\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n                    <Text style={{ fontSize: 60, fontWeight: 'bold', marginBottom: 10 }}>\r\n                        Contact Us\r\n                    </Text>\r\n                    <Text style={{ marginBottom: 10, fontSize: 32, fontWeight: '700' }}>\r\n                        For any inquiries or feedback, please email us at:\r\n                    </Text>\r\n                    <TouchableOpacity onPress={handleEmailPress}>\r\n                        <Text style={{ color: 'white', fontSize: 28 }}>EcoTracker2023@gmail.com</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </ImageBackground>\r\n            <Footer navigation={navigation} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n","import { StyleSheet, useWindowDimensions } from \"react-native\";\r\n\r\nexport default function useResponsiveStyles() {\r\n    const windowWidth = useWindowDimensions().width;\r\n    const windowHeight = useWindowDimensions().height;\r\n\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            flex: 1,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            backgroundColor: \"transparent\",\r\n            flexWrap: 'wrap',\r\n        },\r\n        title: {\r\n            width: \"17%\",\r\n            aspectRatio: 1,\r\n            resizeMode: \"contain\",\r\n        },\r\n        input: {\r\n            width: windowWidth * 0.13,\r\n            height: windowHeight * 0.03,\r\n            fontSize: windowWidth * 0.01,\r\n            paddingLeft: windowWidth * 0.005,\r\n            margin: windowWidth * 0.01,\r\n            borderColor: '#062A52',\r\n            borderWidth: 2,\r\n            borderRadius: 15,\r\n            backgroundColor: 'white',\r\n        },\r\n        button: {\r\n            width: windowWidth * 0.06,\r\n            height: windowHeight * 0.04,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            backgroundColor: '#062A52',\r\n            borderRadius: 15,\r\n            marginTop: windowHeight * 0.005,\r\n            marginBottom: 5,\r\n            borderColor: 'white',\r\n            borderWidth: 1,\r\n        },\r\n        buttonText: {\r\n            color: \"white\",\r\n            fontSize: Math.min(windowWidth, windowHeight) * 0.015,\r\n            fontWeight: \"bold\",\r\n            textShadowOffset: { width: 1, height: 1 },\r\n            textShadowRadius: 1,\r\n            marginBottom: 3,\r\n        },\r\n    });\r\n\r\n    return styles;\r\n}\r\n","import { StyleSheet } from 'react-native';\r\n\r\nexport default StyleSheet.create({\r\n    factBox: {\r\n        position: 'absolute',\r\n        right: 10,\r\n        bottom: 10,\r\n        width: '20%',\r\n        height: '20%',\r\n        backgroundColor: '#F6AE01',\r\n        padding: 10,\r\n        borderRadius: 4,\r\n        borderColor: 'rgba(0, 0, 0, 0.1)',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    factText: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        textAlign: 'center',\r\n    },\r\n    closeButton: {\r\n        backgroundColor: '#FFF',\r\n        padding: 5,\r\n        marginTop: 20,\r\n        width: 50,\r\n        height: 25,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 4,\r\n    },\r\n});","import React, { useState, useEffect, useRef } from 'react';\r\nimport { View, Text, TouchableOpacity, Animated } from 'react-native';\r\nimport FactStyles from './Styles/FactStyles';\r\n\r\nconst facts = [\r\n    \"Around 27,000 trees are cut down each day just to produce toilet paper.\",\r\n    \"The oceans hold approximately 96.5% of the earth’s water, but only 1% of the earth’s water is safe for human consumption.\",\r\n    \"Plastic bags and other plastic garbage that end up in the ocean kill over 1,000,000 sea animals every year.\",\r\n    \"2023 was the hottest year on record, with an average global temperature of 1.28°C above the pre-industrial level\",\r\n    \"The Amazon rainforest produces more than 20% of the world’s oxygen and is home to more than 10% of the world’s known biodiversity.\",\r\n    \"More than 100 billion pounds of food is wasted each year in the United States, which is equivalent to about 1,200 calories per person per day.\",\r\n    \"The Great Pacific Garbage Patch is a collection of marine debris in the North Pacific Ocean that is estimated to be twice the size of Texas and contains up to 1.8 trillion pieces of plastic.\",\r\n    \"The average American uses about 100 gallons of water per day, while the average African family uses about 5 gallons of water per day\",\r\n    \"Air pollution causes more than 6 million deaths per year, making it the world’s largest single environmental health risk\",\r\n    // Add more facts as needed\r\n];\r\n\r\nconst Fact = ({ isModalVisible, setModalVisible }) => {\r\n    const [fact, setFact] = useState('');\r\n    const slideAnim = useRef(new Animated.Value(500)).current; // Initial value for bottom: 500\r\n\r\n    useEffect(() => {\r\n        if (isModalVisible) {\r\n            const randomFact = facts[Math.floor(Math.random() * facts.length)];\r\n            setFact(randomFact);\r\n            setTimeout(() => {\r\n                Animated.timing(slideAnim, {\r\n                    toValue: 0,\r\n                    duration: 500,\r\n                    useNativeDriver: true,\r\n                }).start();\r\n            }, 3000);\r\n        } else {\r\n            Animated.timing(slideAnim, {\r\n                toValue: 500,\r\n                duration: 500,\r\n                useNativeDriver: true,\r\n            }).start();\r\n        }\r\n    }, [isModalVisible]);\r\n\r\n    if (!isModalVisible) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Animated.View style={[{ position: 'absolute', transform: [{ translateY: slideAnim }] }, FactStyles.factBox]}>\r\n            <Text style={FactStyles.factText}>{fact}</Text>\r\n            <TouchableOpacity style={FactStyles.closeButton} onPress={() => setModalVisible(false)}>\r\n                <Text>Close</Text>\r\n            </TouchableOpacity>\r\n        </Animated.View>\r\n    );\r\n};\r\n\r\nexport default Fact;","import React, { useState, useContext } from 'react';\r\nimport { View, Text, TextInput, Button, Image, ImageBackground } from 'react-native'\r\nimport useResponsiveStyles from '../Styles/TrackStyles';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\nimport Fact from '../Fact';\r\nimport Snowfall from 'react-snowfall';\r\nimport axios from 'axios';\r\nimport GraphCard from '../GraphCard';\r\nimport ThemeContext from '../ThemeContext';\r\n\r\n\r\nconst Driving = () => {\r\n    const [formData, setFormData] = useState({\r\n        user_id: '652d78b1a3e79a6fa01d4140',\r\n        year: '',\r\n        make: '',\r\n        model: '',\r\n        avg_speed: '',\r\n        miles_driven: ''\r\n    });\r\n    const styles = useResponsiveStyles();\r\n    const [isModalVisible, setModalVisible] = useState(true);\r\n\r\n    const [carbonEmissions, setCarbonEmissions] = useState(null);\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = () => {\r\n        fetch('http://localhost:5000/driving', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(formData),\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if (data.message === \"driving updated successfully\") {\r\n                    setCarbonEmissions(data.carbon_emissions);\r\n                } else {\r\n                    setError(data.message);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setError('Network or server error');\r\n            });\r\n    };\r\n\r\n    const handleChange = (name, value) => {\r\n        setFormData(prevFormData => ({\r\n            ...prevFormData,\r\n            [name]: value\r\n        }));\r\n    };\r\n    const handleClear = () => {\r\n        setFormData({\r\n            ...formData, // this preserves any other fields in the state that you might add later\r\n            year: '',\r\n            make: '',\r\n            model: '',\r\n            avg_speed: '',\r\n            miles_driven: ''\r\n        });\r\n    };\r\n\r\n    const graphData = {\r\n        labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n        datasets: [{\r\n            data: [2093, 2152, 4921, 0, 1790, 398, 19282],\r\n            // ... other dataset properties\r\n        }]\r\n    };\r\n\r\n    const customChartConfig = {\r\n        // Optional custom chart configuration here\r\n    };\r\n    const onIncrement = (dayIndex) => {\r\n        let newWeeklyData = [...weeklyIntakeData];\r\n        newWeeklyData[dayIndex] += 1; // Increment the value for the day\r\n        setWeeklyIntakeData(newWeeklyData); // Update the state\r\n    };\r\n\r\n    // Function to decrement the intake for a specific day\r\n    const onDecrement = (dayIndex) => {\r\n        let newWeeklyData = [...weeklyIntakeData];\r\n        newWeeklyData[dayIndex] = Math.max(0, newWeeklyData[dayIndex] - 1); // Decrement the value for the day, but not below 0\r\n        setWeeklyIntakeData(newWeeklyData); // Update the state\r\n    };\r\n    const [weeklyIntakeData, setWeeklyIntakeData] = useState([2093, 2152, 4921, 0, 1790, 398, 19282]);\r\n\r\n    const { theme } = useContext(ThemeContext);\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackground.png\")} style={{ ...styles.container, overflow: 'hidden' }}>\r\n                {\r\n                    theme === 'autumn' && <Snowfall snowflakeCount={100} />\r\n                }\r\n                {\r\n                    theme === 'winter' && <Snowfall snowflakeCount={300} />\r\n                }\r\n                <Image source={require(\"../../../assets/ecoVehicle.png\")} style={{ ...styles.title, marginTop: -50 }} />\r\n\r\n                <View style={{ marginTop: -50, flex: 1, alignItems: 'center' }}>\r\n                    <Text style={styles.buttonText}>Year:</Text>\r\n                    <TextInput style={styles.input} value={formData.year}\r\n                        onChangeText={(text) => handleChange('year', text)} />\r\n\r\n                    <Text style={styles.buttonText}>Make:</Text>\r\n                    <TextInput style={styles.input} value={formData.make}\r\n                        onChangeText={(text) => handleChange('make', text)} />\r\n\r\n                    <Text style={styles.buttonText}>Model:</Text>\r\n                    <TextInput style={styles.input} value={formData.model}\r\n                        onChangeText={(text) => handleChange('model', text)} />\r\n\r\n                    <Text style={styles.buttonText}>Average Speed (mph):</Text>\r\n                    <TextInput style={styles.input} value={formData.avg_speed}\r\n                        onChangeText={(text) => handleChange('avg_speed', text)} />\r\n\r\n\r\n                    <Text style={styles.buttonText}>Miles driven:</Text>\r\n                    <TextInput style={styles.input} value={formData.miles_driven}\r\n                        onChangeText={(text) => handleChange('miles_driven', text)} />\r\n\r\n                    <Text style={styles.buttonText}>Carbon Used: {carbonEmissions} kg CO2</Text>\r\n\r\n\r\n\r\n                    <View style={styles.button}>\r\n                        <Button title=\"Submit\" onPress={handleSubmit} color=\"transparent\" />\r\n                    </View>\r\n                    <View style={styles.button}>\r\n                        <Button title=\"Clear\" onPress={handleClear} color=\"transparent\" />\r\n                    </View>\r\n                </View>\r\n                <Image\r\n                    source={theme === 'spring' ? require(\"../../../assets/springTree.png\") :\r\n                        theme === 'summer' ? require(\"../../../assets/summerTree.png\") :\r\n                            theme === 'autumn' ? require(\"../../../assets/autumnTree.png\") :\r\n                                require(\"../../../assets/winterTree.png\")}\r\n                    style={{ position: 'absolute', bottom: -40, width: '100%', height: 160 }} />\r\n                <Fact isModalVisible={isModalVisible} setModalVisible={setModalVisible} />\r\n            </ImageBackground>\r\n            <View style={{ ...styles.graphCardContainer, position: 'absolute', left: 0, top: '35%', padding: 10, }}>\r\n                <GraphCard\r\n                    title=\"Weekly Carbon Emissions\"\r\n                    data={graphData}\r\n                    chartConfig={customChartConfig}\r\n                    onIncrement={onIncrement}\r\n                    onDecrement={onDecrement}\r\n                />\r\n            </View>\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </View>\r\n\r\n\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Driving;\r\n","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, Text, TextInput, Button, Image, ImageBackground } from 'react-native';\r\nimport useResponsiveStyles from '../Styles/TrackStyles';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\nimport Fact from '../Fact';\r\nimport Snowfall from 'react-snowfall';\r\nimport axios from 'axios';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport GraphCard from '../GraphCard';\r\nimport ThemeContext from '../ThemeContext';\r\n\r\n\r\nconst Energy = ({ navigation }) => {\r\n    const [appliance, setAppliance] = useState('');\r\n    const [hoursDay, setHoursDay] = useState('');\r\n    const [energyUsed, setEnergyUsed] = useState(null);\r\n    const [submitRequested, setSubmitRequested] = useState(false);\r\n\r\n    const styles = useResponsiveStyles();\r\n    const [isModalVisible, setModalVisible] = useState(true);\r\n\r\n    const wattageMapping = {\r\n        oven: 2400,\r\n        stove: 1500,\r\n        microwave: 1200,\r\n        // Add more appliances and their respective wattage here\r\n    };\r\n\r\n    const getWattsForAppliance = (applianceKey) => {\r\n        return wattageMapping[applianceKey] || null;\r\n    };\r\n\r\n    const calculateEnergy = () => {\r\n        const applianceWatts = getWattsForAppliance(appliance);\r\n        if (hoursDay && !isNaN(hoursDay) && applianceWatts) {\r\n            const calculatedEnergy = parseFloat(applianceWatts) * parseFloat(hoursDay);\r\n            setEnergyUsed(calculatedEnergy);\r\n        } else {\r\n            alert('Please enter valid hours and select an appliance.');\r\n            setEnergyUsed(null);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (submitRequested && energyUsed !== null) {\r\n            handleSubmit();\r\n            setSubmitRequested(false);\r\n        }\r\n    }, [energyUsed, submitRequested]);\r\n\r\n    const handleSubmit = async () => {\r\n        if (!appliance) {\r\n            alert('Please select an appliance.');\r\n            return;\r\n        }\r\n        if (energyUsed === null) {\r\n            alert('Please calculate the energy before submitting.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/energy',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                data: {\r\n                    user_id: '652d78b1a3e79a6fa01d4140',\r\n                    appliance: appliance,\r\n                    watts: energyUsed,\r\n                    hoursDay: hoursDay,\r\n                }\r\n            });\r\n            console.log(response.data);\r\n            handleClear();\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handleClear = () => {\r\n        setAppliance('');\r\n        setHoursDay('');\r\n        setEnergyUsed(null);\r\n    };\r\n\r\n    const handleButtonPress = () => {\r\n        setSubmitRequested(true);\r\n        calculateEnergy();\r\n    };\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [items, setItems] = useState([\r\n        { label: 'Oven', value: 'oven' },\r\n        { label: 'Stove', value: 'stove' },\r\n        { label: 'Microwave', value: 'microwave' },\r\n    ]);\r\n\r\n    const graphData = {\r\n        labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n\r\n        datasets: [{\r\n            data: [900, 543, 798, 400, 988, 300, 357],\r\n            // ... other dataset properties\r\n        }]\r\n    };\r\n\r\n    const customChartConfig = {\r\n        // Optional custom chart configuration here\r\n    };\r\n\r\n    const { theme } = useContext(ThemeContext);\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackground.png\")} style={{ ...styles.container, overflow: 'hidden' }}>\r\n                {\r\n                    theme === 'autumn' && <Snowfall snowflakeCount={100} />\r\n                }\r\n                {\r\n                    theme === 'winter' && <Snowfall snowflakeCount={300} />\r\n                }\r\n                <Image source={require(\"../../../assets/ecoEnergy.png\")} style={{ ...styles.title, marginTop: -200 }} />\r\n                <Text style={styles.buttonText}>Appliance:</Text>\r\n                <View style={styles.buttonText}>\r\n                    <DropDownPicker\r\n                        open={open}\r\n                        value={appliance}\r\n                        items={items}\r\n                        setOpen={setOpen}\r\n                        setValue={setAppliance}\r\n                        setItems={setItems}\r\n                        onChangeValue={(value) => setAppliance(value)}\r\n                    />\r\n                </View>\r\n\r\n                <Text style={styles.buttonText}>Hours per day:</Text>\r\n                <TextInput\r\n                    style={styles.input}\r\n                    value={hoursDay}\r\n                    onChangeText={text => setHoursDay(text)}\r\n                    keyboardType=\"numeric\"\r\n                />\r\n\r\n                <Text style={styles.buttonText}>\r\n                    Watts: {energyUsed !== null ? `${energyUsed} watt-hours` : ''}\r\n                </Text>\r\n\r\n                <View style={styles.button}>\r\n                    <Button title=\"Submit\" onPress={handleButtonPress} color=\"transparent\" />\r\n                </View>\r\n                <View style={styles.button}>\r\n                    <Button title=\"Clear\" onPress={handleClear} color=\"transparent\" />\r\n                </View>\r\n                <Image\r\n                    source={theme === 'spring' ? require(\"../../../assets/springTree.png\") :\r\n                        theme === 'summer' ? require(\"../../../assets/summerTree.png\") :\r\n                            theme === 'autumn' ? require(\"../../../assets/autumnTree.png\") :\r\n                                require(\"../../../assets/winterTree.png\")}\r\n                    style={{ position: 'absolute', bottom: -40, width: '100%', height: 160 }} />\r\n                <Fact isModalVisible={isModalVisible} setModalVisible={setModalVisible} />\r\n            </ImageBackground>\r\n            <View style={{ ...styles.graphCardContainer, position: 'absolute', left: 0, top: '35%', padding: 10, }}>\r\n                <GraphCard\r\n                    title=\"Weekly Watts Used\"\r\n                    data={graphData}\r\n                    chartConfig={customChartConfig}\r\n                />\r\n            </View>\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Energy;\r\n","import React, { useState, useContext } from 'react';\r\nimport { View, Text, TextInput, Button, Image, ImageBackground } from 'react-native'\r\nimport useResponsiveStyles from '../Styles/TrackStyles';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\nimport Fact from '../Fact';\r\nimport Snowfall from 'react-snowfall';\r\nimport axios from 'axios';\r\nimport GraphCard from '../GraphCard';\r\nimport ThemeContext from '../ThemeContext';\r\n\r\n\r\nconst Diet = ({ navigation, route }) => {\r\n    const [dietLevel, setDietLevel] = useState('');\r\n    const [food, setFood] = useState('');\r\n\r\n    const styles = useResponsiveStyles();\r\n    const [isModalVisible, setModalVisible] = useState(true);\r\n\r\n\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            // Make POST request using axios with data\r\n            const response = await axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/diet',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                data: {\r\n                    user_id: '652d78b1a3e79a6fa01d4140',\r\n                    dietLevel: dietLevel,\r\n                    food: food\r\n                }\r\n            });\r\n\r\n            //console.log(response.data);  // Print out the response data\r\n            handleClear();\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handleClear = () => {\r\n        setDietLevel('');\r\n        setFood('');\r\n    };\r\n\r\n    const graphData = {\r\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\r\n        datasets: [{\r\n            data: [20, 45, 28, 80, 99, 43],\r\n            // ... other dataset properties\r\n        }]\r\n    };\r\n\r\n    const customChartConfig = {\r\n        // Optional custom chart configuration here\r\n    };\r\n\r\n    const { theme } = useContext(ThemeContext);\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackground.png\")} style={{ ...styles.container, overflow: 'hidden' }}>\r\n                {\r\n                    theme === 'autumn' && <Snowfall snowflakeCount={100} />\r\n                }\r\n                {\r\n                    theme === 'winter' && <Snowfall snowflakeCount={300} />\r\n                }\r\n                <Image source={require(\"../../../assets/ecoDiet.png\")} style={{ ...styles.title, marginTop: -200 }} />\r\n\r\n                <Text style={styles.buttonText}>Diet Level:</Text>\r\n                <TextInput style={styles.input} value={dietLevel} onChangeText={text => setDietLevel(text)} />\r\n\r\n                <Text style={styles.buttonText}>Food:</Text>\r\n                <TextInput style={styles.input} value={food} onChangeText={text => setFood(text)} />\r\n\r\n                <View style={styles.button}>\r\n                    <Button title=\"Submit\" onPress={async () => { handleSubmit() }} color=\"transparent\" />\r\n                </View>\r\n                <View style={styles.button}>\r\n                    <Button title=\"Clear\" onPress={handleClear} color=\"transparent\" />\r\n                </View>\r\n                <Image\r\n                    source={theme === 'spring' ? require(\"../../../assets/springTree.png\") :\r\n                        theme === 'summer' ? require(\"../../../assets/summerTree.png\") :\r\n                            theme === 'autumn' ? require(\"../../../assets/autumnTree.png\") :\r\n                                require(\"../../../assets/winterTree.png\")}\r\n                    style={{ position: 'absolute', bottom: -40, width: '100%', height: 160 }} />\r\n                <Fact isModalVisible={isModalVisible} setModalVisible={setModalVisible} />\r\n            </ImageBackground>\r\n            <View style={{ ...styles.graphCardContainer, position: 'absolute', left: 0, top: '35%', padding: 10, }}>\r\n                <GraphCard\r\n                    title=\"Monthly Carbon Emissions\"\r\n                    data={graphData}\r\n                    chartConfig={customChartConfig}\r\n                />\r\n            </View>\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Diet;\r\n","import React, { useState, useContext } from 'react';\r\nimport { View, Text, TextInput, Button, Image, ImageBackground } from 'react-native'\r\nimport useResponsiveStyles from '../Styles/TrackStyles';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\nimport Fact from '../Fact';\r\nimport Snowfall from 'react-snowfall';\r\nimport axios from 'axios';\r\nimport GraphCard from '../GraphCard';\r\nimport ThemeContext from '../ThemeContext';\r\n\r\n\r\nconst Exercise = ({ navigation }) => {\r\n    const [activity, setActivity] = useState('');\r\n    const [freqPerWeek, setFreqPerWeek] = useState('');\r\n    const [durationPerDayMin, setDurationPerDayMin] = useState('');\r\n\r\n    const styles = useResponsiveStyles();\r\n    const [isModalVisible, setModalVisible] = useState(true);\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            // Make POST request using axios with data\r\n            const response = await axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/exercise',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                data: {\r\n                    user_id: '652d78b1a3e79a6fa01d4140',\r\n                    activity: activity,\r\n                    freqPerWeek: freqPerWeek,\r\n                    durationPerDayMin: durationPerDayMin\r\n                }\r\n            });\r\n\r\n            //console.log(response.data);  // Print out the response data\r\n            handleClear();\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    const handleClear = () => {\r\n        setActivity('');\r\n        setFreqPerWeek('');\r\n        setDurationPerDayMin('');\r\n    };\r\n\r\n\r\n    const graphData = {\r\n        labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n\r\n        datasets: [{\r\n            data: [0, 45, 128, 300, 39, 43],\r\n            // ... other dataset properties\r\n        }]\r\n    };\r\n\r\n    const customChartConfig = {\r\n        // Optional custom chart configuration here\r\n    };\r\n\r\n    const { theme } = useContext(ThemeContext);\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackground.png\")} style={{ ...styles.container, overflow: 'hidden' }}>\r\n                {\r\n                    theme === 'autumn' && <Snowfall snowflakeCount={100} />\r\n                }\r\n                {\r\n                    theme === 'winter' && <Snowfall snowflakeCount={300} />\r\n                }\r\n                <Image source={require(\"../../../assets/ecoExercise.png\")} style={{ ...styles.title, marginTop: -200 }} />\r\n\r\n                <Text style={styles.buttonText}>Activity:</Text>\r\n                <TextInput style={styles.input} value={activity} onChangeText={text => setActivity(text)} />\r\n\r\n                <Text style={styles.buttonText}>Frequency Per Week:</Text>\r\n                <TextInput style={styles.input} value={freqPerWeek} onChangeText={text => setFreqPerWeek(text)} />\r\n\r\n                <Text style={styles.buttonText}>Duration Per Day (min):</Text>\r\n                <TextInput style={styles.input} value={durationPerDayMin} onChangeText={text => setDurationPerDayMin(text)} />\r\n\r\n                <View style={styles.button}>\r\n                    <Button title=\"Submit\" onPress={async () => { handleSubmit() }} color=\"transparent\" />\r\n                </View>\r\n                <View style={styles.button}>\r\n                    <Button title=\"Clear\" onPress={handleClear} color=\"transparent\" />\r\n                </View>\r\n                <Image\r\n                    source={theme === 'spring' ? require(\"../../../assets/springTree.png\") :\r\n                        theme === 'summer' ? require(\"../../../assets/summerTree.png\") :\r\n                            theme === 'autumn' ? require(\"../../../assets/autumnTree.png\") :\r\n                                require(\"../../../assets/winterTree.png\")}\r\n                    style={{ position: 'absolute', bottom: -40, width: '100%', height: 160 }} />\r\n                <Fact isModalVisible={isModalVisible} setModalVisible={setModalVisible} />\r\n            </ImageBackground>\r\n            <View style={{ ...styles.graphCardContainer, position: 'absolute', left: 0, top: '35%', padding: 10, }}>\r\n                <GraphCard\r\n                    title=\"Weekly Minutes Exercised\"\r\n                    data={graphData}\r\n                    chartConfig={customChartConfig}\r\n                />\r\n            </View>\r\n\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Exercise;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, Text, TouchableOpacity, Image, ImageBackground } from 'react-native';\r\nimport useResponsiveStyles from '../Styles/TrackStyles';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\n// import Snowfall from 'react-snowfall';\r\nimport Fact from '../Fact';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport GraphCard from '../GraphCard';\r\nimport ThemeContext from '../ThemeContext';\r\n\r\nconst Water = ({ navigation }) => {\r\n    const [waterIntake, setWaterIntake] = useState(0);\r\n    const recommendedIntake = \"15\";\r\n    const styles = useResponsiveStyles();\r\n    const [isModalVisible, setModalVisible] = useState(true);\r\n\r\n    const setWaterIntakeWithStorage = async (value) => {\r\n        try {\r\n            await AsyncStorage.setItem('@waterIntake', value.toString());\r\n            const today = new Date();\r\n            const dateOnly = new Date(today.getFullYear(), today.getMonth(), today.getDate()).toString();\r\n            await AsyncStorage.setItem('@date', dateOnly);\r\n            setWaterIntake(value);\r\n        } catch (e) {\r\n            // saving error\r\n        }\r\n    };\r\n\r\n    const loadWaterIntake = async () => {\r\n        try {\r\n            const storedDate = new Date(await AsyncStorage.getItem('@date'));\r\n            const today = new Date();\r\n            const currentDateOnly = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n\r\n            if (storedDate.getFullYear() !== currentDateOnly.getFullYear() ||\r\n                storedDate.getMonth() !== currentDateOnly.getMonth() ||\r\n                storedDate.getDate() !== currentDateOnly.getDate()) {\r\n                // If the stored date is different from the current date, reset the water intake\r\n                setWaterIntake(0);\r\n            }\r\n        } catch (e) {\r\n            // handle error\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadWaterIntake();\r\n    }, []);\r\n\r\n\r\n\r\n    const onIncrement = (dayIndex) => {\r\n        let newWeeklyData = [...weeklyIntakeData];\r\n        newWeeklyData[dayIndex] += 1; // Increment the value for the day\r\n        setWeeklyIntakeData(newWeeklyData); // Update the state\r\n    };\r\n\r\n    // Function to decrement the intake for a specific day\r\n    const onDecrement = (dayIndex) => {\r\n        let newWeeklyData = [...weeklyIntakeData];\r\n        newWeeklyData[dayIndex] = Math.max(0, newWeeklyData[dayIndex] - 1); // Decrement the value for the day, but not below 0\r\n        setWeeklyIntakeData(newWeeklyData); // Update the state\r\n    };\r\n    const [weeklyIntakeData, setWeeklyIntakeData] = useState([2, 15, 20, 8, 9, 3, 13]);\r\n\r\n    // Function to update a specific day's intake\r\n    const updateDailyIntake = (dayIndex) => {\r\n        const updatedIntakeData = [...weeklyIntakeData]; // assuming this is your state array for the graph\r\n        updatedIntakeData[dayIndex] = updatedIntakeData[dayIndex] + 1; // Increment the value\r\n        setWeeklyIntakeData(updatedIntakeData); // Update the state\r\n    };\r\n    const onUpdateDailyIntake = (dayIndex) => {\r\n        // Assuming you have a state named weeklyIntakeData to track this\r\n        let newWeeklyData = [...weeklyIntakeData];\r\n        newWeeklyData[dayIndex] += 1; // Increment the intake\r\n        setWeeklyIntakeData(newWeeklyData); // Update the state\r\n    };\r\n\r\n\r\n    const graphData = {\r\n        labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n\r\n        datasets: [{\r\n            data: weeklyIntakeData\r\n            // ... other dataset properties\r\n        }]\r\n    };\r\n\r\n    const customChartConfig = {\r\n        // Optional custom chart configuration here\r\n    };\r\n\r\n    const { theme } = useContext(ThemeContext);\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackground.png\")} style={{ ...styles.container, overflow: 'hidden' }}>\r\n                <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', marginTop: -100 }}>\r\n                    <Text style={{ fontSize: 26, color: \"white\" }}>Recommended Water Intake: {recommendedIntake} Cups Per Day (~1 Gallon)</Text>\r\n                    <View style={{ flexDirection: 'row', alignItems: 'center', marginTop: 20 }}>\r\n                        <TouchableOpacity onPress={() => setWaterIntakeWithStorage(Math.max(0, waterIntake - 1))}>\r\n                            <Text style={{ fontSize: 160, color: \"white\" }}>-</Text>\r\n                        </TouchableOpacity>\r\n                        <Image\r\n                            source={\r\n                                waterIntake >= 15 ? require(\"../../../assets/waterBottleEmpty.png\") :\r\n                                    waterIntake >= 12 ? require(\"../../../assets/waterBottle3.png\") :\r\n                                        waterIntake >= 8 ? require(\"../../../assets/waterBottle2.png\") :\r\n                                            waterIntake >= 4 ? require(\"../../../assets/waterBottle1.png\") :\r\n                                                require(\"../../../assets/waterBottleFull.png\")\r\n                            }\r\n                            style={{ flex: 1, width: 400, height: 400 }}\r\n                            resizeMode=\"contain\"\r\n                        />\r\n                        <TouchableOpacity onPress={() => setWaterIntakeWithStorage(waterIntake + 1)}>\r\n                            <Text style={{ fontSize: 120, color: \"white\" }}>+</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    <Text style={{ fontSize: 32, marginTop: 20, color: \"white\" }}>Your Water Intake: {waterIntake} Cups</Text>\r\n                </View>\r\n                <Image\r\n                    source={theme === 'spring' ? require(\"../../../assets/springTree.png\") :\r\n                        theme === 'summer' ? require(\"../../../assets/summerTree.png\") :\r\n                            theme === 'autumn' ? require(\"../../../assets/autumnTree.png\") :\r\n                                require(\"../../../assets/winterTree.png\")}\r\n                    style={{ position: 'absolute', bottom: -40, width: '100%', height: 160 }} />\r\n                <Fact isModalVisible={isModalVisible} setModalVisible={setModalVisible} />\r\n\r\n\r\n\r\n                <View style={{ ...styles.graphCardContainer, position: 'absolute', left: 0, top: '35%', padding: 10, }}>\r\n                    <GraphCard\r\n                        title=\"Weekly Water Consumption\"\r\n                        data={graphData}\r\n                        chartConfig={customChartConfig}\r\n                        onIncrement={onIncrement}\r\n                        onDecrement={onDecrement}\r\n                    />\r\n                </View>\r\n            </ImageBackground>\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Water;","import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, Text, Image, ImageBackground, FlatList, TouchableOpacity } from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\nimport Snowfall from 'react-snowfall';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { isToday } from 'date-fns';\r\nimport ThemeContext from '../ThemeContext';\r\n\r\n\r\nconst Challenges = ({ navigation }) => {\r\n    const challenges = [\r\n        {\r\n            id: '1',\r\n            title: 'Drink Water',\r\n            description: 'Drink at least 8 glasses of water every day to stay hydrated.',\r\n        },\r\n        {\r\n            id: '2',\r\n            title: 'Turn off Lights',\r\n            description: 'Make sure to turn off lights when you leave a room to save energy.',\r\n        },\r\n        {\r\n            id: '3',\r\n            title: 'Stand',\r\n            description: 'Stand up every hour to stay active.',\r\n        },\r\n        {\r\n            id: '4',\r\n            title: 'Exercise',\r\n            description: 'Exercise for 30 minutes every day to stay healthy.',\r\n        },\r\n        {\r\n            id: '5',\r\n            title: 'Stretch',\r\n            description: 'Stretch for 10 minutes every day to stay flexible.',\r\n        },\r\n        {\r\n            id: '6',\r\n            title: 'Sleep',\r\n            description: 'Get 8 hours of sleep every night to stay healthy.',\r\n        },\r\n    ];\r\n    const [completedChallenges, setCompletedChallenges] = useState({});\r\n\r\n    const setCompletedChallengesWithStorage = async (value) => {\r\n        try {\r\n            await AsyncStorage.setItem('@completedChallenges', JSON.stringify(value));\r\n            const today = new Date();\r\n            const dateOnly = new Date(today.getFullYear(), today.getMonth(), today.getDate()).toString();\r\n            await AsyncStorage.setItem('@date', dateOnly);\r\n            setCompletedChallenges(value);\r\n        } catch (e) {\r\n            // saving error\r\n        }\r\n    };\r\n\r\n    const loadCompletedChallenges = async () => {\r\n        try {\r\n            const storedDate = new Date(await AsyncStorage.getItem('@date'));\r\n            const today = new Date();\r\n            const currentDateOnly = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n\r\n            if (storedDate.toString() !== currentDateOnly.toString()) {\r\n                // If the stored date is different from the current date, reset the completed challenges\r\n                setCompletedChallenges({});\r\n            } else {\r\n                const value = await AsyncStorage.getItem('@completedChallenges');\r\n                if (value !== null) {\r\n                    setCompletedChallenges(JSON.parse(value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            // loading error\r\n        }\r\n    };\r\n\r\n    const { theme } = useContext(ThemeContext);\r\n\r\n    useEffect(() => {\r\n        loadCompletedChallenges();\r\n    }, []);\r\n\r\n    const renderItem = ({ item }) => {\r\n        // Determine if the current challenge is completed\r\n        const isCompleted = !!completedChallenges[item.id];\r\n\r\n        return (\r\n            <View style={styles.item}>\r\n                <View>\r\n                    <Text style={styles.title}>{item.title}</Text>\r\n                    <Text style={{ fontSize: 16 }}>{item.description}</Text>\r\n                </View>\r\n                <TouchableOpacity\r\n                    style={{ marginLeft: 30 }}\r\n                    onPress={async () => {\r\n                        const newCompletedChallenges = {\r\n                            ...completedChallenges,\r\n                            [item.id]: !isCompleted // Toggle the completion status of the challenge\r\n                        };\r\n                        await setCompletedChallengesWithStorage(newCompletedChallenges);\r\n                    }}>\r\n                    <MaterialIcons name=\"check-circle\" size={32} color={isCompleted ? 'green' : 'grey'} />\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    };\r\n\r\n    const styles = {\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n        item: {\r\n            padding: 20,\r\n            marginVertical: 8,\r\n            marginHorizontal: 16,\r\n            marginTop: 20,\r\n            backgroundColor: 'white',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            borderRadius: 10,\r\n            borderWidth: 2,\r\n            borderColor: '#062a52',\r\n            width: 600,\r\n            height: 80,\r\n        },\r\n        title: {\r\n            fontSize: 32,\r\n        },\r\n        title2: {\r\n            fontSize: 50,\r\n            fontWeight: 'bold',\r\n            color: 'white',\r\n            textAlign: 'center',\r\n        },\r\n    };\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackground.png\")} style={styles.container}>\r\n                <Text style={styles.title2}>Challenges</Text>\r\n                <FlatList\r\n                    data={challenges}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id}\r\n                    style={{ zIndex: 1 }}\r\n                    numColumns={2}\r\n                />\r\n                {\r\n                    theme === 'autumn' && <Snowfall snowflakeCount={100} />\r\n                }\r\n                {\r\n                    theme === 'winter' && <Snowfall snowflakeCount={300} />\r\n                }\r\n                <Image\r\n                    source={theme === 'spring' ? require(\"../../../assets/springMT.png\") :\r\n                        theme === 'summer' ? require(\"../../../assets/summerMT.png\") :\r\n                            theme === 'autumn' ? require(\"../../../assets/autumnMT.png\") :\r\n                                require(\"../../../assets/winterMT.png\")}\r\n                    style={{ position: 'absolute', bottom: 0, width: '100%', height: 500 }} />\r\n            </ImageBackground>\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </View>\r\n    );\r\n\r\n};\r\n\r\nexport default Challenges;","import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, Image, ImageBackground, Animated, Easing, Button, TextInput, Alert, Dimensions, TouchableOpacity } from \"react-native\";\r\nimport styles from \"../Styles/LogInStyles\";\r\nimport Footer from '../Footer';\r\nimport axios from 'axios';\r\n\r\nfunction PasswordReset() {\r\n    const [scaleValue] = useState(new Animated.Value(1));\r\n\r\n    useEffect(() => {\r\n        const pulseAnimation = Animated.sequence([\r\n            Animated.timing(scaleValue, {\r\n                toValue: 1.07,\r\n                duration: 1500,\r\n                easing: Easing.ease,\r\n                useNativeDriver: true,\r\n            }),\r\n            Animated.timing(scaleValue, {\r\n                toValue: 1,\r\n                duration: 1500,\r\n                easing: Easing.ease,\r\n                useNativeDriver: true,\r\n            }),\r\n        ]);\r\n\r\n        Animated.loop(pulseAnimation).start();\r\n    }, [scaleValue]);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordConfirm, setPasswordConfirm] = useState('');\r\n    //console.log(username, password)\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            const response = await axios({\r\n                method: 'POST',\r\n                url: 'http://localhost:5000/changepassword',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                data: {\r\n                    email: email,\r\n                    password: password,\r\n                }\r\n            });\r\n\r\n            if (response.data.success) {\r\n                // If password change is successful, navigate to the Title screen\r\n                navigation.navigate('UserAccount');\r\n            } else {\r\n                // If the change is not successful, show an alert with the provided error message or a default message\r\n                alert(\"Change Password Failed\", response.data.error || \"An unknown error occurred.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(error);\r\n            // If there is an error in making the request, show an alert with the error message\r\n            alert(\"Change Password Error\", error.response?.data?.error || \"An error occurred during the password change, please try again.\");\r\n        }\r\n    };\r\n\r\n\r\n    //handleLogin();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // Prevents the default form submit action\r\n\r\n        // Check if passwords match\r\n        if (password === passwordConfirm) {\r\n            // Proceed with the login or registration process\r\n           // navigation.navigate('UserAccount');\r\n            handleLogin();\r\n            navigation.navigate('UserAccount');\r\n\r\n            console.log('Passwords match. Proceed with the next steps.');\r\n        } else {\r\n            // If passwords don't match, alert the user\r\n            alert('Passwords do not match. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ImageBackground\r\n            source={require(\"../../../assets/ecoBackground.png\")}\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '100vh', // full viewport height\r\n            }}\r\n        >\r\n            <Image source={require(\"../../../assets/ecoSun.png\")}\r\n                style={{\r\n                    width: 300,\r\n                    height: 300,\r\n                    position: 'absolute',\r\n                    bottom: 0\r\n                }} />\r\n            <Animated.Image\r\n                source={require(\"../../../assets/ecoTrackLogosu.png\")}\r\n                style={[styles.logo, { transform: [{ scale: scaleValue }] }]}\r\n            />\r\n            <View style={{ ...styles.container, marginBottom: 100 }}>\r\n                <TextInput\r\n                    style={{ ...styles.input, fontSize: 18 }}\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChangeText={text => setEmail(text)}\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={{ ...styles.input, fontSize: 18 }}\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChangeText={text => setPassword(text)}\r\n                    secureTextEntry={true}\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TextInput\r\n                    style={{ ...styles.input, fontSize: 18 }}\r\n                    placeholder=\"Confirm Password\"\r\n                    value={passwordConfirm}\r\n                    onChangeText={text => setPasswordConfirm(text)}\r\n                    secureTextEntry={true}\r\n                    autoCapitalize=\"none\"\r\n                />\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={handleSubmit}\r\n                >\r\n                    <Text style={styles.buttonText}>Change Password</Text>\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n\r\n\r\n            \r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </ImageBackground >\r\n\r\n    );\r\n}\r\nexport default PasswordReset;\r\n\r\n\r\n\r\n","import React, { useState, useContext } from 'react';\r\nimport { View, Text, TouchableOpacity, Image, ImageBackground, StyleSheet, Button } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Driving from '../pages/Driving';\r\nimport Energy from '../pages/Energy';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\nimport useResponsiveStyles from '../Styles/TrackStyles';\r\nimport Diet from './Diet';\r\nimport Exercise from './Exercise';\r\nimport Water from './Water';\r\nimport Snowfall from 'react-snowfall';\r\nimport Fact from '../Fact';\r\nimport ThemeContext from '../ThemeContext';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction TrackOptions({ navigation }) {\r\n    const styles = useResponsiveStyles();\r\n    const [isModalVisible, setModalVisible] = useState(true);\r\n    const { theme } = useContext(ThemeContext);\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackground.png\")} style={[styles.container, { overflow: 'hidden' }]}>\r\n                {\r\n                    theme === 'autumn' && <Snowfall snowflakeCount={100} />\r\n                }\r\n                {\r\n                    theme === 'winter' && <Snowfall snowflakeCount={300} />\r\n                }\r\n                <View style={{ marginTop: -300, alignItems: 'center' }}>\r\n                    <Text style={[styles.buttonText, { fontSize: 24, marginBottom: 50 }]}>Choose An Option To Track</Text>\r\n                    <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Driving')}>\r\n                        <Text style={styles.buttonText}>Driving</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Energy')}>\r\n                        <Text style={styles.buttonText}>Energy</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Diet')}>\r\n                        <Text style={styles.buttonText}>Diet</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Exercise')}>\r\n                        <Text style={styles.buttonText}>Exercise</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Water')}>\r\n                        <Text style={styles.buttonText}>Water</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <Image\r\n                    source={theme === 'spring' ? require(\"../../../assets/springTree.png\") :\r\n                        theme === 'summer' ? require(\"../../../assets/summerTree.png\") :\r\n                            theme === 'autumn' ? require(\"../../../assets/autumnTree.png\") :\r\n                                require(\"../../../assets/winterTree.png\")}\r\n                    style={{ position: 'absolute', bottom: -40, width: '100%', height: 160 }} />\r\n                <Fact isModalVisible={isModalVisible} setModalVisible={setModalVisible} />\r\n            </ImageBackground>\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </View>\r\n    );\r\n}\r\n\r\n\r\nfunction TrackNav() {\r\n\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Stack.Navigator initialRouteName=\"Track\">\r\n                <Stack.Screen\r\n                    name=\"Track\"\r\n                    component={TrackOptions}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Driving\"\r\n                    component={Driving}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Energy\"\r\n                    component={Energy}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Diet\"\r\n                    component={Diet}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Exercise\"\r\n                    component={Exercise}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Water\"\r\n                    component={Water}\r\n                    options={{ headerShown: false }}\r\n                />\r\n            </Stack.Navigator>\r\n\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default TrackNav;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Text, View, Image, ImageBackground, Animated, Easing, Button, TextInput, Alert, Dimensions, TouchableOpacity } from \"react-native\";\r\nimport styles from \"../Styles/VerificationStyles\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport Footer from '../Footer';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\n\r\nfunction PasswordResetTemp() {\r\n    const [scaleValue] = useState(new Animated.Value(1));\r\n\r\n    useEffect(() => {\r\n        const pulseAnimation = Animated.sequence([\r\n            Animated.timing(scaleValue, {\r\n                toValue: 1.07,\r\n                duration: 1500,\r\n                easing: Easing.ease,\r\n                useNativeDriver: true,\r\n            }),\r\n            Animated.timing(scaleValue, {\r\n                toValue: 1,\r\n                duration: 1500,\r\n                easing: Easing.ease,\r\n                useNativeDriver: true,\r\n            }),\r\n        ]);\r\n\r\n        Animated.loop(pulseAnimation).start();\r\n    }, [scaleValue]);\r\n\r\n\r\n\r\n    const handleLogin = () => {\r\n        navigation.navigate('Title');\r\n    };\r\n    //handleLogin();\r\n\r\n\r\n\r\n    return (\r\n        <ImageBackground\r\n            source={require(\"../../../assets/ecoBackground.png\")}\r\n            style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '100vh', // full viewport height\r\n            }}\r\n        >\r\n            <Image source={require(\"../../../assets/ecoSun.png\")}\r\n                style={{\r\n                    width: 300,\r\n                    height: 300,\r\n                    position: 'absolute',\r\n                    bottom: 0\r\n                }} />\r\n            <Animated.Image\r\n                source={require(\"../../../assets/ecoTrackLogosu.png\")}\r\n                style={[styles.logo, { transform: [{ scale: scaleValue }] }]}\r\n            />\r\n\r\n\r\n            <View style={{ ...styles.container, marginBottom: 100 }}>\r\n                <Text style={{ ...styles.buttonText, color: 'white', fontSize: 24, marginBottom: 10 }}>Password Reset!</Text>\r\n                <Text style={{ ...styles.buttonText, color: 'white', fontSize: 20 }}>We've just sent the PASSWORD RESET to your Email</Text>\r\n\r\n\r\n                <TouchableOpacity\r\n                    style={styles.button}\r\n                    onPress={async () => {\r\n                        await handleLogin();\r\n\r\n                    }}\r\n                >\r\n                    <Text style={styles.buttonText}>Go Home</Text>\r\n                </TouchableOpacity>\r\n\r\n            </View>\r\n\r\n\r\n\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </ImageBackground >\r\n\r\n    );\r\n}\r\nexport default PasswordResetTemp;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, Dimensions, TouchableOpacity, TextInput, Keyboard } from 'react-native';\r\nimport { LineChart } from 'react-native-chart-kit';\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst Test = ({ title }) => {\r\n    const [data, setData] = useState({\r\n        labels: Array.from({ length: 30 }, (_, i) => (i + 1).toString()), // Labels for each day of the month\r\n        datasets: [{\r\n            data: Array.from({ length: 30 }, () => Math.random() * 100), // Initial random data\r\n        }],\r\n    });\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [selectedDay, setSelectedDay] = useState(null);\r\n\r\n    // Generate a random number based on user input\r\n    const generateRandomData = (userInput) => {\r\n        const maxChange = 5;\r\n        const randomChange = Math.floor(Math.random() * (maxChange * 2 + 1)) - maxChange;\r\n        return Math.max(0, userInput + randomChange);\r\n    };\r\n\r\n    // Update the data for a specific day with the user's input\r\n    const handleSubmit = () => {\r\n        const userValue = Number(inputValue);\r\n        if (!isNaN(userValue) && selectedDay !== null) {\r\n            const newData = [...data.datasets[0].data];\r\n            newData[selectedDay] = generateRandomData(userValue);\r\n            setData({\r\n                ...data,\r\n                datasets: [{ ...data.datasets[0], data: newData }],\r\n            });\r\n            setSelectedDay(null);\r\n            setInputValue('');\r\n            Keyboard.dismiss();\r\n        }\r\n    };\r\n\r\n    // Chart configuration\r\n    const chartConfig = {\r\n        backgroundColor: '#FFFFFF',\r\n        backgroundGradientFrom: '#FFFFFF',\r\n        backgroundGradientTo: '#FFFFFF',\r\n        decimalPlaces: 2,\r\n        color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n        labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n        // ...other properties\r\n    };\r\n\r\n    return (\r\n        <View style={styles.graphContainer}>\r\n            <Text style={styles.title}>{title}</Text>\r\n            <LineChart\r\n                data={data}\r\n                width={screenWidth}\r\n                height={220}\r\n                chartConfig={chartConfig}\r\n                bezier\r\n            />\r\n\r\n            {/* Input field for user interaction */}\r\n            {selectedDay !== null && (\r\n                <View style={styles.inputContainer}>\r\n                    <Text style={styles.inputLabel}>Enter your miles drove for day {selectedDay + 1}:</Text>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        value={inputValue}\r\n                        onChangeText={setInputValue}\r\n                        keyboardType='numeric'\r\n                        onSubmitEditing={handleSubmit}\r\n                        returnKeyType='done'\r\n                        placeholder=\"Input value\"\r\n                    />\r\n                </View>\r\n            )}\r\n\r\n            {/* Day labels */}\r\n            <View style={styles.labelsContainer}>\r\n                {data.labels.map((label, index) => (\r\n                    <TouchableOpacity\r\n                        key={label}\r\n                        style={styles.label}\r\n                        onPress={() => setSelectedDay(index)}\r\n                    >\r\n                        <Text style={styles.labelText}>{label}</Text>\r\n                    </TouchableOpacity>\r\n                ))}\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    graphContainer: {\r\n        alignItems: 'center',\r\n        backgroundColor: '#FFF',\r\n        padding: 16,\r\n        borderRadius: 8,\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 3 },\r\n        shadowRadius: 5,\r\n        shadowOpacity: 0.2,\r\n        elevation: 6,\r\n        margin: 10,\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n    },\r\n    inputContainer: {\r\n        alignItems: 'center',\r\n        marginTop: 12,\r\n    },\r\n    inputLabel: {\r\n        fontSize: 16,\r\n        color: '#333',\r\n        marginBottom: 4,\r\n    },\r\n    input: {\r\n        borderWidth: 1,\r\n        borderColor: '#CCCCCC',\r\n        borderRadius: 5,\r\n        padding: 8,\r\n        width: '80%',\r\n        fontSize: 16,\r\n        color: '#333',\r\n        textAlign: 'center',\r\n        backgroundColor: '#F7F7F7',\r\n    },\r\n    labelsContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        width: '100%',\r\n        marginTop: 8,\r\n    },\r\n    label: {\r\n        padding: 4,\r\n        backgroundColor: '#EFEFEF',\r\n        borderRadius: 5,\r\n    },\r\n    labelText: {\r\n        color: 'black',\r\n        fontSize: 12,\r\n    },\r\n    // ... other styles you may want to add\r\n});\r\n\r\nexport default Test;\r\n","/*import React from \"react\";\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { StatusBar, View } from \"react-native\";\r\nimport TitleScreen from \"./src/Components/pages/TitleScreen\";\r\nimport TitleScreen from \"./src/Components/pages/LogIn\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <NavigationContainer>{ \r\n            <View style={{ flex: 1 }}>\r\n                <TitleScreen />\r\n                <StatusBar style=\"auto\" />\r\n            </View>\r\n        }</NavigationContainer>\r\n    );\r\n};\r\n\r\nexport default App; */\r\n\r\nimport * as React from 'react';\r\nimport { Button, View, Text } from 'react-native';\r\nimport { useState, useEffect } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport * as Linking from 'expo-linking';\r\nimport TitleScreen from \"./src/Components/pages/TitleScreen\";\r\nimport LogIn from \"./src/Components/pages/LogIn\";\r\nimport SignUp from \"./src/Components/pages/SignUp\";\r\nimport PP from \"./src/Components/pages/PP\";\r\nimport ToS from \"./src/Components/pages/ToS\";\r\nimport News from './src/Components/pages/News';\r\nimport Verification from \"./src/Components/pages/Verification\";\r\nimport UserAccount from \"./src/Components/pages/UserAccount\";\r\nimport Contact from './src/Components/pages/Contact';\r\nimport Driving from './src/Components/pages/Driving';\r\nimport Energy from './src/Components/pages/Energy';\r\nimport Diet from './src/Components/pages/Diet';\r\nimport Exercise from './src/Components/pages/Exercise';\r\nimport Water from './src/Components/pages/Water';\r\nimport Challenges from './src/Components/pages/Challenges';\r\nimport PasswordReset from './src/Components/pages/PasswordReset';\r\nimport TrackNav from './src/Components/pages/TrackNav';\r\nimport PasswordResetTemp from './src/Components/pages/PasswordResetTemp';\r\nimport Test from './src/Components/pages/Testing';\r\nimport Snowfall from 'react-snowfall';\r\nimport ThemeContext from './src/Components/ThemeContext';\r\n\r\n\r\nfunction HomeScreen({ navigation }) {\r\n    return (\r\n        <>\r\n            <Snowfall snowflakeCount={250} />\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n                <Text>Home Screen</Text>\r\n                <Button\r\n                    title=\"Go to Details\"\r\n                    onPress={() => navigation.navigate('Details')}\r\n                />\r\n            </View>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction DetailsScreen({ navigation }) {\r\n    return (\r\n        <>\r\n            <Snowfall snowflakeCount={250} />\r\n            <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n                <Text>Details Screen</Text>\r\n                <Button\r\n                    title=\"Go to Details... again\"\r\n                    onPress={() => navigation.navigate('Details')}\r\n                />\r\n                <Button title=\"Go to Home\" onPress={() => navigation.navigate('Home')} />\r\n                <Button title=\"Go back\" onPress={() => navigation.goBack()} />\r\n                <Button\r\n                    title=\"Go back to first screen in stack\"\r\n                    onPress={() => navigation.popToTop()}\r\n                />\r\n                <Button title=\"Go to Title\" onPress={() => navigation.navigate('Title')} />\r\n                {/*<Button\r\n            title=\"Go to Details... again\"\r\n            onPress={() => navigation.push('Details')}\r\n            /> */}\r\n            </View>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst TrackNavStack = createNativeStackNavigator();\r\n\r\nconst prefix = Linking.createURL('/');\r\nconst linking = {\r\n    prefixes: [prefix],\r\n};\r\n\r\nfunction TrackNavStackScreen() {\r\n    return (\r\n        <>\r\n            <TrackNavStack.Navigator initialRouteName=\"TrackNav\">\r\n                <TrackNavStack.Screen name=\"TrackNav\" component={TrackNav} options={{ headerShown: false }} />\r\n                <TrackNavStack.Screen name=\"Driving\" component={Driving} options={{ headerShown: false }} />\r\n                <TrackNavStack.Screen name=\"Energy\" component={Energy} options={{ headerShown: false }} />\r\n                <TrackNavStack.Screen name=\"Diet\" component={Diet} options={{ headerShown: false }} />\r\n                <TrackNavStack.Screen name=\"Exercise\" component={Exercise} options={{ headerShown: false }} />\r\n                <TrackNavStack.Screen name=\"Water\" component={Water} options={{ headerShown: false }} />\r\n            </TrackNavStack.Navigator>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    const [key, setKey] = useState(Math.random());\r\n\r\n    const [theme, setTheme] = useState('winter');\r\n\r\n    useEffect(() => {\r\n        const handlePopState = () => {\r\n            setKey(Math.random());  // Force a re-render by changing the state\r\n        };\r\n\r\n        window.addEventListener('popstate', handlePopState);\r\n\r\n        return () => {\r\n            window.removeEventListener('popstate', handlePopState);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ theme, setTheme }}>\r\n            <View key={key} style={{ flex: 1 }}>\r\n                <Snowfall snowflakeCount={250} />\r\n\r\n                <NavigationContainer linking={linking} fallback={<Text>Loading...</Text>}>\r\n                    <Stack.Navigator initialRouteName=\"Home\">\r\n                        <Stack.Screen name=\"Home\" component={HomeScreen} options={{ title: 'Overview' }} />\r\n                        <Stack.Screen name=\"Details\" component={DetailsScreen} />\r\n                        <Stack.Screen name=\"Title\" component={TitleScreen} options={{ headerShown: false }} />\r\n                        <Stack.Screen name=\"LogIn\" component={LogIn} options={{ headerShown: false }} />\r\n                        <Stack.Screen name=\"SignUp\" component={SignUp} options={{ headerShown: false }} />\r\n                        <Stack.Screen name=\"PP\" component={PP} options={{ headerShown: false }} />\r\n                        <Stack.Screen name=\"ToS\" component={ToS} options={{ headerShown: false }} />\r\n                        <Stack.Screen name=\"Verification\" component={Verification} options={{ headerShown: false }} />\r\n                        <Stack.Screen name=\"UserAccount\" component={UserAccount} options={{ headerShown: false }} />\r\n                        <Stack.Screen name=\"Contact\" component={Contact} options={{ headerShown: false }} />\r\n                        <Stack.Screen name=\"PasswordReset\" component={PasswordReset} options={{ headerShown: false }} />\r\n                        <Stack.Screen name=\"PasswordResetTemp\" component={PasswordResetTemp} options={{ headerShown: false }} />\r\n                        <Stack.Screen name=\"News\" component={News} options={{ headerShown: false }} />\r\n                        <Stack.Screen name=\"Challenges\" component={Challenges} options={{ headerShown: false }} />\r\n                        <Stack.Screen name=\"Test\" component={Test} options={{ headerShown: false }} />\r\n\r\n                        <Stack.Screen name=\"TrackNav\" component={TrackNavStackScreen} options={{ headerShown: false }} />\r\n\r\n                    </Stack.Navigator>\r\n                </NavigationContainer>\r\n            </View>\r\n        </ThemeContext.Provider>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [915], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["screenHeight","Dimensions","get","height","StyleSheet","create","container","flex","alignItems","justifyContent","backgroundColor","scrollViewContent","flexGrow","paddingTop","titleScreen","width","logo","resizeMode","marginTop","title","fontSize","fontWeight","textAlign","color","subtitle","margin","buttonContainer","flexDirection","button","padding","borderRadius","buttonText","contentContainer","paddingHorizontal","treesImage","position","bottom","line","titleto","textShadowColor","textShadowOffset","textShadowRadius","productSectionww","marginBottom","productSection","flexWrap","infoCardContainer","idk","themeButtonsContainer","top","left","themeButton","themeButtonText","styles","cardContainer","elevation","shadowColor","shadowOffset","shadowRadius","shadowOpacity","flexBasis","flexShrink","bestsellerLabel","zIndex","productImage","undefined","aspectRatio","alignSelf","productName","productDesc","likeButton","_ref","imageSrc","onLikePress","url","_jsx","TouchableOpacity","onPress","Linking","canOpenURL","then","supported","openURL","console","log","style","children","_jsxs","View","Text","Image","source","cardTitle","cardValue","cardComparison","value","comparison","html2canvas","Platform","OS","require","screenWidth","graphContainer","downloadButton","right","downloadButtonText","intakeButtonsContainer","paddingLeft","paddingRight","intakeButton","intakeButtonText","controlButtonsContainer","controlsRow","controlsColumn","marginHorizontal","controlButton","marginVertical","controlButtonText","data","chartConfig","onIncrement","onDecrement","chartRef","useRef","defaultConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","arguments","length","labelColor","downloadChart","_ref2","_asyncToGenerator","current","dataURL","toDataURL","link","document","createElement","download","replace","href","body","appendChild","click","removeChild","apply","combinedChartConfig","_objectSpread","ref","LineChart","bezier","labels","map","_","index","footer","footerText","navigation","FooterStyles","navigate","marginLeft","marginRight","navbar","menuIcon","menuContainer","menuItem","borderRightWidth","borderRightColor","menuItemDrop","borderBottomWidth","borderBottomColor","paddingBottom","_useState","useState","_useState2","_slicedToArray","isMenuOpen","setMenuOpen","useNavigation","_useState3","_useState4","windowWidth","setWindowWidth","useEffect","handleResize","addEventListener","removeEventListener","_useState5","_useState6","guideModalIsOpen","setGuideModalIsOpen","openGuideModal","closeGuideModal","NavbarStyles","reset","routes","name","Icon","size","Modal","isOpen","onRequestClose","contentLabel","overlay","display","backdropFilter","content","overflow","borderColor","borderWidth","src","onClick","image","textContainer","header","description","card","cardHeader","cardContent","cardFooter","testimonials","id","comment","rating","TestimonialCard","testimonial","cardRating","cardComment","textBlock","subHeader","scrollViewContainer","ScrollView","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","paddingVertical","React","Animated","Value","scaleValue","pulseAnimation","sequence","timing","toValue","duration","easing","Easing","ease","useNativeDriver","loop","start","handleLikePress","_useContext","useContext","ThemeContext","theme","setTheme","_Fragment","Navbar","ImageBackground","Snowfall","snowflakeCount","transform","scale","ProductCard","InfoCard","GraphCard","datasets","CarbonFootprintInfo","Testimonials","CommunitySignUp","Footer","input","linkText","textDecorationLine","email","setEmail","password","setPassword","handleLogin","response","axios","method","headers","success","alert","error","TextInput","placeholder","onChangeText","text","autoCapitalize","secureTextEntry","errorText","setData","fetch","res","json","initialData","catch","first","setFirst","_useState7","_useState8","last","setLast","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","isValid","setIsValid","_useState15","_useState16","setIsValidEmail","_useState17","Math","floor","random","toString","_useState18","code","verify","handlePress","_ref3","emailIsValid","Promise","resolve","Array","isArray","emails","includes","trim","hasUpperCase","test","hasNumber","navbarContainer","titleContainer","scrollView","listContainer","newsItem","boxShadow","news","setNews","modalIsOpen","setIsOpen","modalUrl","setModalUrl","fetchNews","params","q","sortBy","apiKey","excludedDomains","filteredArticles","articles","filter","article","articleDomain","URL","hostname","closeModal","FlatList","renderItem","item","uri","urlToImage","keyExtractor","numColumns","placeholderContainer","placeholderText","border","userInput","setUserInput","backendCode","setBackendCode","fetchCodeFromBackend","background","infoContainer","info","modalContainer","modalContent","profilePicContainer","fileInput","opacity","chooseImageText","pointerEvents","profilePic","componentsContainer","leaderboardContainer","leaderboard","buttonsContainer","addFriendsButton","userRow","rank","score","medalIcon","userIcon","starsContainer","starIcon","topUsers","users","sort","a","b","slice","getMedalIcon","renderStars","starRating","round","stars","i","push","Clipboard","setString","friendsList","centeredView","modalView","modalText","friendItem","friendName","addButton","addButtonText","closeButton","closeButtonText","modalVisible","setModalVisible","addedFriends","setAddedFriends","InviteButton","animationType","transparent","visible","friendId","concat","_toConsumableArray","birthday","setUser","data_to","setData_to","email_data","setEmailData","secondaryData","thirdData","backend_email","changeName","post","old_first","old_last","new_first","newNameFirst","new_last","newNameLast","first_name","last_name","newName","setNewName","setNewNameFirst","setNewNameLast","_useState19","_useState20","newEmail","setNewEmail","_useState21","_useState22","emailModalVisible","setEmailModalVisible","changeEmail","new_email","message","prevUser","handleCloseEmailModal","_useState23","_useState24","setProfilePic","RenderIcon","icon","alt","type","onChange","event","target","files","reader","FileReader","onload","e","result","readAsDataURL","Button","nameParts","split","firstName","lastName","join","keyboardType","Leaderboard","AddFriendsButton","useResponsiveStyles","useWindowDimensions","windowHeight","min","factBox","factText","facts","isModalVisible","fact","setFact","slideAnim","randomFact","setTimeout","translateY","FactStyles","user_id","year","make","model","avg_speed","miles_driven","formData","setFormData","carbonEmissions","setCarbonEmissions","setError","handleChange","prevFormData","_defineProperty","weeklyIntakeData","setWeeklyIntakeData","JSON","stringify","carbon_emissions","Fact","graphCardContainer","dayIndex","newWeeklyData","max","appliance","setAppliance","hoursDay","setHoursDay","energyUsed","setEnergyUsed","submitRequested","setSubmitRequested","wattageMapping","oven","stove","microwave","calculateEnergy","applianceWatts","isNaN","calculatedEnergy","parseFloat","handleSubmit","watts","handleClear","open","setOpen","label","items","setItems","DropDownPicker","setValue","onChangeValue","route","dietLevel","setDietLevel","food","setFood","activity","setActivity","freqPerWeek","setFreqPerWeek","durationPerDayMin","setDurationPerDayMin","waterIntake","setWaterIntake","setWaterIntakeWithStorage","AsyncStorage","setItem","today","Date","dateOnly","getFullYear","getMonth","getDate","_x","loadWaterIntake","storedDate","getItem","currentDateOnly","graphData","completedChallenges","setCompletedChallenges","setCompletedChallengesWithStorage","loadCompletedChallenges","parse","title2","_ref4","isCompleted","newCompletedChallenges","MaterialIcons","passwordConfirm","setPasswordConfirm","_error$response","_error$response$data","preventDefault","Stack","createStackNavigator","TrackOptions","Navigator","initialRouteName","Screen","component","options","headerShown","Driving","Energy","Diet","Exercise","Water","inputContainer","inputLabel","labelsContainer","labelText","from","inputValue","setInputValue","selectedDay","setSelectedDay","onSubmitEditing","userValue","Number","newData","randomChange","generateRandomData","Keyboard","dismiss","returnKeyType","HomeScreen","DetailsScreen","goBack","popToTop","createNativeStackNavigator","TrackNavStack","linking","prefixes","createURL","TrackNavStackScreen","TrackNav","key","setKey","handlePopState","window","Provider","NavigationContainer","fallback","TitleScreen","LogIn","SignUp","PP","ToS","Verification","UserAccount","Contact","PasswordReset","PasswordResetTemp","News","Challenges","Test","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}