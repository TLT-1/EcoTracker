{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { LineChart } from 'react-native-chart-kit';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar screenWidth = Dimensions.get('window').width;\nvar Test = function Test(_ref) {\n  var title = _ref.title;\n  var _useState = useState({\n      labels: Array.from({\n        length: 30\n      }, function (_, i) {\n        return (i + 1).toString();\n      }),\n      datasets: [{\n        data: Array.from({\n          length: 30\n        }, function () {\n          return Math.random() * 100;\n        })\n      }]\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    inputValue = _useState4[0],\n    setInputValue = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedDay = _useState6[0],\n    setSelectedDay = _useState6[1];\n  var generateRandomData = function generateRandomData(userInput) {\n    var maxChange = 5;\n    var randomChange = Math.floor(Math.random() * (maxChange * 2 + 1)) - maxChange;\n    return Math.max(0, userInput + randomChange);\n  };\n  var handleSubmit = function handleSubmit() {\n    var userValue = Number(inputValue);\n    if (!isNaN(userValue) && selectedDay !== null) {\n      var newData = _toConsumableArray(data.datasets[0].data);\n      newData[selectedDay] = generateRandomData(userValue);\n      setData(_objectSpread(_objectSpread({}, data), {}, {\n        datasets: [_objectSpread(_objectSpread({}, data.datasets[0]), {}, {\n          data: newData\n        })]\n      }));\n      setSelectedDay(null);\n      setInputValue('');\n      Keyboard.dismiss();\n    }\n  };\n  var chartConfig = {\n    backgroundColor: '#FFFFFF',\n    backgroundGradientFrom: '#FFFFFF',\n    backgroundGradientTo: '#FFFFFF',\n    decimalPlaces: 2,\n    color: function color() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return `rgba(0, 0, 0, ${opacity})`;\n    },\n    labelColor: function labelColor() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return `rgba(0, 0, 0, ${opacity})`;\n    }\n  };\n  return _jsxs(View, {\n    style: styles.graphContainer,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: title\n    }), _jsx(LineChart, {\n      data: data,\n      width: screenWidth,\n      height: 220,\n      chartConfig: chartConfig,\n      bezier: true\n    }), selectedDay !== null && _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsxs(Text, {\n        style: styles.inputLabel,\n        children: [\"Enter your miles drove for day \", selectedDay + 1, \":\"]\n      }), _jsx(TextInput, {\n        style: styles.input,\n        value: inputValue,\n        onChangeText: setInputValue,\n        keyboardType: \"numeric\",\n        onSubmitEditing: handleSubmit,\n        returnKeyType: \"done\",\n        placeholder: \"Input value\"\n      })]\n    }), _jsx(View, {\n      style: styles.labelsContainer,\n      children: data.labels.map(function (label, index) {\n        return _jsx(TouchableOpacity, {\n          style: styles.label,\n          onPress: function onPress() {\n            return setSelectedDay(index);\n          },\n          children: _jsx(Text, {\n            style: styles.labelText,\n            children: label\n          })\n        }, label);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  graphContainer: {\n    alignItems: 'center',\n    backgroundColor: '#FFF',\n    padding: 16,\n    borderRadius: 8,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowRadius: 5,\n    shadowOpacity: 0.2,\n    elevation: 6,\n    margin: 10,\n    position: 'relative'\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  inputContainer: {\n    alignItems: 'center',\n    marginTop: 12\n  },\n  inputLabel: {\n    fontSize: 16,\n    color: '#333',\n    marginBottom: 4\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#CCCCCC',\n    borderRadius: 5,\n    padding: 8,\n    width: '80%',\n    fontSize: 16,\n    color: '#333',\n    textAlign: 'center',\n    backgroundColor: '#F7F7F7'\n  },\n  labelsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    width: '100%',\n    marginTop: 8\n  },\n  label: {\n    padding: 4,\n    backgroundColor: '#EFEFEF',\n    borderRadius: 5\n  },\n  labelText: {\n    color: 'black',\n    fontSize: 12\n  }\n});\nexport default Test;","map":{"version":3,"names":["React","useState","View","Text","StyleSheet","Dimensions","TouchableOpacity","TextInput","Keyboard","LineChart","jsx","_jsx","jsxs","_jsxs","screenWidth","get","width","Test","_ref","title","_useState","labels","Array","from","length","_","i","toString","datasets","data","Math","random","_useState2","_slicedToArray","setData","_useState3","_useState4","inputValue","setInputValue","_useState5","_useState6","selectedDay","setSelectedDay","generateRandomData","userInput","maxChange","randomChange","floor","max","handleSubmit","userValue","Number","isNaN","newData","_toConsumableArray","_objectSpread","dismiss","chartConfig","backgroundColor","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","color","opacity","arguments","undefined","labelColor","style","styles","graphContainer","children","height","bezier","inputContainer","inputLabel","input","value","onChangeText","keyboardType","onSubmitEditing","returnKeyType","placeholder","labelsContainer","map","label","index","onPress","labelText","create","alignItems","padding","borderRadius","shadowColor","shadowOffset","shadowRadius","shadowOpacity","elevation","margin","position","fontSize","fontWeight","marginBottom","marginTop","borderWidth","borderColor","textAlign","flexDirection","justifyContent"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/pages/Testing.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, Dimensions, TouchableOpacity, TextInput, Keyboard } from 'react-native';\r\nimport { LineChart } from 'react-native-chart-kit';\r\n\r\nconst screenWidth = Dimensions.get('window').width;\r\n\r\nconst Test = ({ title }) => {\r\n    const [data, setData] = useState({\r\n        labels: Array.from({ length: 30 }, (_, i) => (i + 1).toString()), // Labels for each day of the month\r\n        datasets: [{\r\n            data: Array.from({ length: 30 }, () => Math.random() * 100), // Initial random data\r\n        }],\r\n    });\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [selectedDay, setSelectedDay] = useState(null);\r\n\r\n    // Generate a random number based on user input\r\n    const generateRandomData = (userInput) => {\r\n        const maxChange = 5;\r\n        const randomChange = Math.floor(Math.random() * (maxChange * 2 + 1)) - maxChange;\r\n        return Math.max(0, userInput + randomChange);\r\n    };\r\n\r\n    // Update the data for a specific day with the user's input\r\n    const handleSubmit = () => {\r\n        const userValue = Number(inputValue);\r\n        if (!isNaN(userValue) && selectedDay !== null) {\r\n            const newData = [...data.datasets[0].data];\r\n            newData[selectedDay] = generateRandomData(userValue);\r\n            setData({\r\n                ...data,\r\n                datasets: [{ ...data.datasets[0], data: newData }],\r\n            });\r\n            setSelectedDay(null);\r\n            setInputValue('');\r\n            Keyboard.dismiss();\r\n        }\r\n    };\r\n\r\n    // Chart configuration\r\n    const chartConfig = {\r\n        backgroundColor: '#FFFFFF',\r\n        backgroundGradientFrom: '#FFFFFF',\r\n        backgroundGradientTo: '#FFFFFF',\r\n        decimalPlaces: 2,\r\n        color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n        labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n        // ...other properties\r\n    };\r\n\r\n    return (\r\n        <View style={styles.graphContainer}>\r\n            <Text style={styles.title}>{title}</Text>\r\n            <LineChart\r\n                data={data}\r\n                width={screenWidth}\r\n                height={220}\r\n                chartConfig={chartConfig}\r\n                bezier\r\n            />\r\n\r\n            {/* Input field for user interaction */}\r\n            {selectedDay !== null && (\r\n                <View style={styles.inputContainer}>\r\n                    <Text style={styles.inputLabel}>Enter your miles drove for day {selectedDay + 1}:</Text>\r\n                    <TextInput\r\n                        style={styles.input}\r\n                        value={inputValue}\r\n                        onChangeText={setInputValue}\r\n                        keyboardType='numeric'\r\n                        onSubmitEditing={handleSubmit}\r\n                        returnKeyType='done'\r\n                        placeholder=\"Input value\"\r\n                    />\r\n                </View>\r\n            )}\r\n\r\n            {/* Day labels */}\r\n            <View style={styles.labelsContainer}>\r\n                {data.labels.map((label, index) => (\r\n                    <TouchableOpacity\r\n                        key={label}\r\n                        style={styles.label}\r\n                        onPress={() => setSelectedDay(index)}\r\n                    >\r\n                        <Text style={styles.labelText}>{label}</Text>\r\n                    </TouchableOpacity>\r\n                ))}\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    graphContainer: {\r\n        alignItems: 'center',\r\n        backgroundColor: '#FFF',\r\n        padding: 16,\r\n        borderRadius: 8,\r\n        shadowColor: '#000',\r\n        shadowOffset: { width: 0, height: 3 },\r\n        shadowRadius: 5,\r\n        shadowOpacity: 0.2,\r\n        elevation: 6,\r\n        margin: 10,\r\n        position: 'relative',\r\n    },\r\n    title: {\r\n        fontSize: 18,\r\n        fontWeight: 'bold',\r\n        marginBottom: 10,\r\n    },\r\n    inputContainer: {\r\n        alignItems: 'center',\r\n        marginTop: 12,\r\n    },\r\n    inputLabel: {\r\n        fontSize: 16,\r\n        color: '#333',\r\n        marginBottom: 4,\r\n    },\r\n    input: {\r\n        borderWidth: 1,\r\n        borderColor: '#CCCCCC',\r\n        borderRadius: 5,\r\n        padding: 8,\r\n        width: '80%',\r\n        fontSize: 16,\r\n        color: '#333',\r\n        textAlign: 'center',\r\n        backgroundColor: '#F7F7F7',\r\n    },\r\n    labelsContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        width: '100%',\r\n        marginTop: 8,\r\n    },\r\n    label: {\r\n        padding: 4,\r\n        backgroundColor: '#EFEFEF',\r\n        borderRadius: 5,\r\n    },\r\n    labelText: {\r\n        color: 'black',\r\n        fontSize: 12,\r\n    },\r\n    // ... other styles you may want to add\r\n});\r\n\r\nexport default Test;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}