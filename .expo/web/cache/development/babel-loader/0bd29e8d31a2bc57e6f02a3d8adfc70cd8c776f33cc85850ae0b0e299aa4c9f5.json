{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation } from '@react-navigation/native';\nimport NavbarStyles from \"./Styles/NavbarStyles\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Navbar = function Navbar() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMenuOpen = _useState2[0],\n    setMenuOpen = _useState2[1];\n  var navigation = useNavigation();\n  var toggleMenu = function toggleMenu() {\n    setMenuOpen(!isMenuOpen);\n  };\n  var navigateToPage = function navigateToPage(page) {\n    navigation.navigate(page);\n  };\n  var _useState3 = useState(Dimensions.get('window').width),\n    _useState4 = _slicedToArray(_useState3, 2),\n    windowWidth = _useState4[0],\n    setWindowWidth = _useState4[1];\n  useEffect(function () {\n    var handleResize = function handleResize() {\n      setWindowWidth(Dimensions.get('window').width);\n    };\n    Dimensions.addEventListener('change', handleResize);\n    return function () {\n      Dimensions.removeEventListener('change', handleResize);\n    };\n  }, []);\n  return _jsxs(View, {\n    style: NavbarStyles.navbar,\n    children: [_jsx(TouchableOpacity, {\n      onPress: toggleMenu,\n      children: _jsx(Text, {\n        style: NavbarStyles.menuIcon,\n        children: \"\\u2630\"\n      })\n    }), windowWidth >= 800 && _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Title');\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"Home\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate('TrackNav');\n          navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'Track'\n            }]\n          });\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"Track\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('News');\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"News\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Challenges');\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"Challenges\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Guide');\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"Guide\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('UserAccount');\n        },\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingLeft: 20,\n          paddingRight: 40\n        },\n        children: _jsx(Icon, {\n          name: \"user\",\n          size: 30,\n          color: \"#fff\"\n        })\n      })]\n    }), isMenuOpen && _jsxs(View, {\n      style: [NavbarStyles.menuContainer, {\n        left: 0,\n        right: 'auto',\n        flexDirection: 'column'\n      }],\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Title');\n        },\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"Home\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate('TrackNav');\n          navigation.reset({\n            index: 0,\n            routes: [{\n              name: 'Track'\n            }]\n          });\n        },\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"Track\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('News');\n        },\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"News\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Challenges');\n        },\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"Challenges\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('Guide');\n        },\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"Guide\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('UserAccount');\n        },\n        style: {\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingLeft: 20,\n          paddingRight: -70\n        },\n        children: _jsx(Icon, {\n          name: \"user\",\n          size: 30,\n          color: \"#fff\"\n        })\n      })]\n    })]\n  });\n};\nexport default Navbar;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","Dimensions","useNavigation","NavbarStyles","Icon","jsx","_jsx","jsxs","_jsxs","Navbar","_useState","_useState2","_slicedToArray","isMenuOpen","setMenuOpen","navigation","toggleMenu","navigateToPage","page","navigate","_useState3","get","width","_useState4","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","style","navbar","children","onPress","menuIcon","flexDirection","menuItem","reset","index","routes","name","alignItems","justifyContent","paddingLeft","paddingRight","size","color","menuContainer","left","right"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity, Dimensions } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport NavbarStyles from './Styles/NavbarStyles';\r\nimport Icon from 'react-native-vector-icons/FontAwesome';\r\n\r\nconst Navbar = () => {\r\n    const [isMenuOpen, setMenuOpen] = useState(false);\r\n    const navigation = useNavigation();\r\n\r\n    const toggleMenu = () => {\r\n        setMenuOpen(!isMenuOpen);\r\n    };\r\n\r\n    const navigateToPage = (page) => {\r\n        navigation.navigate(page);\r\n    };\r\n\r\n    const [windowWidth, setWindowWidth] = useState(Dimensions.get('window').width);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setWindowWidth(Dimensions.get('window').width);\r\n        };\r\n\r\n        Dimensions.addEventListener('change', handleResize);\r\n\r\n        return () => {\r\n            Dimensions.removeEventListener('change', handleResize);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <View style={NavbarStyles.navbar}>\r\n            <TouchableOpacity onPress={toggleMenu}>\r\n                <Text style={NavbarStyles.menuIcon}>â˜°</Text>\r\n            </TouchableOpacity>\r\n            {windowWidth >= 800 && (\r\n                <View style={{ flexDirection: 'row' }}>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('Title')}>\r\n                        <Text style={NavbarStyles.menuItem}>Home</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => {\r\n                        navigation.navigate('TrackNav');\r\n                        navigation.reset({\r\n                            index: 0,\r\n                            routes: [{ name: 'Track' }],\r\n                        });\r\n                    }}>\r\n                        <Text style={NavbarStyles.menuItem}>Track</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('News')}>\r\n                        <Text style={NavbarStyles.menuItem}>News</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('Challenges')}>\r\n                        <Text style={NavbarStyles.menuItem}>Challenges</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('Guide')}>\r\n                        <Text style={NavbarStyles.menuItem}>Guide</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('UserAccount')}\r\n                        style={{ alignItems: 'center', justifyContent: 'center', paddingLeft: 20, paddingRight: 40 }}>\r\n                        <Icon name=\"user\" size={30} color=\"#fff\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )}\r\n            {isMenuOpen && (\r\n                <View\r\n                    style={[\r\n                        NavbarStyles.menuContainer,\r\n                        { left: 0, right: 'auto', flexDirection: 'column' },\r\n                    ]}\r\n                >\r\n                    <TouchableOpacity onPress={() => navigation.navigate('Title')} style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Text style={NavbarStyles.menuItem}>Home</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => {\r\n                        navigation.navigate('TrackNav');\r\n                        navigation.reset({\r\n                            index: 0,\r\n                            routes: [{ name: 'Track' }],\r\n                        });\r\n                    }} style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Text style={NavbarStyles.menuItem}>Track</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('News')} style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Text style={NavbarStyles.menuItem}>News</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('Challenges')} style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Text style={NavbarStyles.menuItem}>Challenges</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('Guide')} style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <Text style={NavbarStyles.menuItem}>Guide</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigation.navigate('UserAccount')}\r\n                        style={{ alignItems: 'center', justifyContent: 'center', paddingLeft: 20, paddingRight: -70 }}>\r\n                        <Icon name=\"user\" size={30} color=\"#fff\" />\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Navbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}