{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}import React,{useState,useEffect,useContext}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import Image from\"react-native-web/dist/exports/Image\";import ImageBackground from\"react-native-web/dist/exports/ImageBackground\";import FlatList from\"react-native-web/dist/exports/FlatList\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{MaterialIcons}from'@expo/vector-icons';import Navbar from\"../Navbar\";import Footer from\"../Footer\";import Snowfall from'react-snowfall';import AsyncStorage from'@react-native-async-storage/async-storage';import{isToday}from'date-fns';import ThemeContext from\"../ThemeContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Challenges=function Challenges(_ref){var navigation=_ref.navigation;var challenges=[{id:'1',title:'Drink Water',description:'Drink at least 8 glasses of water every day to stay hydrated.'},{id:'2',title:'Turn off Lights',description:'Make sure to turn off lights when you leave a room to save energy.'},{id:'3',title:'Stand',description:'Stand up every hour to stay active.'},{id:'4',title:'Exercise',description:'Exercise for 30 minutes every day to stay healthy.'},{id:'5',title:'Stretch',description:'Stretch for 10 minutes every day to stay flexible.'},{id:'6',title:'Sleep',description:'Get 8 hours of sleep every night to stay healthy.'}];var _useState=useState({}),_useState2=_slicedToArray(_useState,2),completedChallenges=_useState2[0],setCompletedChallenges=_useState2[1];var setCompletedChallengesWithStorage=function(){var _ref2=_asyncToGenerator(function*(value){try{yield AsyncStorage.setItem('@completedChallenges',JSON.stringify(value));var today=new Date();var dateOnly=new Date(today.getFullYear(),today.getMonth(),today.getDate()).toString();yield AsyncStorage.setItem('@date',dateOnly);setCompletedChallenges(value);}catch(e){}});return function setCompletedChallengesWithStorage(_x){return _ref2.apply(this,arguments);};}();var loadCompletedChallenges=function(){var _ref3=_asyncToGenerator(function*(){try{var storedDate=new Date(yield AsyncStorage.getItem('@date'));var today=new Date();var currentDateOnly=new Date(today.getFullYear(),today.getMonth(),today.getDate());if(storedDate.toString()!==currentDateOnly.toString()){setCompletedChallenges({});}else{var value=yield AsyncStorage.getItem('@completedChallenges');if(value!==null){setCompletedChallenges(JSON.parse(value));}}}catch(e){}});return function loadCompletedChallenges(){return _ref3.apply(this,arguments);};}();var _useContext=useContext(ThemeContext),theme=_useContext.theme;useEffect(function(){loadCompletedChallenges();},[]);var renderItem=function renderItem(_ref4){var item=_ref4.item;var isCompleted=!!completedChallenges[item.id];return _jsxs(View,{style:styles.item,children:[_jsxs(View,{children:[_jsx(Text,{style:styles.title,children:item.title}),_jsx(Text,{style:{fontSize:16},children:item.description})]}),_jsx(TouchableOpacity,{style:{marginLeft:30},onPress:_asyncToGenerator(function*(){var newCompletedChallenges=_objectSpread(_objectSpread({},completedChallenges),{},_defineProperty({},item.id,!isCompleted));yield setCompletedChallengesWithStorage(newCompletedChallenges);}),children:_jsx(MaterialIcons,{name:\"check-circle\",size:32,color:isCompleted?'green':'grey'})})]});};var styles={container:{flex:1,justifyContent:'center',alignItems:'center'},item:{padding:20,marginVertical:8,marginHorizontal:16,marginTop:20,backgroundColor:'white',flexDirection:'row',justifyContent:'space-between',alignItems:'center',borderRadius:10,borderWidth:2,borderColor:'#062a52',width:600,height:80},title:{fontSize:32},title2:{fontSize:50,fontWeight:'bold',color:'white',textAlign:'center'}};return _jsxs(View,{style:{flex:1},children:[_jsx(Navbar,{}),_jsxs(ImageBackground,{source:require(\"../../../assets/ecoBackground.png\"),style:styles.container,children:[_jsx(Text,{style:styles.title2,children:\"Challenges\"}),_jsx(FlatList,{data:challenges,renderItem:renderItem,keyExtractor:function keyExtractor(item){return item.id;},style:{zIndex:1},numColumns:2}),theme==='autumn'&&_jsx(Snowfall,{snowflakeCount:100}),theme==='winter'&&_jsx(Snowfall,{snowflakeCount:300}),_jsx(Image,{source:theme==='spring'?require(\"../../../assets/springMT.png\"):theme==='summer'?require(\"../../../assets/summerMT.png\"):theme==='autumn'?require(\"../../../assets/autumnMT.png\"):require(\"../../../assets/winterMT.png\"),style:{position:'absolute',bottom:0,width:'100%',height:500}})]}),_jsx(Footer,{style:{height:18},navigation:navigation})]});};export default Challenges;","map":{"version":3,"names":["React","useState","useEffect","useContext","View","Text","Image","ImageBackground","FlatList","TouchableOpacity","MaterialIcons","Navbar","Footer","Snowfall","AsyncStorage","isToday","ThemeContext","jsx","_jsx","jsxs","_jsxs","Challenges","_ref","navigation","challenges","id","title","description","_useState","_useState2","_slicedToArray","completedChallenges","setCompletedChallenges","setCompletedChallengesWithStorage","_ref2","_asyncToGenerator","value","setItem","JSON","stringify","today","Date","dateOnly","getFullYear","getMonth","getDate","toString","e","_x","apply","arguments","loadCompletedChallenges","_ref3","storedDate","getItem","currentDateOnly","parse","_useContext","theme","renderItem","_ref4","item","isCompleted","style","styles","children","fontSize","marginLeft","onPress","newCompletedChallenges","_objectSpread","_defineProperty","name","size","color","container","flex","justifyContent","alignItems","padding","marginVertical","marginHorizontal","marginTop","backgroundColor","flexDirection","borderRadius","borderWidth","borderColor","width","height","title2","fontWeight","textAlign","source","require","data","keyExtractor","zIndex","numColumns","snowflakeCount","position","bottom"],"sources":["C:/Users/Noah Marean/Source/Repos/TLT-1/EcoTracker/src/Components/pages/Challenges.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { View, Text, Image, ImageBackground, FlatList, TouchableOpacity } from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\nimport Snowfall from 'react-snowfall';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { isToday } from 'date-fns';\r\nimport ThemeContext from '../ThemeContext';\r\n\r\n\r\nconst Challenges = ({ navigation }) => {\r\n    const challenges = [\r\n        {\r\n            id: '1',\r\n            title: 'Drink Water',\r\n            description: 'Drink at least 8 glasses of water every day to stay hydrated.',\r\n        },\r\n        {\r\n            id: '2',\r\n            title: 'Turn off Lights',\r\n            description: 'Make sure to turn off lights when you leave a room to save energy.',\r\n        },\r\n        {\r\n            id: '3',\r\n            title: 'Stand',\r\n            description: 'Stand up every hour to stay active.',\r\n        },\r\n        {\r\n            id: '4',\r\n            title: 'Exercise',\r\n            description: 'Exercise for 30 minutes every day to stay healthy.',\r\n        },\r\n        {\r\n            id: '5',\r\n            title: 'Stretch',\r\n            description: 'Stretch for 10 minutes every day to stay flexible.',\r\n        },\r\n        {\r\n            id: '6',\r\n            title: 'Sleep',\r\n            description: 'Get 8 hours of sleep every night to stay healthy.',\r\n        },\r\n    ];\r\n    const [completedChallenges, setCompletedChallenges] = useState({});\r\n\r\n    const setCompletedChallengesWithStorage = async (value) => {\r\n        try {\r\n            await AsyncStorage.setItem('@completedChallenges', JSON.stringify(value));\r\n            const today = new Date();\r\n            const dateOnly = new Date(today.getFullYear(), today.getMonth(), today.getDate()).toString();\r\n            await AsyncStorage.setItem('@date', dateOnly);\r\n            setCompletedChallenges(value);\r\n        } catch (e) {\r\n            // saving error\r\n        }\r\n    };\r\n\r\n    const loadCompletedChallenges = async () => {\r\n        try {\r\n            const storedDate = new Date(await AsyncStorage.getItem('@date'));\r\n            const today = new Date();\r\n            const currentDateOnly = new Date(today.getFullYear(), today.getMonth(), today.getDate());\r\n\r\n            if (storedDate.toString() !== currentDateOnly.toString()) {\r\n                // If the stored date is different from the current date, reset the completed challenges\r\n                setCompletedChallenges({});\r\n            } else {\r\n                const value = await AsyncStorage.getItem('@completedChallenges');\r\n                if (value !== null) {\r\n                    setCompletedChallenges(JSON.parse(value));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            // loading error\r\n        }\r\n    };\r\n\r\n    const { theme } = useContext(ThemeContext);\r\n\r\n    useEffect(() => {\r\n        loadCompletedChallenges();\r\n    }, []);\r\n\r\n    const renderItem = ({ item }) => {\r\n        // Determine if the current challenge is completed\r\n        const isCompleted = !!completedChallenges[item.id];\r\n\r\n        return (\r\n            <View style={styles.item}>\r\n                <View>\r\n                    <Text style={styles.title}>{item.title}</Text>\r\n                    <Text style={{ fontSize: 16 }}>{item.description}</Text>\r\n                </View>\r\n                <TouchableOpacity\r\n                    style={{ marginLeft: 30 }}\r\n                    onPress={async () => {\r\n                        const newCompletedChallenges = {\r\n                            ...completedChallenges,\r\n                            [item.id]: !isCompleted // Toggle the completion status of the challenge\r\n                        };\r\n                        await setCompletedChallengesWithStorage(newCompletedChallenges);\r\n                    }}>\r\n                    <MaterialIcons name=\"check-circle\" size={32} color={isCompleted ? 'green' : 'grey'} />\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    };\r\n\r\n    const styles = {\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n        item: {\r\n            padding: 20,\r\n            marginVertical: 8,\r\n            marginHorizontal: 16,\r\n            marginTop: 20,\r\n            backgroundColor: 'white',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            borderRadius: 10,\r\n            borderWidth: 2,\r\n            borderColor: '#062a52',\r\n            width: 600,\r\n            height: 80,\r\n        },\r\n        title: {\r\n            fontSize: 32,\r\n        },\r\n        title2: {\r\n            fontSize: 50,\r\n            fontWeight: 'bold',\r\n            color: 'white',\r\n            textAlign: 'center',\r\n        },\r\n    };\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackground.png\")} style={styles.container}>\r\n                <Text style={styles.title2}>Challenges</Text>\r\n                <FlatList\r\n                    data={challenges}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id}\r\n                    style={{ zIndex: 1 }}\r\n                    numColumns={2}\r\n                />\r\n                {\r\n                    theme === 'autumn' && <Snowfall snowflakeCount={100} />\r\n                }\r\n                {\r\n                    theme === 'winter' && <Snowfall snowflakeCount={300} />\r\n                }\r\n                <Image\r\n                    source={theme === 'spring' ? require(\"../../../assets/springMT.png\") :\r\n                        theme === 'summer' ? require(\"../../../assets/summerMT.png\") :\r\n                            theme === 'autumn' ? require(\"../../../assets/autumnMT.png\") :\r\n                                require(\"../../../assets/winterMT.png\")}\r\n                    style={{ position: 'absolute', bottom: 0, width: '100%', height: 500 }} />\r\n            </ImageBackground>\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </View>\r\n    );\r\n\r\n};\r\n\r\nexport default Challenges;"],"mappings":"uzBAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,UAAU,KAAQ,OAAO,CAAC,OAAAC,IAAA,iDAAAC,IAAA,iDAAAC,KAAA,kDAAAC,eAAA,4DAAAC,QAAA,qDAAAC,gBAAA,sDAE/D,OAASC,aAAa,KAAQ,oBAAoB,CAClD,MAAO,CAAAC,MAAM,iBACb,MAAO,CAAAC,MAAM,iBACb,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CACrC,MAAO,CAAAC,YAAY,KAAM,2CAA2C,CACpE,OAASC,OAAO,KAAQ,UAAU,CAClC,MAAO,CAAAC,YAAY,uBAAwB,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAG3C,GAAM,CAAAC,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAAC,IAAA,CAAuB,IAAjB,CAAAC,UAAU,CAAAD,IAAA,CAAVC,UAAU,CAC5B,GAAM,CAAAC,UAAU,CAAG,CACf,CACIC,EAAE,CAAE,GAAG,CACPC,KAAK,CAAE,aAAa,CACpBC,WAAW,CAAE,+DACjB,CAAC,CACD,CACIF,EAAE,CAAE,GAAG,CACPC,KAAK,CAAE,iBAAiB,CACxBC,WAAW,CAAE,oEACjB,CAAC,CACD,CACIF,EAAE,CAAE,GAAG,CACPC,KAAK,CAAE,OAAO,CACdC,WAAW,CAAE,qCACjB,CAAC,CACD,CACIF,EAAE,CAAE,GAAG,CACPC,KAAK,CAAE,UAAU,CACjBC,WAAW,CAAE,oDACjB,CAAC,CACD,CACIF,EAAE,CAAE,GAAG,CACPC,KAAK,CAAE,SAAS,CAChBC,WAAW,CAAE,oDACjB,CAAC,CACD,CACIF,EAAE,CAAE,GAAG,CACPC,KAAK,CAAE,OAAO,CACdC,WAAW,CAAE,mDACjB,CAAC,CACJ,CACD,IAAAC,SAAA,CAAsD3B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA4B,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA3DG,mBAAmB,CAAAF,UAAA,IAAEG,sBAAsB,CAAAH,UAAA,IAElD,GAAM,CAAAI,iCAAiC,gBAAAC,KAAA,CAAAC,iBAAA,CAAG,UAAOC,KAAK,CAAK,CACvD,GAAI,CACA,KAAM,CAAAtB,YAAY,CAACuB,OAAO,CAAC,sBAAsB,CAAEC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CAAC,CACzE,GAAM,CAAAI,KAAK,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACxB,GAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAD,IAAI,CAACD,KAAK,CAACG,WAAW,CAAC,CAAC,CAAEH,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAEJ,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAC5F,KAAM,CAAAhC,YAAY,CAACuB,OAAO,CAAC,OAAO,CAAEK,QAAQ,CAAC,CAC7CV,sBAAsB,CAACI,KAAK,CAAC,CACjC,CAAE,MAAOW,CAAC,CAAE,CAEZ,CACJ,CAAC,iBAVK,CAAAd,iCAAiCA,CAAAe,EAAA,SAAAd,KAAA,CAAAe,KAAA,MAAAC,SAAA,OAUtC,CAED,GAAM,CAAAC,uBAAuB,gBAAAC,KAAA,CAAAjB,iBAAA,CAAG,WAAY,CACxC,GAAI,CACA,GAAM,CAAAkB,UAAU,CAAG,GAAI,CAAAZ,IAAI,MAAO,CAAA3B,YAAY,CAACwC,OAAO,CAAC,OAAO,CAAC,CAAC,CAChE,GAAM,CAAAd,KAAK,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACxB,GAAM,CAAAc,eAAe,CAAG,GAAI,CAAAd,IAAI,CAACD,KAAK,CAACG,WAAW,CAAC,CAAC,CAAEH,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAEJ,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC,CAExF,GAAIQ,UAAU,CAACP,QAAQ,CAAC,CAAC,GAAKS,eAAe,CAACT,QAAQ,CAAC,CAAC,CAAE,CAEtDd,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAC9B,CAAC,IAAM,CACH,GAAM,CAAAI,KAAK,MAAS,CAAAtB,YAAY,CAACwC,OAAO,CAAC,sBAAsB,CAAC,CAChE,GAAIlB,KAAK,GAAK,IAAI,CAAE,CAChBJ,sBAAsB,CAACM,IAAI,CAACkB,KAAK,CAACpB,KAAK,CAAC,CAAC,CAC7C,CACJ,CACJ,CAAE,MAAOW,CAAC,CAAE,CAEZ,CACJ,CAAC,iBAlBK,CAAAI,uBAAuBA,CAAA,SAAAC,KAAA,CAAAH,KAAA,MAAAC,SAAA,OAkB5B,CAED,IAAAO,WAAA,CAAkBtD,UAAU,CAACa,YAAY,CAAC,CAAlC0C,KAAK,CAAAD,WAAA,CAALC,KAAK,CAEbxD,SAAS,CAAC,UAAM,CACZiD,uBAAuB,CAAC,CAAC,CAC7B,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAQ,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAAC,KAAA,CAAiB,IAAX,CAAAC,IAAI,CAAAD,KAAA,CAAJC,IAAI,CAEtB,GAAM,CAAAC,WAAW,CAAG,CAAC,CAAC/B,mBAAmB,CAAC8B,IAAI,CAACpC,EAAE,CAAC,CAElD,MACI,CAAAL,KAAA,CAAChB,IAAI,EAAC2D,KAAK,CAAEC,MAAM,CAACH,IAAK,CAAAI,QAAA,EACrB7C,KAAA,CAAChB,IAAI,EAAA6D,QAAA,EACD/C,IAAA,CAACb,IAAI,EAAC0D,KAAK,CAAEC,MAAM,CAACtC,KAAM,CAAAuC,QAAA,CAAEJ,IAAI,CAACnC,KAAK,CAAO,CAAC,CAC9CR,IAAA,CAACb,IAAI,EAAC0D,KAAK,CAAE,CAAEG,QAAQ,CAAE,EAAG,CAAE,CAAAD,QAAA,CAAEJ,IAAI,CAAClC,WAAW,CAAO,CAAC,EACtD,CAAC,CACPT,IAAA,CAACT,gBAAgB,EACbsD,KAAK,CAAE,CAAEI,UAAU,CAAE,EAAG,CAAE,CAC1BC,OAAO,CAAAjC,iBAAA,CAAE,WAAY,CACjB,GAAM,CAAAkC,sBAAsB,CAAAC,aAAA,CAAAA,aAAA,IACrBvC,mBAAmB,KAAAwC,eAAA,IACrBV,IAAI,CAACpC,EAAE,CAAG,CAACqC,WAAW,EAC1B,CACD,KAAM,CAAA7B,iCAAiC,CAACoC,sBAAsB,CAAC,CACnE,CAAC,CAAC,CAAAJ,QAAA,CACF/C,IAAA,CAACR,aAAa,EAAC8D,IAAI,CAAC,cAAc,CAACC,IAAI,CAAE,EAAG,CAACC,KAAK,CAAEZ,WAAW,CAAG,OAAO,CAAG,MAAO,CAAE,CAAC,CACxE,CAAC,EACjB,CAAC,CAEf,CAAC,CAED,GAAM,CAAAE,MAAM,CAAG,CACXW,SAAS,CAAE,CACPC,IAAI,CAAE,CAAC,CACPC,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAChB,CAAC,CACDjB,IAAI,CAAE,CACFkB,OAAO,CAAE,EAAE,CACXC,cAAc,CAAE,CAAC,CACjBC,gBAAgB,CAAE,EAAE,CACpBC,SAAS,CAAE,EAAE,CACbC,eAAe,CAAE,OAAO,CACxBC,aAAa,CAAE,KAAK,CACpBP,cAAc,CAAE,eAAe,CAC/BC,UAAU,CAAE,QAAQ,CACpBO,YAAY,CAAE,EAAE,CAChBC,WAAW,CAAE,CAAC,CACdC,WAAW,CAAE,SAAS,CACtBC,KAAK,CAAE,GAAG,CACVC,MAAM,CAAE,EACZ,CAAC,CACD/D,KAAK,CAAE,CACHwC,QAAQ,CAAE,EACd,CAAC,CACDwB,MAAM,CAAE,CACJxB,QAAQ,CAAE,EAAE,CACZyB,UAAU,CAAE,MAAM,CAClBjB,KAAK,CAAE,OAAO,CACdkB,SAAS,CAAE,QACf,CACJ,CAAC,CACD,MACI,CAAAxE,KAAA,CAAChB,IAAI,EAAC2D,KAAK,CAAE,CAAEa,IAAI,CAAE,CAAE,CAAE,CAAAX,QAAA,EACrB/C,IAAA,CAACP,MAAM,GAAE,CAAC,CACVS,KAAA,CAACb,eAAe,EAACsF,MAAM,CAAEC,OAAO,oCAAoC,CAAE,CAAC/B,KAAK,CAAEC,MAAM,CAACW,SAAU,CAAAV,QAAA,EAC3F/C,IAAA,CAACb,IAAI,EAAC0D,KAAK,CAAEC,MAAM,CAAC0B,MAAO,CAAAzB,QAAA,CAAC,YAAU,CAAM,CAAC,CAC7C/C,IAAA,CAACV,QAAQ,EACLuF,IAAI,CAAEvE,UAAW,CACjBmC,UAAU,CAAEA,UAAW,CACvBqC,YAAY,CAAE,SAAAA,aAAAnC,IAAI,QAAI,CAAAA,IAAI,CAACpC,EAAE,EAAC,CAC9BsC,KAAK,CAAE,CAAEkC,MAAM,CAAE,CAAE,CAAE,CACrBC,UAAU,CAAE,CAAE,CACjB,CAAC,CAEExC,KAAK,GAAK,QAAQ,EAAIxC,IAAA,CAACL,QAAQ,EAACsF,cAAc,CAAE,GAAI,CAAE,CAAC,CAGvDzC,KAAK,GAAK,QAAQ,EAAIxC,IAAA,CAACL,QAAQ,EAACsF,cAAc,CAAE,GAAI,CAAE,CAAC,CAE3DjF,IAAA,CAACZ,KAAK,EACFuF,MAAM,CAAEnC,KAAK,GAAK,QAAQ,CAAGoC,OAAO,+BAA+B,CAAC,CAChEpC,KAAK,GAAK,QAAQ,CAAGoC,OAAO,+BAA+B,CAAC,CACxDpC,KAAK,GAAK,QAAQ,CAAGoC,OAAO,+BAA+B,CAAC,CACxDA,OAAO,+BAA+B,CAAE,CACpD/B,KAAK,CAAE,CAAEqC,QAAQ,CAAE,UAAU,CAAEC,MAAM,CAAE,CAAC,CAAEb,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,GAAI,CAAE,CAAE,CAAC,EACjE,CAAC,CAClBvE,IAAA,CAACN,MAAM,EAACmD,KAAK,CAAE,CAAE0B,MAAM,CAAE,EAAG,CAAE,CAAClE,UAAU,CAAEA,UAAW,CAAE,CAAC,EACvD,CAAC,CAGf,CAAC,CAED,cAAe,CAAAF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}