{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation } from '@react-navigation/native';\nimport NavbarStyles from \"./Styles/NavbarStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Navbar = function Navbar() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMenuOpen = _useState2[0],\n    setMenuOpen = _useState2[1];\n  var navigation = useNavigation();\n  var toggleMenu = function toggleMenu() {\n    setMenuOpen(!isMenuOpen);\n  };\n  var navigateToPage = function navigateToPage(page) {\n    navigation.navigate(page);\n  };\n  var _useState3 = useState(Dimensions.get('window').width),\n    _useState4 = _slicedToArray(_useState3, 2),\n    windowWidth = _useState4[0],\n    setWindowWidth = _useState4[1];\n  useEffect(function () {\n    var handleResize = function handleResize() {\n      setWindowWidth(Dimensions.get('window').width);\n    };\n    Dimensions.addEventListener('change', handleResize);\n    return function () {\n      Dimensions.removeEventListener('change', handleResize);\n    };\n  }, []);\n  return _jsxs(View, {\n    style: NavbarStyles.navbar,\n    children: [_jsx(TouchableOpacity, {\n      onPress: toggleMenu,\n      children: _jsx(Text, {\n        style: NavbarStyles.menuIcon,\n        children: \"\\u2630\"\n      })\n    }), windowWidth >= 1000 && _jsxs(_Fragment, {\n      children: [_jsxs(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigateToPage('Home');\n          },\n          children: _jsx(Text, {\n            style: NavbarStyles.menuItem,\n            children: \"Home\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigateToPage('Track');\n          },\n          children: _jsx(Text, {\n            style: NavbarStyles.menuItem,\n            children: \"Track\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigateToPage('News');\n          },\n          children: _jsx(Text, {\n            style: NavbarStyles.menuItem,\n            children: \"News\"\n          })\n        })]\n      }), isMenuOpen && _jsxs(View, {\n        style: [NavbarStyles.menuContainer, {\n          left: 0,\n          right: 'auto',\n          flexDirection: 'column'\n        }],\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigateToPage('Home');\n          },\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: _jsx(Text, {\n            style: NavbarStyles.menuItem,\n            children: \"Home\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigateToPage('Track');\n          },\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: _jsx(Text, {\n            style: NavbarStyles.menuItem,\n            children: \"Track\"\n          })\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigateToPage('News');\n          },\n          style: {\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: _jsx(Text, {\n            style: NavbarStyles.menuItem,\n            children: \"News\"\n          })\n        })]\n      })]\n    })]\n  });\n};\nexport default Navbar;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","Dimensions","useNavigation","NavbarStyles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Navbar","_useState","_useState2","_slicedToArray","isMenuOpen","setMenuOpen","navigation","toggleMenu","navigateToPage","page","navigate","_useState3","get","width","_useState4","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","style","navbar","children","onPress","menuIcon","flexDirection","menuItem","menuContainer","left","right","justifyContent","alignItems"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // Don't forget to import useEffect\r\nimport { View, Text, TouchableOpacity, Dimensions } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport NavbarStyles from './Styles/NavbarStyles';\r\n\r\nconst Navbar = () => {\r\n    const [isMenuOpen, setMenuOpen] = useState(false);\r\n    const navigation = useNavigation();\r\n\r\n    const toggleMenu = () => {\r\n        setMenuOpen(!isMenuOpen);\r\n    };\r\n\r\n    const navigateToPage = (page) => {\r\n        navigation.navigate(page);\r\n    };\r\n\r\n    const [windowWidth, setWindowWidth] = useState(Dimensions.get('window').width);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setWindowWidth(Dimensions.get('window').width);\r\n        };\r\n\r\n        Dimensions.addEventListener('change', handleResize);\r\n\r\n        return () => {\r\n            Dimensions.removeEventListener('change', handleResize);\r\n        };\r\n    }, []);\r\n    return (\r\n        <View style={NavbarStyles.navbar}>\r\n            <TouchableOpacity onPress={toggleMenu}>\r\n                <Text style={NavbarStyles.menuIcon}>â˜°</Text>\r\n            </TouchableOpacity>\r\n            {windowWidth >= 1000 && (\r\n                <>\r\n                    <View style={{ flexDirection: 'row' }}>\r\n                        <TouchableOpacity onPress={() => navigateToPage('Home')}>\r\n                            <Text style={NavbarStyles.menuItem}>Home</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity onPress={() => navigateToPage('Track')}>\r\n                            <Text style={NavbarStyles.menuItem}>Track</Text>\r\n                        </TouchableOpacity>\r\n                        <TouchableOpacity onPress={() => navigateToPage('News')}>\r\n                            <Text style={NavbarStyles.menuItem}>News</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                    {isMenuOpen && (\r\n                        <View\r\n                            style={[\r\n                                NavbarStyles.menuContainer,\r\n                                { left: 0, right: 'auto', flexDirection: 'column' },\r\n                            ]}\r\n                        >\r\n                            <TouchableOpacity onPress={() => navigateToPage('Home')} style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\r\n                                <Text style={NavbarStyles.menuItem}>Home</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity onPress={() => navigateToPage('Track')} style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\r\n                                <Text style={NavbarStyles.menuItem}>Track</Text>\r\n                            </TouchableOpacity>\r\n                            <TouchableOpacity onPress={() => navigateToPage('News')} style={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\r\n                                <Text style={NavbarStyles.menuItem}>News</Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    )}\r\n                </>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Navbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}