{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Driving from \"../pages/Driving\";\nimport Energy from \"../pages/Energy\";\nimport Navbar from \"../Navbar\";\nimport Footer from \"../Footer\";\nimport styles from \"../Styles/TrackStyles\";\nimport Diet from \"./Diet\";\nimport Exercise from \"./Exercise\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nfunction TrackOptions(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Navbar, {}), _jsxs(ImageBackground, {\n      source: require(\"../../../assets/ecoBackgroundChristmas.png\"),\n      style: [styles.container, {\n        marginTop: 0,\n        overflow: 'hidden'\n      }],\n      children: [_jsxs(View, {\n        style: {\n          marginTop: 100,\n          alignItems: 'center'\n        },\n        children: [_jsx(Text, {\n          style: [styles.buttonText, {\n            marginBottom: 50\n          }],\n          children: \"Choose An Option To Track\"\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.navigate('Driving');\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Driving\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.navigate('Energy');\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Energy\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.navigate('Diet');\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Diet\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return navigation.navigate('Exercise');\n          },\n          children: _jsx(Text, {\n            style: styles.buttonText,\n            children: \"Exercise\"\n          })\n        })]\n      }), _jsx(Image, {\n        source: require(\"../../../assets/ecoTreesSnow.png\"),\n        style: {\n          position: 'absolute',\n          bottom: -40,\n          width: '100%',\n          height: 160\n        }\n      })]\n    }), _jsx(Snowfall, {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0\n      },\n      snowflakeCount: 250\n    }), _jsx(Footer, {\n      style: {\n        height: 18\n      },\n      navigation: navigation\n    })]\n  });\n}\nfunction TrackNav() {\n  return _jsx(View, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Track\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Track\",\n        component: TrackOptions,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Driving\",\n        component: Driving,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Energy\",\n        component: Energy,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Diet\",\n        component: Diet,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Exercise\",\n        component: Exercise,\n        options: {\n          headerShown: false\n        }\n      })]\n    })\n  });\n}\nexport default TrackNav;","map":{"version":3,"names":["React","View","Text","TouchableOpacity","Image","ImageBackground","StyleSheet","createStackNavigator","Driving","Energy","Navbar","Footer","styles","Diet","Exercise","jsx","_jsx","jsxs","_jsxs","Stack","TrackOptions","_ref","navigation","style","flex","children","source","require","container","marginTop","overflow","alignItems","buttonText","marginBottom","button","onPress","navigate","position","bottom","width","height","Snowfall","top","left","right","snowflakeCount","TrackNav","Navigator","initialRouteName","Screen","name","component","options","headerShown"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/pages/TrackNav.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, TouchableOpacity, Image, ImageBackground, StyleSheet } from 'react-native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Driving from '../pages/Driving';\r\nimport Energy from '../pages/Energy';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\nimport styles from '../Styles/TrackStyles';\r\nimport Diet from './Diet';\r\nimport Exercise from './Exercise';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nfunction TrackOptions({ navigation }) {\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackgroundChristmas.png\")} style={[styles.container, { marginTop: 0, overflow: 'hidden' }]}>\r\n                <View style={{ marginTop: 100, alignItems: 'center' }}>\r\n                    <Text style={[styles.buttonText, { marginBottom: 50 }]}>Choose An Option To Track</Text>\r\n                    <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Driving')}>\r\n                        <Text style={styles.buttonText}>Driving</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Energy')}>\r\n                        <Text style={styles.buttonText}>Energy</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Diet')}>\r\n                        <Text style={styles.buttonText}>Diet</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity style={styles.button} onPress={() => navigation.navigate('Exercise')}>\r\n                        <Text style={styles.buttonText}>Exercise</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n                <Image source={require(\"../../../assets/ecoTreesSnow.png\")} style={{ position: 'absolute', bottom: -40, width: '100%', height: 160 }} />\r\n            </ImageBackground>\r\n            <Snowfall style={{ position: 'absolute', top: 0, left: 0, right: 0, bottom: 0 }} snowflakeCount={250} />\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </View>\r\n    );\r\n}\r\n\r\nfunction TrackNav() {\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Stack.Navigator initialRouteName=\"Track\">\r\n                <Stack.Screen\r\n                    name=\"Track\"\r\n                    component={TrackOptions}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Driving\"\r\n                    component={Driving}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Energy\"\r\n                    component={Energy}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Diet\"\r\n                    component={Diet}\r\n                    options={{ headerShown: false }}\r\n                />\r\n                <Stack.Screen\r\n                    name=\"Exercise\"\r\n                    component={Exercise}\r\n                    options={{ headerShown: false }}\r\n                />\r\n            </Stack.Navigator>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default TrackNav;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}