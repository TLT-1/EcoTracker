{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FactStyles from \"./Styles/FactStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar facts = [\"Fact 1...\", \"Fact 2...\", \"Fact 3...\"];\nvar Fact = function Fact(_ref) {\n  var isModalVisible = _ref.isModalVisible,\n    setModalVisible = _ref.setModalVisible;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    fact = _useState2[0],\n    setFact = _useState2[1];\n  useEffect(function () {\n    if (isModalVisible) {\n      var randomFact = facts[Math.floor(Math.random() * facts.length)];\n      setFact(randomFact);\n    }\n  }, [isModalVisible]);\n  if (!isModalVisible) {\n    return null;\n  }\n  return _jsxs(View, {\n    style: [{\n      position: 'absolute'\n    }, FactStyles.factBox],\n    children: [_jsx(Text, {\n      children: fact\n    }), _jsx(TouchableOpacity, {\n      style: FactStyles.closeButton,\n      onPress: function onPress() {\n        return setModalVisible(false);\n      },\n      children: _jsx(Text, {\n        children: \"Close\"\n      })\n    })]\n  });\n};\nexport default Fact;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","FactStyles","jsx","_jsx","jsxs","_jsxs","facts","Fact","_ref","isModalVisible","setModalVisible","_useState","_useState2","_slicedToArray","fact","setFact","randomFact","Math","floor","random","length","style","position","factBox","children","closeButton","onPress"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/Fact.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity } from 'react-native';\r\nimport FactStyles from './Styles/FactStyles';\r\n\r\nconst facts = [\r\n    \"Fact 1...\",\r\n    \"Fact 2...\",\r\n    \"Fact 3...\",\r\n    // Add as many facts as you want\r\n];\r\n\r\nconst Fact = ({ isModalVisible, setModalVisible }) => {\r\n    const [fact, setFact] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (isModalVisible) {\r\n            const randomFact = facts[Math.floor(Math.random() * facts.length)];\r\n            setFact(randomFact);\r\n        }\r\n    }, [isModalVisible]);\r\n\r\n    if (!isModalVisible) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <View style={[{ position: 'absolute' }, FactStyles.factBox]}>\r\n            <Text>{fact}</Text>\r\n            <TouchableOpacity style={FactStyles.closeButton} onPress={() => setModalVisible(false)}>\r\n                <Text>Close</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Fact;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAEnD,OAAOC,UAAU;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,IAAMC,KAAK,GAAG,CACV,WAAW,EACX,WAAW,EACX,WAAW,CAEd;AAED,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAAC,IAAA,EAA4C;EAAA,IAAtCC,cAAc,GAAAD,IAAA,CAAdC,cAAc;IAAEC,eAAe,GAAAF,IAAA,CAAfE,eAAe;EAC3C,IAAAC,SAAA,GAAwBf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpBf,SAAS,CAAC,YAAM;IACZ,IAAIY,cAAc,EAAE;MAChB,IAAMO,UAAU,GAAGV,KAAK,CAACW,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGb,KAAK,CAACc,MAAM,CAAC,CAAC;MAClEL,OAAO,CAACC,UAAU,CAAC;IACvB;EACJ,CAAC,EAAE,CAACP,cAAc,CAAC,CAAC;EAEpB,IAAI,CAACA,cAAc,EAAE;IACjB,OAAO,IAAI;EACf;EAEA,OACIJ,KAAA,CAACP,IAAI;IAACuB,KAAK,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAW,CAAC,EAAErB,UAAU,CAACsB,OAAO,CAAE;IAAAC,QAAA,GACxDrB,IAAA,CAACJ,IAAI;MAAAyB,QAAA,EAAEV;IAAI,CAAO,CAAC,EACnBX,IAAA,CAACH,gBAAgB;MAACqB,KAAK,EAAEpB,UAAU,CAACwB,WAAY;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMhB,eAAe,CAAC,KAAK,CAAC;MAAA,CAAC;MAAAc,QAAA,EACnFrB,IAAA,CAACJ,IAAI;QAAAyB,QAAA,EAAC;MAAK,CAAM;IAAC,CACJ,CAAC;EAAA,CACjB,CAAC;AAEf,CAAC;AAED,eAAejB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}