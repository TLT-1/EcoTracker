{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport NavbarStyles from \"./Styles/NavbarStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Navbar = function Navbar() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMenuOpen = _useState2[0],\n    setMenuOpen = _useState2[1];\n  var _useState3 = useState(Dimensions.get('window').width),\n    _useState4 = _slicedToArray(_useState3, 2),\n    windowWidth = _useState4[0],\n    setWindowWidth = _useState4[1];\n  var toggleMenu = function toggleMenu() {\n    setMenuOpen(!isMenuOpen);\n  };\n  useEffect(function () {\n    var handleResize = function handleResize() {\n      setWindowWidth(Dimensions.get('window').width);\n    };\n    Dimensions.addEventListener('change', handleResize);\n    return function () {\n      Dimensions.removeEventListener('change', handleResize);\n    };\n  }, []);\n  return _jsxs(View, {\n    style: NavbarStyles.navbar,\n    children: [_jsx(TouchableOpacity, {\n      onPress: toggleMenu,\n      children: _jsx(Text, {\n        style: NavbarStyles.menuIcon,\n        children: \"\\u2630\"\n      })\n    }), isMenuOpen && _jsxs(View, {\n      style: [NavbarStyles.menuContainer, {\n        left: windowWidth < 600 ? 0 : 'auto',\n        right: windowWidth < 600 ? 'auto' : 0\n      }],\n      children: [_jsx(Text, {\n        style: NavbarStyles.menuItem,\n        children: \"Home\"\n      }), _jsx(Text, {\n        style: NavbarStyles.menuItem,\n        children: \"Track\"\n      }), _jsx(Text, {\n        style: NavbarStyles.menuItem,\n        children: \"News\"\n      })]\n    })]\n  });\n};\nexport default Navbar;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","Dimensions","NavbarStyles","jsx","_jsx","jsxs","_jsxs","Navbar","_useState","_useState2","_slicedToArray","isMenuOpen","setMenuOpen","_useState3","get","width","_useState4","windowWidth","setWindowWidth","toggleMenu","handleResize","addEventListener","removeEventListener","style","navbar","children","onPress","menuIcon","menuContainer","left","right","menuItem"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, TouchableOpacity, Dimensions } from 'react-native';\r\nimport NavbarStyles from './Styles/NavbarStyles';\r\n\r\nconst Navbar = () => {\r\n    const [isMenuOpen, setMenuOpen] = useState(false);\r\n    const [windowWidth, setWindowWidth] = useState(Dimensions.get('window').width);\r\n\r\n    const toggleMenu = () => {\r\n        setMenuOpen(!isMenuOpen);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setWindowWidth(Dimensions.get('window').width);\r\n        };\r\n\r\n        Dimensions.addEventListener('change', handleResize);\r\n\r\n        return () => {\r\n            Dimensions.removeEventListener('change', handleResize);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <View style={NavbarStyles.navbar}>\r\n            <TouchableOpacity onPress={toggleMenu}>\r\n                <Text style={NavbarStyles.menuIcon}>â˜°</Text>\r\n            </TouchableOpacity>\r\n            {isMenuOpen && (\r\n                <View\r\n                    style={[\r\n                        NavbarStyles.menuContainer,\r\n                        { left: windowWidth < 600 ? 0 : 'auto', right: windowWidth < 600 ? 'auto' : 0 },\r\n                    ]}\r\n                >\r\n                    <Text style={NavbarStyles.menuItem}>Home</Text>\r\n                    <Text style={NavbarStyles.menuItem}>Track</Text>\r\n                    <Text style={NavbarStyles.menuItem}>News</Text>\r\n                </View>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAEnD,OAAOC,YAAY;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EACjB,IAAAC,SAAA,GAAkCZ,QAAQ,CAAC,KAAK,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,UAAU,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC9B,IAAAI,UAAA,GAAsCjB,QAAQ,CAACK,UAAU,CAACa,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK,CAAC;IAAAC,UAAA,GAAAN,cAAA,CAAAG,UAAA;IAAvEI,WAAW,GAAAD,UAAA;IAAEE,cAAc,GAAAF,UAAA;EAElC,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACrBP,WAAW,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC;EAEDd,SAAS,CAAC,YAAM;IACZ,IAAMuB,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;MACvBF,cAAc,CAACjB,UAAU,CAACa,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK,CAAC;IAClD,CAAC;IAEDd,UAAU,CAACoB,gBAAgB,CAAC,QAAQ,EAAED,YAAY,CAAC;IAEnD,OAAO,YAAM;MACTnB,UAAU,CAACqB,mBAAmB,CAAC,QAAQ,EAAEF,YAAY,CAAC;IAC1D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,OACId,KAAA,CAACR,IAAI;IAACyB,KAAK,EAAErB,YAAY,CAACsB,MAAO;IAAAC,QAAA,GAC7BrB,IAAA,CAACJ,gBAAgB;MAAC0B,OAAO,EAAEP,UAAW;MAAAM,QAAA,EAClCrB,IAAA,CAACL,IAAI;QAACwB,KAAK,EAAErB,YAAY,CAACyB,QAAS;QAAAF,QAAA,EAAC;MAAC,CAAM;IAAC,CAC9B,CAAC,EAClBd,UAAU,IACPL,KAAA,CAACR,IAAI;MACDyB,KAAK,EAAE,CACHrB,YAAY,CAAC0B,aAAa,EAC1B;QAAEC,IAAI,EAAEZ,WAAW,GAAG,GAAG,GAAG,CAAC,GAAG,MAAM;QAAEa,KAAK,EAAEb,WAAW,GAAG,GAAG,GAAG,MAAM,GAAG;MAAE,CAAC,CACjF;MAAAQ,QAAA,GAEFrB,IAAA,CAACL,IAAI;QAACwB,KAAK,EAAErB,YAAY,CAAC6B,QAAS;QAAAN,QAAA,EAAC;MAAI,CAAM,CAAC,EAC/CrB,IAAA,CAACL,IAAI;QAACwB,KAAK,EAAErB,YAAY,CAAC6B,QAAS;QAAAN,QAAA,EAAC;MAAK,CAAM,CAAC,EAChDrB,IAAA,CAACL,IAAI;QAACwB,KAAK,EAAErB,YAAY,CAAC6B,QAAS;QAAAN,QAAA,EAAC;MAAI,CAAM,CAAC;IAAA,CAC7C,CACT;EAAA,CACC,CAAC;AAEf,CAAC;AAED,eAAelB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}