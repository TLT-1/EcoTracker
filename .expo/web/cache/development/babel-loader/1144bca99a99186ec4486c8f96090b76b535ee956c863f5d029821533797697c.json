{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Water = function Water() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    waterIntake = _useState2[0],\n    setWaterIntake = _useState2[1];\n  var recommendedIntake = 8;\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: [_jsxs(Text, {\n      style: {\n        fontSize: 24\n      },\n      children: [\"Recommended water intake: \", recommendedIntake, \" cups per day\"]\n    }), _jsxs(View, {\n      style: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: 20\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setWaterIntake(Math.max(0, waterIntake - 1));\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 50\n          },\n          children: \"-\"\n        })\n      }), _jsx(Image, {\n        source: require(\"./path_to_your_image.png\"),\n        style: {\n          width: 100,\n          height: 100\n        }\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return setWaterIntake(waterIntake + 1);\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 50\n          },\n          children: \"+\"\n        })\n      })]\n    }), _jsxs(Text, {\n      style: {\n        fontSize: 24,\n        marginTop: 20\n      },\n      children: [\"Your water intake: \", waterIntake, \" cups\"]\n    })]\n  });\n};\nexport default Water;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","Image","jsxs","_jsxs","jsx","_jsx","Water","_useState","_useState2","_slicedToArray","waterIntake","setWaterIntake","recommendedIntake","style","flex","alignItems","justifyContent","children","fontSize","flexDirection","marginTop","onPress","Math","max","source","require","width","height"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/pages/Water.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TouchableOpacity, Image } from 'react-native';\r\n\r\nconst Water = () => {\r\n    const [waterIntake, setWaterIntake] = useState(0);\r\n    const recommendedIntake = 8; // The recommended average water intake in cups\r\n\r\n    return (\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n            <Text style={{ fontSize: 24 }}>Recommended water intake: {recommendedIntake} cups per day</Text>\r\n            <View style={{ flexDirection: 'row', alignItems: 'center', marginTop: 20 }}>\r\n                <TouchableOpacity onPress={() => setWaterIntake(Math.max(0, waterIntake - 1))}>\r\n                    <Text style={{ fontSize: 50 }}>-</Text>\r\n                </TouchableOpacity>\r\n                <Image source={require('./path_to_your_image.png')} style={{ width: 100, height: 100 }} />\r\n                <TouchableOpacity onPress={() => setWaterIntake(waterIntake + 1)}>\r\n                    <Text style={{ fontSize: 50 }}>+</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n            <Text style={{ fontSize: 24, marginTop: 20 }}>Your water intake: {waterIntake} cups</Text>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Water;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAGxC,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;EAChB,IAAAC,SAAA,GAAsCV,QAAQ,CAAC,CAAC,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA1CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAMI,iBAAiB,GAAG,CAAC;EAE3B,OACIT,KAAA,CAACL,IAAI;IAACe,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,GACrEd,KAAA,CAACJ,IAAI;MAACc,KAAK,EAAE;QAAEK,QAAQ,EAAE;MAAG,CAAE;MAAAD,QAAA,GAAC,4BAA0B,EAACL,iBAAiB,EAAC,eAAa;IAAA,CAAM,CAAC,EAChGT,KAAA,CAACL,IAAI;MAACe,KAAK,EAAE;QAAEM,aAAa,EAAE,KAAK;QAAEJ,UAAU,EAAE,QAAQ;QAAEK,SAAS,EAAE;MAAG,CAAE;MAAAH,QAAA,GACvEZ,IAAA,CAACL,gBAAgB;QAACqB,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMV,cAAc,CAACW,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEb,WAAW,GAAG,CAAC,CAAC,CAAC;QAAA,CAAC;QAAAO,QAAA,EAC1EZ,IAAA,CAACN,IAAI;UAACc,KAAK,EAAE;YAAEK,QAAQ,EAAE;UAAG,CAAE;UAAAD,QAAA,EAAC;QAAC,CAAM;MAAC,CACzB,CAAC,EACnBZ,IAAA,CAACJ,KAAK;QAACuB,MAAM,EAAEC,OAAO,2BAA2B,CAAE;QAACZ,KAAK,EAAE;UAAEa,KAAK,EAAE,GAAG;UAAEC,MAAM,EAAE;QAAI;MAAE,CAAE,CAAC,EAC1FtB,IAAA,CAACL,gBAAgB;QAACqB,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMV,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;QAAA,CAAC;QAAAO,QAAA,EAC7DZ,IAAA,CAACN,IAAI;UAACc,KAAK,EAAE;YAAEK,QAAQ,EAAE;UAAG,CAAE;UAAAD,QAAA,EAAC;QAAC,CAAM;MAAC,CACzB,CAAC;IAAA,CACjB,CAAC,EACPd,KAAA,CAACJ,IAAI;MAACc,KAAK,EAAE;QAAEK,QAAQ,EAAE,EAAE;QAAEE,SAAS,EAAE;MAAG,CAAE;MAAAH,QAAA,GAAC,qBAAmB,EAACP,WAAW,EAAC,OAAK;IAAA,CAAM,CAAC;EAAA,CACxF,CAAC;AAEf,CAAC;AAED,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}