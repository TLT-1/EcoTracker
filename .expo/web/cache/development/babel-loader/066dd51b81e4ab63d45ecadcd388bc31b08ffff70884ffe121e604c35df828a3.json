{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Navbar from \"../Navbar\";\nimport Footer from \"../Footer\";\nimport Snowfall from 'react-snowfall';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Challenges = function Challenges(_ref) {\n  var navigation = _ref.navigation;\n  var challenges = [{\n    id: 1,\n    title: 'Drink x amount of water',\n    description: 'Drink 8 glasses of water every day to stay hydrated.'\n  }, {\n    id: 2,\n    title: 'Turn off lights when not in use',\n    description: 'Make sure to turn off lights when you leave a room to save energy.'\n  }];\n  var styles = {\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Navbar, {}), _jsx(Text, {\n      style: {\n        fontSize: 24,\n        fontWeight: 'bold'\n      },\n      children: \"Daily Challenges\"\n    }), challenges.map(function (challenge) {\n      return _jsxs(View, {\n        children: [_jsx(Text, {\n          style: {\n            fontSize: 18,\n            fontWeight: 'bold'\n          },\n          children: challenge.title\n        }), _jsx(Text, {\n          children: challenge.description\n        })]\n      }, challenge.id);\n    }), _jsx(Image, {\n      source: require(\"../../../assets/ecoTreesSnow.png\"),\n      style: {\n        position: 'absolute',\n        bottom: -40,\n        width: '100%',\n        height: 160\n      }\n    }), _jsx(Snowfall, {\n      snowflakeCount: 250\n    }), _jsx(Footer, {\n      style: {\n        height: 18\n      },\n      navigation: navigation\n    })]\n  });\n};\nexport default Challenges;","map":{"version":3,"names":["React","View","Text","ImageBackground","Navbar","Footer","Snowfall","jsx","_jsx","jsxs","_jsxs","Challenges","_ref","navigation","challenges","id","title","description","styles","container","flex","justifyContent","alignItems","style","children","fontSize","fontWeight","map","challenge","Image","source","require","position","bottom","width","height","snowflakeCount"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/pages/Challenges.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, ImageBackground } from 'react-native';\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\nimport Snowfall from 'react-snowfall';\r\n\r\nconst Challenges = ({ navigation }) => {\r\n    const challenges = [\r\n        {\r\n            id: 1,\r\n            title: 'Drink x amount of water',\r\n            description: 'Drink 8 glasses of water every day to stay hydrated.',\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Turn off lights when not in use',\r\n            description: 'Make sure to turn off lights when you leave a room to save energy.',\r\n        },\r\n        // Add more challenges here\r\n    ];\r\n\r\n    const styles = {\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n    };\r\n\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n\r\n            <Text style={{ fontSize: 24, fontWeight: 'bold' }}>Daily Challenges</Text>\r\n            {challenges.map(challenge => (\r\n                <View key={challenge.id}>\r\n                    <Text style={{ fontSize: 18, fontWeight: 'bold' }}>{challenge.title}</Text>\r\n                    <Text>{challenge.description}</Text>\r\n                </View>\r\n            ))}\r\n            <Image source={require(\"../../../assets/ecoTreesSnow.png\")} style={{ position: 'absolute', bottom: -40, width: '100%', height: 160 }} />\r\n\r\n            <Snowfall snowflakeCount={250} />\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Challenges;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,eAAA;AAE1B,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,QAAQ,MAAM,gBAAgB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtC,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC5B,IAAMC,UAAU,GAAG,CACf;IACIC,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,yBAAyB;IAChCC,WAAW,EAAE;EACjB,CAAC,EACD;IACIF,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE,iCAAiC;IACxCC,WAAW,EAAE;EACjB,CAAC,CAEJ;EAED,IAAMC,MAAM,GAAG;IACXC,SAAS,EAAE;MACPC,IAAI,EAAE,CAAC;MACPC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE;IAChB;EACJ,CAAC;EAED,OACIZ,KAAA,CAACT,IAAI;IAACsB,KAAK,EAAE;MAAEH,IAAI,EAAE;IAAE,CAAE;IAAAI,QAAA,GACrBhB,IAAA,CAACJ,MAAM,IAAE,CAAC,EAEVI,IAAA,CAACN,IAAI;MAACqB,KAAK,EAAE;QAAEE,QAAQ,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAC;IAAgB,CAAM,CAAC,EACzEV,UAAU,CAACa,GAAG,CAAC,UAAAC,SAAS;MAAA,OACrBlB,KAAA,CAACT,IAAI;QAAAuB,QAAA,GACDhB,IAAA,CAACN,IAAI;UAACqB,KAAK,EAAE;YAAEE,QAAQ,EAAE,EAAE;YAAEC,UAAU,EAAE;UAAO,CAAE;UAAAF,QAAA,EAAEI,SAAS,CAACZ;QAAK,CAAO,CAAC,EAC3ER,IAAA,CAACN,IAAI;UAAAsB,QAAA,EAAEI,SAAS,CAACX;QAAW,CAAO,CAAC;MAAA,GAF7BW,SAAS,CAACb,EAGf,CAAC;IAAA,CACV,CAAC,EACFP,IAAA,CAACqB,KAAK;MAACC,MAAM,EAAEC,OAAO,mCAAmC,CAAE;MAACR,KAAK,EAAE;QAAES,QAAQ,EAAE,UAAU;QAAEC,MAAM,EAAE,CAAC,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAI;IAAE,CAAE,CAAC,EAExI3B,IAAA,CAACF,QAAQ;MAAC8B,cAAc,EAAE;IAAI,CAAE,CAAC,EACjC5B,IAAA,CAACH,MAAM;MAACkB,KAAK,EAAE;QAAEY,MAAM,EAAE;MAAG,CAAE;MAACtB,UAAU,EAAEA;IAAW,CAAE,CAAC;EAAA,CACvD,CAAC;AAEf,CAAC;AAED,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}