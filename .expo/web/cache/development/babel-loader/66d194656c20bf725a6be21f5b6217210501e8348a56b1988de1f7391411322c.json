{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport Navbar from \"../Navbar\";\nimport Footer from \"../Footer\";\nimport Snowfall from 'react-snowfall';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Challenges = function Challenges(_ref) {\n  var navigation = _ref.navigation;\n  var challenges = [{\n    id: '1',\n    title: 'Drink Water',\n    description: 'Drink 8 glasses of water every day to stay hydrated.'\n  }, {\n    id: '2',\n    title: 'Turn off Lights',\n    description: 'Make sure to turn off lights when you leave a room to save energy.'\n  }, {\n    id: '3',\n    title: 'Stand',\n    description: 'Stand up every hour to stay active.'\n  }, {\n    id: '4',\n    title: 'Exercise',\n    description: 'Exercise for 30 minutes every day to stay healthy.'\n  }, {\n    id: '5',\n    title: 'Stretch',\n    description: 'Stretch for 10 minutes every day to stay flexible.'\n  }, {\n    id: '6',\n    title: 'Sleep',\n    description: 'Get 8 hours of sleep every night to stay healthy.'\n  }];\n  var _useState = useState({}),\n    _useState2 = _slicedToArray(_useState, 2),\n    completedChallenges = _useState2[0],\n    setCompletedChallenges = _useState2[1];\n  useEffect(function () {\n    AsyncStorage.getItem('completedChallenges').then(function (data) {\n      if (data) {\n        setCompletedChallenges(JSON.parse(data));\n      }\n    });\n  }, []);\n  useEffect(function () {\n    AsyncStorage.setItem('completedChallenges', JSON.stringify(completedChallenges));\n  }, [completedChallenges]);\n  useEffect(function () {\n    var now = new Date();\n    var tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n    var timeUntilTomorrow = tomorrow - now;\n    var timer = setTimeout(function () {\n      setCompletedChallenges({});\n    }, timeUntilTomorrow);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, []);\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    var isCompleted = !!completedChallenges[item.id];\n    return _jsxs(View, {\n      style: styles.item,\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: item.title\n        }), _jsx(Text, {\n          style: {\n            fontSize: 16\n          },\n          children: item.description\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: {\n          marginLeft: 30\n        },\n        onPress: function onPress() {\n          setCompletedChallenges(_objectSpread(_objectSpread({}, completedChallenges), {}, _defineProperty({}, item.id, !isCompleted)));\n        },\n        children: _jsx(MaterialIcons, {\n          name: \"check-circle\",\n          size: 32,\n          color: isCompleted ? 'green' : 'grey'\n        })\n      })]\n    });\n  };\n  var styles = {\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    item: {\n      padding: 20,\n      marginVertical: 8,\n      marginHorizontal: 16,\n      marginTop: 20,\n      backgroundColor: 'white',\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      borderRadius: 10,\n      borderWidth: 2,\n      borderColor: '#062a52',\n      width: 600,\n      height: 80\n    },\n    title: {\n      fontSize: 32\n    },\n    title2: {\n      fontSize: 50,\n      fontWeight: 'bold',\n      color: 'white',\n      textAlign: 'center'\n    }\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Navbar, {}), _jsxs(ImageBackground, {\n      source: require(\"../../../assets/ecoBackground.png\"),\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.title2,\n        children: \"Challenges\"\n      }), _jsx(FlatList, {\n        data: challenges,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        style: {\n          zIndex: 1\n        },\n        numColumns: 2\n      }), _jsx(Image, {\n        source: require(\"../../../assets/ecoMountain.png\"),\n        style: {\n          position: 'absolute',\n          bottom: 0,\n          width: '100%',\n          height: 500\n        }\n      }), _jsx(Image, {\n        source: require(\"../../../assets/ecoTreesSnow.png\"),\n        style: {\n          position: 'absolute',\n          bottom: -40,\n          width: '100%',\n          height: 160\n        }\n      })]\n    }), _jsx(Snowfall, {\n      snowflakeCount: 250\n    }), _jsx(Footer, {\n      style: {\n        height: 18\n      },\n      navigation: navigation\n    })]\n  });\n};\nexport default Challenges;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Image","ImageBackground","FlatList","TouchableOpacity","MaterialIcons","Navbar","Footer","Snowfall","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Challenges","_ref","navigation","challenges","id","title","description","_useState","_useState2","_slicedToArray","completedChallenges","setCompletedChallenges","getItem","then","data","JSON","parse","setItem","stringify","now","Date","tomorrow","getFullYear","getMonth","getDate","timeUntilTomorrow","timer","setTimeout","clearTimeout","renderItem","_ref2","item","isCompleted","style","styles","children","fontSize","marginLeft","onPress","_objectSpread","_defineProperty","name","size","color","container","flex","justifyContent","alignItems","padding","marginVertical","marginHorizontal","marginTop","backgroundColor","flexDirection","borderRadius","borderWidth","borderColor","width","height","title2","fontWeight","textAlign","source","require","keyExtractor","zIndex","numColumns","position","bottom","snowflakeCount"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/pages/Challenges.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Image, ImageBackground, FlatList, TouchableOpacity } from 'react-native';\r\nimport { MaterialIcons } from '@expo/vector-icons'; // install @expo/vector-icons\r\nimport Navbar from '../Navbar';\r\nimport Footer from '../Footer';\r\nimport Snowfall from 'react-snowfall';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n\r\nconst Challenges = ({ navigation }) => {\r\n    const challenges = [\r\n        {\r\n            id: '1',\r\n            title: 'Drink Water',\r\n            description: 'Drink 8 glasses of water every day to stay hydrated.',\r\n        },\r\n        {\r\n            id: '2',\r\n            title: 'Turn off Lights',\r\n            description: 'Make sure to turn off lights when you leave a room to save energy.',\r\n        },\r\n        {\r\n            id: '3',\r\n            title: 'Stand',\r\n            description: 'Stand up every hour to stay active.',\r\n        },\r\n        {\r\n            id: '4',\r\n            title: 'Exercise',\r\n            description: 'Exercise for 30 minutes every day to stay healthy.',\r\n        },\r\n        {\r\n            id: '5',\r\n            title: 'Stretch',\r\n            description: 'Stretch for 10 minutes every day to stay flexible.',\r\n        },\r\n        {\r\n            id: '6',\r\n            title: 'Sleep',\r\n            description: 'Get 8 hours of sleep every night to stay healthy.',\r\n        },\r\n    ];\r\n    const [completedChallenges, setCompletedChallenges] = useState({});\r\n\r\n    useEffect(() => {\r\n        // Load the completed challenges from async storage when the component mounts\r\n        AsyncStorage.getItem('completedChallenges').then(data => {\r\n            if (data) {\r\n                setCompletedChallenges(JSON.parse(data));\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        // Save the completed challenges to async storage whenever it changes\r\n        AsyncStorage.setItem('completedChallenges', JSON.stringify(completedChallenges));\r\n    }, [completedChallenges]);\r\n\r\n    useEffect(() => {\r\n        const now = new Date();\r\n        const tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\r\n        const timeUntilTomorrow = tomorrow - now;\r\n\r\n        const timer = setTimeout(() => {\r\n            setCompletedChallenges({});\r\n        }, timeUntilTomorrow);\r\n\r\n        return () => clearTimeout(timer);\r\n    }, []);\r\n\r\n    const renderItem = ({ item }) => {\r\n        // Determine if the current challenge is completed\r\n        const isCompleted = !!completedChallenges[item.id];\r\n\r\n\r\n        return (\r\n            <View style={styles.item}>\r\n                <View>\r\n                    <Text style={styles.title}>{item.title}</Text>\r\n                    <Text style={{ fontSize: 16 }}>{item.description}</Text>\r\n                </View>\r\n                <TouchableOpacity\r\n                    style={{ marginLeft: 30 }}\r\n                    onPress={() => {\r\n                        setCompletedChallenges({\r\n                            ...completedChallenges,\r\n                            [item.id]: !isCompleted // Toggle the completion status of the challenge\r\n                        });\r\n                    }}>\r\n                    <MaterialIcons name=\"check-circle\" size={32} color={isCompleted ? 'green' : 'grey'} />\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    };\r\n    const styles = {\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n        },\r\n        item: {\r\n            padding: 20,\r\n            marginVertical: 8,\r\n            marginHorizontal: 16,\r\n            marginTop: 20,\r\n            backgroundColor: 'white',\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            alignItems: 'center',\r\n            borderRadius: 10,\r\n            borderWidth: 2,\r\n            borderColor: '#062a52',\r\n            width: 600,\r\n            height: 80,\r\n        },\r\n        title: {\r\n            fontSize: 32,\r\n        },\r\n        title2: {\r\n            fontSize: 50,\r\n            fontWeight: 'bold',\r\n            color: 'white',\r\n            textAlign: 'center',\r\n        },\r\n    };\r\n    return (\r\n        <View style={{ flex: 1 }}>\r\n            <Navbar />\r\n            <ImageBackground source={require(\"../../../assets/ecoBackground.png\")} style={styles.container}>\r\n                <Text style={styles.title2}>Challenges</Text>\r\n                <FlatList\r\n                    data={challenges}\r\n                    renderItem={renderItem}\r\n                    keyExtractor={item => item.id}\r\n                    style={{ zIndex: 1 }}\r\n                    numColumns={2}\r\n                />\r\n                <Image source={require(\"../../../assets/ecoMountain.png\")} style={{ position: 'absolute', bottom: 0, width: '100%', height: 500 }} />\r\n                <Image source={require(\"../../../assets/ecoTreesSnow.png\")} style={{ position: 'absolute', bottom: -40, width: '100%', height: 160 }} />\r\n            </ImageBackground>\r\n            <Snowfall snowflakeCount={250} />\r\n            <Footer style={{ height: 18 }} navigation={navigation} />\r\n        </View>\r\n    );\r\n\r\n};\r\n\r\nexport default Challenges;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAEnD,SAASC,aAAa,QAAQ,oBAAoB;AAClD,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,YAAY,MAAM,2CAA2C;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGrE,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAuB;EAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC5B,IAAMC,UAAU,GAAG,CACf;IACIC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,aAAa;IACpBC,WAAW,EAAE;EACjB,CAAC,EACD;IACIF,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,iBAAiB;IACxBC,WAAW,EAAE;EACjB,CAAC,EACD;IACIF,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,OAAO;IACdC,WAAW,EAAE;EACjB,CAAC,EACD;IACIF,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,UAAU;IACjBC,WAAW,EAAE;EACjB,CAAC,EACD;IACIF,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,SAAS;IAChBC,WAAW,EAAE;EACjB,CAAC,EACD;IACIF,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,OAAO;IACdC,WAAW,EAAE;EACjB,CAAC,CACJ;EACD,IAAAC,SAAA,GAAsDxB,QAAQ,CAAC,CAAC,CAAC,CAAC;IAAAyB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3DG,mBAAmB,GAAAF,UAAA;IAAEG,sBAAsB,GAAAH,UAAA;EAElDxB,SAAS,CAAC,YAAM;IAEZW,YAAY,CAACiB,OAAO,CAAC,qBAAqB,CAAC,CAACC,IAAI,CAAC,UAAAC,IAAI,EAAI;MACrD,IAAIA,IAAI,EAAE;QACNH,sBAAsB,CAACI,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,CAAC;MAC5C;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN9B,SAAS,CAAC,YAAM;IAEZW,YAAY,CAACsB,OAAO,CAAC,qBAAqB,EAAEF,IAAI,CAACG,SAAS,CAACR,mBAAmB,CAAC,CAAC;EACpF,CAAC,EAAE,CAACA,mBAAmB,CAAC,CAAC;EAEzB1B,SAAS,CAAC,YAAM;IACZ,IAAMmC,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,IAAMC,QAAQ,GAAG,IAAID,IAAI,CAACD,GAAG,CAACG,WAAW,CAAC,CAAC,EAAEH,GAAG,CAACI,QAAQ,CAAC,CAAC,EAAEJ,GAAG,CAACK,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAC/E,IAAMC,iBAAiB,GAAGJ,QAAQ,GAAGF,GAAG;IAExC,IAAMO,KAAK,GAAGC,UAAU,CAAC,YAAM;MAC3BhB,sBAAsB,CAAC,CAAC,CAAC,CAAC;IAC9B,CAAC,EAAEc,iBAAiB,CAAC;IAErB,OAAO;MAAA,OAAMG,YAAY,CAACF,KAAK,CAAC;IAAA;EACpC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAAC,KAAA,EAAiB;IAAA,IAAXC,IAAI,GAAAD,KAAA,CAAJC,IAAI;IAEtB,IAAMC,WAAW,GAAG,CAAC,CAACtB,mBAAmB,CAACqB,IAAI,CAAC3B,EAAE,CAAC;IAGlD,OACIL,KAAA,CAACd,IAAI;MAACgD,KAAK,EAAEC,MAAM,CAACH,IAAK;MAAAI,QAAA,GACrBpC,KAAA,CAACd,IAAI;QAAAkD,QAAA,GACDtC,IAAA,CAACX,IAAI;UAAC+C,KAAK,EAAEC,MAAM,CAAC7B,KAAM;UAAA8B,QAAA,EAAEJ,IAAI,CAAC1B;QAAK,CAAO,CAAC,EAC9CR,IAAA,CAACX,IAAI;UAAC+C,KAAK,EAAE;YAAEG,QAAQ,EAAE;UAAG,CAAE;UAAAD,QAAA,EAAEJ,IAAI,CAACzB;QAAW,CAAO,CAAC;MAAA,CACtD,CAAC,EACPT,IAAA,CAACP,gBAAgB;QACb2C,KAAK,EAAE;UAAEI,UAAU,EAAE;QAAG,CAAE;QAC1BC,OAAO,EAAE,SAAAA,QAAA,EAAM;UACX3B,sBAAsB,CAAA4B,aAAA,CAAAA,aAAA,KACf7B,mBAAmB,OAAA8B,eAAA,KACrBT,IAAI,CAAC3B,EAAE,EAAG,CAAC4B,WAAW,EAC1B,CAAC;QACN,CAAE;QAAAG,QAAA,EACFtC,IAAA,CAACN,aAAa;UAACkD,IAAI,EAAC,cAAc;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAEX,WAAW,GAAG,OAAO,GAAG;QAAO,CAAE;MAAC,CACxE,CAAC;IAAA,CACjB,CAAC;EAEf,CAAC;EACD,IAAME,MAAM,GAAG;IACXU,SAAS,EAAE;MACPC,IAAI,EAAE,CAAC;MACPC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE;IAChB,CAAC;IACDhB,IAAI,EAAE;MACFiB,OAAO,EAAE,EAAE;MACXC,cAAc,EAAE,CAAC;MACjBC,gBAAgB,EAAE,EAAE;MACpBC,SAAS,EAAE,EAAE;MACbC,eAAe,EAAE,OAAO;MACxBC,aAAa,EAAE,KAAK;MACpBP,cAAc,EAAE,eAAe;MAC/BC,UAAU,EAAE,QAAQ;MACpBO,YAAY,EAAE,EAAE;MAChBC,WAAW,EAAE,CAAC;MACdC,WAAW,EAAE,SAAS;MACtBC,KAAK,EAAE,GAAG;MACVC,MAAM,EAAE;IACZ,CAAC;IACDrD,KAAK,EAAE;MACH+B,QAAQ,EAAE;IACd,CAAC;IACDuB,MAAM,EAAE;MACJvB,QAAQ,EAAE,EAAE;MACZwB,UAAU,EAAE,MAAM;MAClBjB,KAAK,EAAE,OAAO;MACdkB,SAAS,EAAE;IACf;EACJ,CAAC;EACD,OACI9D,KAAA,CAACd,IAAI;IAACgD,KAAK,EAAE;MAAEY,IAAI,EAAE;IAAE,CAAE;IAAAV,QAAA,GACrBtC,IAAA,CAACL,MAAM,IAAE,CAAC,EACVO,KAAA,CAACX,eAAe;MAAC0E,MAAM,EAAEC,OAAO,oCAAoC,CAAE;MAAC9B,KAAK,EAAEC,MAAM,CAACU,SAAU;MAAAT,QAAA,GAC3FtC,IAAA,CAACX,IAAI;QAAC+C,KAAK,EAAEC,MAAM,CAACyB,MAAO;QAAAxB,QAAA,EAAC;MAAU,CAAM,CAAC,EAC7CtC,IAAA,CAACR,QAAQ;QACLyB,IAAI,EAAEX,UAAW;QACjB0B,UAAU,EAAEA,UAAW;QACvBmC,YAAY,EAAE,SAAAA,aAAAjC,IAAI;UAAA,OAAIA,IAAI,CAAC3B,EAAE;QAAA,CAAC;QAC9B6B,KAAK,EAAE;UAAEgC,MAAM,EAAE;QAAE,CAAE;QACrBC,UAAU,EAAE;MAAE,CACjB,CAAC,EACFrE,IAAA,CAACV,KAAK;QAAC2E,MAAM,EAAEC,OAAO,kCAAkC,CAAE;QAAC9B,KAAK,EAAE;UAAEkC,QAAQ,EAAE,UAAU;UAAEC,MAAM,EAAE,CAAC;UAAEX,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAI;MAAE,CAAE,CAAC,EACrI7D,IAAA,CAACV,KAAK;QAAC2E,MAAM,EAAEC,OAAO,mCAAmC,CAAE;QAAC9B,KAAK,EAAE;UAAEkC,QAAQ,EAAE,UAAU;UAAEC,MAAM,EAAE,CAAC,EAAE;UAAEX,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE;QAAI;MAAE,CAAE,CAAC;IAAA,CAC3H,CAAC,EAClB7D,IAAA,CAACH,QAAQ;MAAC2E,cAAc,EAAE;IAAI,CAAE,CAAC,EACjCxE,IAAA,CAACJ,MAAM;MAACwC,KAAK,EAAE;QAAEyB,MAAM,EAAE;MAAG,CAAE;MAACxD,UAAU,EAAEA;IAAW,CAAE,CAAC;EAAA,CACvD,CAAC;AAGf,CAAC;AAED,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}