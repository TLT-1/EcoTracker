{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useNavigation } from '@react-navigation/native';\nimport NavbarStyles from \"./Styles/NavbarStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Navbar = function Navbar() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMenuOpen = _useState2[0],\n    setMenuOpen = _useState2[1];\n  var navigation = useNavigation();\n  var toggleMenu = function toggleMenu() {\n    setMenuOpen(!isMenuOpen);\n  };\n  var navigateToPage = function navigateToPage(page) {\n    navigation.navigate(page);\n  };\n  var _useState3 = useState(Dimensions.get('window').width),\n    _useState4 = _slicedToArray(_useState3, 2),\n    windowWidth = _useState4[0],\n    setWindowWidth = _useState4[1];\n  useEffect(function () {\n    var handleResize = function handleResize() {\n      setWindowWidth(Dimensions.get('window').width);\n    };\n    Dimensions.addEventListener('change', handleResize);\n    return function () {\n      Dimensions.removeEventListener('change', handleResize);\n    };\n  }, []);\n  return _jsxs(View, {\n    style: NavbarStyles.navbar,\n    children: [_jsx(TouchableOpacity, {\n      onPress: toggleMenu,\n      children: _jsx(Text, {\n        style: NavbarStyles.menuIcon,\n        children: \"\\u2630\"\n      })\n    }), windowWidth >= 600 && _jsxs(View, {\n      style: {\n        flexDirection: 'row'\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigateToPage('Home');\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"Home\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigateToPage('Track');\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"Track\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigateToPage('News');\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"News\"\n        })\n      })]\n    }), isMenuOpen && _jsxs(View, {\n      style: [NavbarStyles.menuContainer, {\n        left: 0,\n        right: 'auto'\n      }],\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigateToPage('Home');\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"Home\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigateToPage('Track');\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"Track\"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigateToPage('News');\n        },\n        children: _jsx(Text, {\n          style: NavbarStyles.menuItem,\n          children: \"News\"\n        })\n      })]\n    })]\n  });\n};\nexport default Navbar;","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","Dimensions","useNavigation","NavbarStyles","jsx","_jsx","jsxs","_jsxs","Navbar","_useState","_useState2","_slicedToArray","isMenuOpen","setMenuOpen","navigation","toggleMenu","navigateToPage","page","navigate","_useState3","get","width","_useState4","windowWidth","setWindowWidth","handleResize","addEventListener","removeEventListener","style","navbar","children","onPress","menuIcon","flexDirection","menuItem","menuContainer","left","right"],"sources":["C:/Users/antho/Desktop/EcoTrack/EcoTracker/src/Components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // Don't forget to import useEffect\r\nimport { View, Text, TouchableOpacity, Dimensions } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport NavbarStyles from './Styles/NavbarStyles';\r\n\r\nconst Navbar = () => {\r\n    const [isMenuOpen, setMenuOpen] = useState(false);\r\n    const navigation = useNavigation();\r\n\r\n    const toggleMenu = () => {\r\n        setMenuOpen(!isMenuOpen);\r\n    };\r\n\r\n    const navigateToPage = (page) => {\r\n        navigation.navigate(page);\r\n    };\r\n\r\n    const [windowWidth, setWindowWidth] = useState(Dimensions.get('window').width);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            setWindowWidth(Dimensions.get('window').width);\r\n        };\r\n\r\n        Dimensions.addEventListener('change', handleResize);\r\n\r\n        return () => {\r\n            Dimensions.removeEventListener('change', handleResize);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <View style={NavbarStyles.navbar}>\r\n            <TouchableOpacity onPress={toggleMenu}>\r\n                <Text style={NavbarStyles.menuIcon}>â˜°</Text>\r\n            </TouchableOpacity>\r\n            {windowWidth >= 600 && (\r\n                <View style={{ flexDirection: 'row' }}>\r\n                    <TouchableOpacity onPress={() => navigateToPage('Home')}>\r\n                        <Text style={NavbarStyles.menuItem}>Home</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigateToPage('Track')}>\r\n                        <Text style={NavbarStyles.menuItem}>Track</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigateToPage('News')}>\r\n                        <Text style={NavbarStyles.menuItem}>News</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )}\r\n            {isMenuOpen && (\r\n                <View\r\n                    style={[\r\n                        NavbarStyles.menuContainer,\r\n                        { left: 0, right: 'auto' },\r\n                    ]}\r\n                >\r\n                    <TouchableOpacity onPress={() => navigateToPage('Home')}>\r\n                        <Text style={NavbarStyles.menuItem}>Home</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigateToPage('Track')}>\r\n                        <Text style={NavbarStyles.menuItem}>Track</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity onPress={() => navigateToPage('News')}>\r\n                        <Text style={NavbarStyles.menuItem}>News</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Navbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}